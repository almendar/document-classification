//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DCUpdate {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("amodDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class amodDataSet : global::System.Data.DataSet {
        
        private caseappsDataTable tablecaseapps;
        
        private caseattachmentDataTable tablecaseattachment;
        
        private caseattachmenthistoryDataTable tablecaseattachmenthistory;
        
        private casecommentDataTable tablecasecomment;
        
        private casedefinitionDataTable tablecasedefinition;
        
        private casehistoryDataTable tablecasehistory;
        
        private casehistorydetailsDataTable tablecasehistorydetails;
        
        private caseparamDataTable tablecaseparam;
        
        private casereadedDataTable tablecasereaded;
        
        private decisiontreeDataTable tabledecisiontree;
        
        private departmentDataTable tabledepartment;
        
        private ftsearchdataDataTable tableftsearchdata;
        
        private mailtemplatesDataTable tablemailtemplates;
        
        private nextprocedurestatusDataTable tablenextprocedurestatus;
        
        private notificationDataTable tablenotification;
        
        private parametersDataTable tableparameters;
        
        private proceduredefinitionDataTable tableproceduredefinition;
        
        private procedureparamDataTable tableprocedureparam;
        
        private procedurestatusDataTable tableprocedurestatus;
        
        private procstatususergroupDataTable tableprocstatususergroup;
        
        private reminderDataTable tablereminder;
        
        private reportdefinitionDataTable tablereportdefinition;
        
        private reportparamDataTable tablereportparam;
        
        private systemlogDataTable tablesystemlog;
        
        private useractionDataTable tableuseraction;
        
        private usergroupDataTable tableusergroup;
        
        private usergroupconnectionDataTable tableusergroupconnection;
        
        private workflowuserDataTable tableworkflowuser;
        
        private global::System.Data.DataRelation relationappProcedureFK;
        
        private global::System.Data.DataRelation relationappStageFK;
        
        private global::System.Data.DataRelation relationAttCaseIdFK;
        
        private global::System.Data.DataRelation relationAttCreatedBy;
        
        private global::System.Data.DataRelation relationAttLockedBy;
        
        private global::System.Data.DataRelation relationAttModifiedBy;
        
        private global::System.Data.DataRelation relationAttCaseHistIdFK;
        
        private global::System.Data.DataRelation relationAttCreatedByH;
        
        private global::System.Data.DataRelation relationAttModifiedByH;
        
        private global::System.Data.DataRelation relationCommentCaseId1;
        
        private global::System.Data.DataRelation relationCommentUser;
        
        private global::System.Data.DataRelation relationcaseCreatedById;
        
        private global::System.Data.DataRelation relationcaseForwaredById;
        
        private global::System.Data.DataRelation relationcaseModifiedById;
        
        private global::System.Data.DataRelation relationcaseOwnerIdFK;
        
        private global::System.Data.DataRelation relationcaseProcedureIdFK;
        
        private global::System.Data.DataRelation relationAuthorH;
        
        private global::System.Data.DataRelation relationCaseHistCaseId;
        
        private global::System.Data.DataRelation relationEditorH;
        
        private global::System.Data.DataRelation relationForwarderH;
        
        private global::System.Data.DataRelation relationOwnerH;
        
        private global::System.Data.DataRelation relationAuthorHD;
        
        private global::System.Data.DataRelation relationCaseHistDetCaseId;
        
        private global::System.Data.DataRelation relationEditorHD;
        
        private global::System.Data.DataRelation relationOwnerHD;
        
        private global::System.Data.DataRelation relationReadedCaseId;
        
        private global::System.Data.DataRelation relationdepartManagerId;
        
        private global::System.Data.DataRelation relationdepartParentId;
        
        private global::System.Data.DataRelation relationProcStatusFromId;
        
        private global::System.Data.DataRelation relationProcStatusToId;
        
        private global::System.Data.DataRelation relationParamProcedureId;
        
        private global::System.Data.DataRelation relationProcStatusProcedureId;
        
        private global::System.Data.DataRelation relationpsguProcStatusId;
        
        private global::System.Data.DataRelation relationActionUser;
        
        private global::System.Data.DataRelation relationGroup;
        
        private global::System.Data.DataRelation relationUser;
        
        private global::System.Data.DataRelation relationDepartment;
        
        private global::System.Data.DataRelation relationManager;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public amodDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected amodDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["caseapps"] != null)) {
                    base.Tables.Add(new caseappsDataTable(ds.Tables["caseapps"]));
                }
                if ((ds.Tables["caseattachment"] != null)) {
                    base.Tables.Add(new caseattachmentDataTable(ds.Tables["caseattachment"]));
                }
                if ((ds.Tables["caseattachmenthistory"] != null)) {
                    base.Tables.Add(new caseattachmenthistoryDataTable(ds.Tables["caseattachmenthistory"]));
                }
                if ((ds.Tables["casecomment"] != null)) {
                    base.Tables.Add(new casecommentDataTable(ds.Tables["casecomment"]));
                }
                if ((ds.Tables["casedefinition"] != null)) {
                    base.Tables.Add(new casedefinitionDataTable(ds.Tables["casedefinition"]));
                }
                if ((ds.Tables["casehistory"] != null)) {
                    base.Tables.Add(new casehistoryDataTable(ds.Tables["casehistory"]));
                }
                if ((ds.Tables["casehistorydetails"] != null)) {
                    base.Tables.Add(new casehistorydetailsDataTable(ds.Tables["casehistorydetails"]));
                }
                if ((ds.Tables["caseparam"] != null)) {
                    base.Tables.Add(new caseparamDataTable(ds.Tables["caseparam"]));
                }
                if ((ds.Tables["casereaded"] != null)) {
                    base.Tables.Add(new casereadedDataTable(ds.Tables["casereaded"]));
                }
                if ((ds.Tables["decisiontree"] != null)) {
                    base.Tables.Add(new decisiontreeDataTable(ds.Tables["decisiontree"]));
                }
                if ((ds.Tables["department"] != null)) {
                    base.Tables.Add(new departmentDataTable(ds.Tables["department"]));
                }
                if ((ds.Tables["ftsearchdata"] != null)) {
                    base.Tables.Add(new ftsearchdataDataTable(ds.Tables["ftsearchdata"]));
                }
                if ((ds.Tables["mailtemplates"] != null)) {
                    base.Tables.Add(new mailtemplatesDataTable(ds.Tables["mailtemplates"]));
                }
                if ((ds.Tables["nextprocedurestatus"] != null)) {
                    base.Tables.Add(new nextprocedurestatusDataTable(ds.Tables["nextprocedurestatus"]));
                }
                if ((ds.Tables["notification"] != null)) {
                    base.Tables.Add(new notificationDataTable(ds.Tables["notification"]));
                }
                if ((ds.Tables["parameters"] != null)) {
                    base.Tables.Add(new parametersDataTable(ds.Tables["parameters"]));
                }
                if ((ds.Tables["proceduredefinition"] != null)) {
                    base.Tables.Add(new proceduredefinitionDataTable(ds.Tables["proceduredefinition"]));
                }
                if ((ds.Tables["procedureparam"] != null)) {
                    base.Tables.Add(new procedureparamDataTable(ds.Tables["procedureparam"]));
                }
                if ((ds.Tables["procedurestatus"] != null)) {
                    base.Tables.Add(new procedurestatusDataTable(ds.Tables["procedurestatus"]));
                }
                if ((ds.Tables["procstatususergroup"] != null)) {
                    base.Tables.Add(new procstatususergroupDataTable(ds.Tables["procstatususergroup"]));
                }
                if ((ds.Tables["reminder"] != null)) {
                    base.Tables.Add(new reminderDataTable(ds.Tables["reminder"]));
                }
                if ((ds.Tables["reportdefinition"] != null)) {
                    base.Tables.Add(new reportdefinitionDataTable(ds.Tables["reportdefinition"]));
                }
                if ((ds.Tables["reportparam"] != null)) {
                    base.Tables.Add(new reportparamDataTable(ds.Tables["reportparam"]));
                }
                if ((ds.Tables["systemlog"] != null)) {
                    base.Tables.Add(new systemlogDataTable(ds.Tables["systemlog"]));
                }
                if ((ds.Tables["useraction"] != null)) {
                    base.Tables.Add(new useractionDataTable(ds.Tables["useraction"]));
                }
                if ((ds.Tables["usergroup"] != null)) {
                    base.Tables.Add(new usergroupDataTable(ds.Tables["usergroup"]));
                }
                if ((ds.Tables["usergroupconnection"] != null)) {
                    base.Tables.Add(new usergroupconnectionDataTable(ds.Tables["usergroupconnection"]));
                }
                if ((ds.Tables["workflowuser"] != null)) {
                    base.Tables.Add(new workflowuserDataTable(ds.Tables["workflowuser"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public caseappsDataTable caseapps {
            get {
                return this.tablecaseapps;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public caseattachmentDataTable caseattachment {
            get {
                return this.tablecaseattachment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public caseattachmenthistoryDataTable caseattachmenthistory {
            get {
                return this.tablecaseattachmenthistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public casecommentDataTable casecomment {
            get {
                return this.tablecasecomment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public casedefinitionDataTable casedefinition {
            get {
                return this.tablecasedefinition;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public casehistoryDataTable casehistory {
            get {
                return this.tablecasehistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public casehistorydetailsDataTable casehistorydetails {
            get {
                return this.tablecasehistorydetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public caseparamDataTable caseparam {
            get {
                return this.tablecaseparam;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public casereadedDataTable casereaded {
            get {
                return this.tablecasereaded;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public decisiontreeDataTable decisiontree {
            get {
                return this.tabledecisiontree;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public departmentDataTable department {
            get {
                return this.tabledepartment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ftsearchdataDataTable ftsearchdata {
            get {
                return this.tableftsearchdata;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mailtemplatesDataTable mailtemplates {
            get {
                return this.tablemailtemplates;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public nextprocedurestatusDataTable nextprocedurestatus {
            get {
                return this.tablenextprocedurestatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public notificationDataTable notification {
            get {
                return this.tablenotification;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public parametersDataTable parameters {
            get {
                return this.tableparameters;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public proceduredefinitionDataTable proceduredefinition {
            get {
                return this.tableproceduredefinition;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public procedureparamDataTable procedureparam {
            get {
                return this.tableprocedureparam;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public procedurestatusDataTable procedurestatus {
            get {
                return this.tableprocedurestatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public procstatususergroupDataTable procstatususergroup {
            get {
                return this.tableprocstatususergroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public reminderDataTable reminder {
            get {
                return this.tablereminder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public reportdefinitionDataTable reportdefinition {
            get {
                return this.tablereportdefinition;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public reportparamDataTable reportparam {
            get {
                return this.tablereportparam;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public systemlogDataTable systemlog {
            get {
                return this.tablesystemlog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public useractionDataTable useraction {
            get {
                return this.tableuseraction;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usergroupDataTable usergroup {
            get {
                return this.tableusergroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public usergroupconnectionDataTable usergroupconnection {
            get {
                return this.tableusergroupconnection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public workflowuserDataTable workflowuser {
            get {
                return this.tableworkflowuser;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            amodDataSet cln = ((amodDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["caseapps"] != null)) {
                    base.Tables.Add(new caseappsDataTable(ds.Tables["caseapps"]));
                }
                if ((ds.Tables["caseattachment"] != null)) {
                    base.Tables.Add(new caseattachmentDataTable(ds.Tables["caseattachment"]));
                }
                if ((ds.Tables["caseattachmenthistory"] != null)) {
                    base.Tables.Add(new caseattachmenthistoryDataTable(ds.Tables["caseattachmenthistory"]));
                }
                if ((ds.Tables["casecomment"] != null)) {
                    base.Tables.Add(new casecommentDataTable(ds.Tables["casecomment"]));
                }
                if ((ds.Tables["casedefinition"] != null)) {
                    base.Tables.Add(new casedefinitionDataTable(ds.Tables["casedefinition"]));
                }
                if ((ds.Tables["casehistory"] != null)) {
                    base.Tables.Add(new casehistoryDataTable(ds.Tables["casehistory"]));
                }
                if ((ds.Tables["casehistorydetails"] != null)) {
                    base.Tables.Add(new casehistorydetailsDataTable(ds.Tables["casehistorydetails"]));
                }
                if ((ds.Tables["caseparam"] != null)) {
                    base.Tables.Add(new caseparamDataTable(ds.Tables["caseparam"]));
                }
                if ((ds.Tables["casereaded"] != null)) {
                    base.Tables.Add(new casereadedDataTable(ds.Tables["casereaded"]));
                }
                if ((ds.Tables["decisiontree"] != null)) {
                    base.Tables.Add(new decisiontreeDataTable(ds.Tables["decisiontree"]));
                }
                if ((ds.Tables["department"] != null)) {
                    base.Tables.Add(new departmentDataTable(ds.Tables["department"]));
                }
                if ((ds.Tables["ftsearchdata"] != null)) {
                    base.Tables.Add(new ftsearchdataDataTable(ds.Tables["ftsearchdata"]));
                }
                if ((ds.Tables["mailtemplates"] != null)) {
                    base.Tables.Add(new mailtemplatesDataTable(ds.Tables["mailtemplates"]));
                }
                if ((ds.Tables["nextprocedurestatus"] != null)) {
                    base.Tables.Add(new nextprocedurestatusDataTable(ds.Tables["nextprocedurestatus"]));
                }
                if ((ds.Tables["notification"] != null)) {
                    base.Tables.Add(new notificationDataTable(ds.Tables["notification"]));
                }
                if ((ds.Tables["parameters"] != null)) {
                    base.Tables.Add(new parametersDataTable(ds.Tables["parameters"]));
                }
                if ((ds.Tables["proceduredefinition"] != null)) {
                    base.Tables.Add(new proceduredefinitionDataTable(ds.Tables["proceduredefinition"]));
                }
                if ((ds.Tables["procedureparam"] != null)) {
                    base.Tables.Add(new procedureparamDataTable(ds.Tables["procedureparam"]));
                }
                if ((ds.Tables["procedurestatus"] != null)) {
                    base.Tables.Add(new procedurestatusDataTable(ds.Tables["procedurestatus"]));
                }
                if ((ds.Tables["procstatususergroup"] != null)) {
                    base.Tables.Add(new procstatususergroupDataTable(ds.Tables["procstatususergroup"]));
                }
                if ((ds.Tables["reminder"] != null)) {
                    base.Tables.Add(new reminderDataTable(ds.Tables["reminder"]));
                }
                if ((ds.Tables["reportdefinition"] != null)) {
                    base.Tables.Add(new reportdefinitionDataTable(ds.Tables["reportdefinition"]));
                }
                if ((ds.Tables["reportparam"] != null)) {
                    base.Tables.Add(new reportparamDataTable(ds.Tables["reportparam"]));
                }
                if ((ds.Tables["systemlog"] != null)) {
                    base.Tables.Add(new systemlogDataTable(ds.Tables["systemlog"]));
                }
                if ((ds.Tables["useraction"] != null)) {
                    base.Tables.Add(new useractionDataTable(ds.Tables["useraction"]));
                }
                if ((ds.Tables["usergroup"] != null)) {
                    base.Tables.Add(new usergroupDataTable(ds.Tables["usergroup"]));
                }
                if ((ds.Tables["usergroupconnection"] != null)) {
                    base.Tables.Add(new usergroupconnectionDataTable(ds.Tables["usergroupconnection"]));
                }
                if ((ds.Tables["workflowuser"] != null)) {
                    base.Tables.Add(new workflowuserDataTable(ds.Tables["workflowuser"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablecaseapps = ((caseappsDataTable)(base.Tables["caseapps"]));
            if ((initTable == true)) {
                if ((this.tablecaseapps != null)) {
                    this.tablecaseapps.InitVars();
                }
            }
            this.tablecaseattachment = ((caseattachmentDataTable)(base.Tables["caseattachment"]));
            if ((initTable == true)) {
                if ((this.tablecaseattachment != null)) {
                    this.tablecaseattachment.InitVars();
                }
            }
            this.tablecaseattachmenthistory = ((caseattachmenthistoryDataTable)(base.Tables["caseattachmenthistory"]));
            if ((initTable == true)) {
                if ((this.tablecaseattachmenthistory != null)) {
                    this.tablecaseattachmenthistory.InitVars();
                }
            }
            this.tablecasecomment = ((casecommentDataTable)(base.Tables["casecomment"]));
            if ((initTable == true)) {
                if ((this.tablecasecomment != null)) {
                    this.tablecasecomment.InitVars();
                }
            }
            this.tablecasedefinition = ((casedefinitionDataTable)(base.Tables["casedefinition"]));
            if ((initTable == true)) {
                if ((this.tablecasedefinition != null)) {
                    this.tablecasedefinition.InitVars();
                }
            }
            this.tablecasehistory = ((casehistoryDataTable)(base.Tables["casehistory"]));
            if ((initTable == true)) {
                if ((this.tablecasehistory != null)) {
                    this.tablecasehistory.InitVars();
                }
            }
            this.tablecasehistorydetails = ((casehistorydetailsDataTable)(base.Tables["casehistorydetails"]));
            if ((initTable == true)) {
                if ((this.tablecasehistorydetails != null)) {
                    this.tablecasehistorydetails.InitVars();
                }
            }
            this.tablecaseparam = ((caseparamDataTable)(base.Tables["caseparam"]));
            if ((initTable == true)) {
                if ((this.tablecaseparam != null)) {
                    this.tablecaseparam.InitVars();
                }
            }
            this.tablecasereaded = ((casereadedDataTable)(base.Tables["casereaded"]));
            if ((initTable == true)) {
                if ((this.tablecasereaded != null)) {
                    this.tablecasereaded.InitVars();
                }
            }
            this.tabledecisiontree = ((decisiontreeDataTable)(base.Tables["decisiontree"]));
            if ((initTable == true)) {
                if ((this.tabledecisiontree != null)) {
                    this.tabledecisiontree.InitVars();
                }
            }
            this.tabledepartment = ((departmentDataTable)(base.Tables["department"]));
            if ((initTable == true)) {
                if ((this.tabledepartment != null)) {
                    this.tabledepartment.InitVars();
                }
            }
            this.tableftsearchdata = ((ftsearchdataDataTable)(base.Tables["ftsearchdata"]));
            if ((initTable == true)) {
                if ((this.tableftsearchdata != null)) {
                    this.tableftsearchdata.InitVars();
                }
            }
            this.tablemailtemplates = ((mailtemplatesDataTable)(base.Tables["mailtemplates"]));
            if ((initTable == true)) {
                if ((this.tablemailtemplates != null)) {
                    this.tablemailtemplates.InitVars();
                }
            }
            this.tablenextprocedurestatus = ((nextprocedurestatusDataTable)(base.Tables["nextprocedurestatus"]));
            if ((initTable == true)) {
                if ((this.tablenextprocedurestatus != null)) {
                    this.tablenextprocedurestatus.InitVars();
                }
            }
            this.tablenotification = ((notificationDataTable)(base.Tables["notification"]));
            if ((initTable == true)) {
                if ((this.tablenotification != null)) {
                    this.tablenotification.InitVars();
                }
            }
            this.tableparameters = ((parametersDataTable)(base.Tables["parameters"]));
            if ((initTable == true)) {
                if ((this.tableparameters != null)) {
                    this.tableparameters.InitVars();
                }
            }
            this.tableproceduredefinition = ((proceduredefinitionDataTable)(base.Tables["proceduredefinition"]));
            if ((initTable == true)) {
                if ((this.tableproceduredefinition != null)) {
                    this.tableproceduredefinition.InitVars();
                }
            }
            this.tableprocedureparam = ((procedureparamDataTable)(base.Tables["procedureparam"]));
            if ((initTable == true)) {
                if ((this.tableprocedureparam != null)) {
                    this.tableprocedureparam.InitVars();
                }
            }
            this.tableprocedurestatus = ((procedurestatusDataTable)(base.Tables["procedurestatus"]));
            if ((initTable == true)) {
                if ((this.tableprocedurestatus != null)) {
                    this.tableprocedurestatus.InitVars();
                }
            }
            this.tableprocstatususergroup = ((procstatususergroupDataTable)(base.Tables["procstatususergroup"]));
            if ((initTable == true)) {
                if ((this.tableprocstatususergroup != null)) {
                    this.tableprocstatususergroup.InitVars();
                }
            }
            this.tablereminder = ((reminderDataTable)(base.Tables["reminder"]));
            if ((initTable == true)) {
                if ((this.tablereminder != null)) {
                    this.tablereminder.InitVars();
                }
            }
            this.tablereportdefinition = ((reportdefinitionDataTable)(base.Tables["reportdefinition"]));
            if ((initTable == true)) {
                if ((this.tablereportdefinition != null)) {
                    this.tablereportdefinition.InitVars();
                }
            }
            this.tablereportparam = ((reportparamDataTable)(base.Tables["reportparam"]));
            if ((initTable == true)) {
                if ((this.tablereportparam != null)) {
                    this.tablereportparam.InitVars();
                }
            }
            this.tablesystemlog = ((systemlogDataTable)(base.Tables["systemlog"]));
            if ((initTable == true)) {
                if ((this.tablesystemlog != null)) {
                    this.tablesystemlog.InitVars();
                }
            }
            this.tableuseraction = ((useractionDataTable)(base.Tables["useraction"]));
            if ((initTable == true)) {
                if ((this.tableuseraction != null)) {
                    this.tableuseraction.InitVars();
                }
            }
            this.tableusergroup = ((usergroupDataTable)(base.Tables["usergroup"]));
            if ((initTable == true)) {
                if ((this.tableusergroup != null)) {
                    this.tableusergroup.InitVars();
                }
            }
            this.tableusergroupconnection = ((usergroupconnectionDataTable)(base.Tables["usergroupconnection"]));
            if ((initTable == true)) {
                if ((this.tableusergroupconnection != null)) {
                    this.tableusergroupconnection.InitVars();
                }
            }
            this.tableworkflowuser = ((workflowuserDataTable)(base.Tables["workflowuser"]));
            if ((initTable == true)) {
                if ((this.tableworkflowuser != null)) {
                    this.tableworkflowuser.InitVars();
                }
            }
            this.relationappProcedureFK = this.Relations["appProcedureFK"];
            this.relationappStageFK = this.Relations["appStageFK"];
            this.relationAttCaseIdFK = this.Relations["AttCaseIdFK"];
            this.relationAttCreatedBy = this.Relations["AttCreatedBy"];
            this.relationAttLockedBy = this.Relations["AttLockedBy"];
            this.relationAttModifiedBy = this.Relations["AttModifiedBy"];
            this.relationAttCaseHistIdFK = this.Relations["AttCaseHistIdFK"];
            this.relationAttCreatedByH = this.Relations["AttCreatedByH"];
            this.relationAttModifiedByH = this.Relations["AttModifiedByH"];
            this.relationCommentCaseId1 = this.Relations["CommentCaseId1"];
            this.relationCommentUser = this.Relations["CommentUser"];
            this.relationcaseCreatedById = this.Relations["caseCreatedById"];
            this.relationcaseForwaredById = this.Relations["caseForwaredById"];
            this.relationcaseModifiedById = this.Relations["caseModifiedById"];
            this.relationcaseOwnerIdFK = this.Relations["caseOwnerIdFK"];
            this.relationcaseProcedureIdFK = this.Relations["caseProcedureIdFK"];
            this.relationAuthorH = this.Relations["AuthorH"];
            this.relationCaseHistCaseId = this.Relations["CaseHistCaseId"];
            this.relationEditorH = this.Relations["EditorH"];
            this.relationForwarderH = this.Relations["ForwarderH"];
            this.relationOwnerH = this.Relations["OwnerH"];
            this.relationAuthorHD = this.Relations["AuthorHD"];
            this.relationCaseHistDetCaseId = this.Relations["CaseHistDetCaseId"];
            this.relationEditorHD = this.Relations["EditorHD"];
            this.relationOwnerHD = this.Relations["OwnerHD"];
            this.relationReadedCaseId = this.Relations["ReadedCaseId"];
            this.relationdepartManagerId = this.Relations["departManagerId"];
            this.relationdepartParentId = this.Relations["departParentId"];
            this.relationProcStatusFromId = this.Relations["ProcStatusFromId"];
            this.relationProcStatusToId = this.Relations["ProcStatusToId"];
            this.relationParamProcedureId = this.Relations["ParamProcedureId"];
            this.relationProcStatusProcedureId = this.Relations["ProcStatusProcedureId"];
            this.relationpsguProcStatusId = this.Relations["psguProcStatusId"];
            this.relationActionUser = this.Relations["ActionUser"];
            this.relationGroup = this.Relations["Group"];
            this.relationUser = this.Relations["User"];
            this.relationDepartment = this.Relations["Department"];
            this.relationManager = this.Relations["Manager"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "amodDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/amodDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablecaseapps = new caseappsDataTable();
            base.Tables.Add(this.tablecaseapps);
            this.tablecaseattachment = new caseattachmentDataTable();
            base.Tables.Add(this.tablecaseattachment);
            this.tablecaseattachmenthistory = new caseattachmenthistoryDataTable();
            base.Tables.Add(this.tablecaseattachmenthistory);
            this.tablecasecomment = new casecommentDataTable();
            base.Tables.Add(this.tablecasecomment);
            this.tablecasedefinition = new casedefinitionDataTable();
            base.Tables.Add(this.tablecasedefinition);
            this.tablecasehistory = new casehistoryDataTable();
            base.Tables.Add(this.tablecasehistory);
            this.tablecasehistorydetails = new casehistorydetailsDataTable();
            base.Tables.Add(this.tablecasehistorydetails);
            this.tablecaseparam = new caseparamDataTable();
            base.Tables.Add(this.tablecaseparam);
            this.tablecasereaded = new casereadedDataTable();
            base.Tables.Add(this.tablecasereaded);
            this.tabledecisiontree = new decisiontreeDataTable();
            base.Tables.Add(this.tabledecisiontree);
            this.tabledepartment = new departmentDataTable();
            base.Tables.Add(this.tabledepartment);
            this.tableftsearchdata = new ftsearchdataDataTable();
            base.Tables.Add(this.tableftsearchdata);
            this.tablemailtemplates = new mailtemplatesDataTable();
            base.Tables.Add(this.tablemailtemplates);
            this.tablenextprocedurestatus = new nextprocedurestatusDataTable();
            base.Tables.Add(this.tablenextprocedurestatus);
            this.tablenotification = new notificationDataTable();
            base.Tables.Add(this.tablenotification);
            this.tableparameters = new parametersDataTable();
            base.Tables.Add(this.tableparameters);
            this.tableproceduredefinition = new proceduredefinitionDataTable();
            base.Tables.Add(this.tableproceduredefinition);
            this.tableprocedureparam = new procedureparamDataTable();
            base.Tables.Add(this.tableprocedureparam);
            this.tableprocedurestatus = new procedurestatusDataTable();
            base.Tables.Add(this.tableprocedurestatus);
            this.tableprocstatususergroup = new procstatususergroupDataTable();
            base.Tables.Add(this.tableprocstatususergroup);
            this.tablereminder = new reminderDataTable();
            base.Tables.Add(this.tablereminder);
            this.tablereportdefinition = new reportdefinitionDataTable();
            base.Tables.Add(this.tablereportdefinition);
            this.tablereportparam = new reportparamDataTable();
            base.Tables.Add(this.tablereportparam);
            this.tablesystemlog = new systemlogDataTable();
            base.Tables.Add(this.tablesystemlog);
            this.tableuseraction = new useractionDataTable();
            base.Tables.Add(this.tableuseraction);
            this.tableusergroup = new usergroupDataTable();
            base.Tables.Add(this.tableusergroup);
            this.tableusergroupconnection = new usergroupconnectionDataTable();
            base.Tables.Add(this.tableusergroupconnection);
            this.tableworkflowuser = new workflowuserDataTable();
            base.Tables.Add(this.tableworkflowuser);
            this.relationappProcedureFK = new global::System.Data.DataRelation("appProcedureFK", new global::System.Data.DataColumn[] {
                        this.tableproceduredefinition.prcIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecaseapps.appProcedureIdColumn}, false);
            this.Relations.Add(this.relationappProcedureFK);
            this.relationappStageFK = new global::System.Data.DataRelation("appStageFK", new global::System.Data.DataColumn[] {
                        this.tableprocedurestatus.pstIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecaseapps.appStageIdColumn}, false);
            this.Relations.Add(this.relationappStageFK);
            this.relationAttCaseIdFK = new global::System.Data.DataRelation("AttCaseIdFK", new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecaseattachment.attCaseIdColumn}, false);
            this.Relations.Add(this.relationAttCaseIdFK);
            this.relationAttCreatedBy = new global::System.Data.DataRelation("AttCreatedBy", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecaseattachment.attCreatedByIdColumn}, false);
            this.Relations.Add(this.relationAttCreatedBy);
            this.relationAttLockedBy = new global::System.Data.DataRelation("AttLockedBy", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecaseattachment.attLockedByIdColumn}, false);
            this.Relations.Add(this.relationAttLockedBy);
            this.relationAttModifiedBy = new global::System.Data.DataRelation("AttModifiedBy", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecaseattachment.attModifiedByIdColumn}, false);
            this.Relations.Add(this.relationAttModifiedBy);
            this.relationAttCaseHistIdFK = new global::System.Data.DataRelation("AttCaseHistIdFK", new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecaseattachmenthistory.attCaseIdColumn}, false);
            this.Relations.Add(this.relationAttCaseHistIdFK);
            this.relationAttCreatedByH = new global::System.Data.DataRelation("AttCreatedByH", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecaseattachmenthistory.attCreatedByIdColumn}, false);
            this.Relations.Add(this.relationAttCreatedByH);
            this.relationAttModifiedByH = new global::System.Data.DataRelation("AttModifiedByH", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecaseattachmenthistory.attModifiedByIdColumn}, false);
            this.Relations.Add(this.relationAttModifiedByH);
            this.relationCommentCaseId1 = new global::System.Data.DataRelation("CommentCaseId1", new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasecomment.comCaseIdColumn}, false);
            this.Relations.Add(this.relationCommentCaseId1);
            this.relationCommentUser = new global::System.Data.DataRelation("CommentUser", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasecomment.comUserIdColumn}, false);
            this.Relations.Add(this.relationCommentUser);
            this.relationcaseCreatedById = new global::System.Data.DataRelation("caseCreatedById", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseCreatedByIdColumn}, false);
            this.Relations.Add(this.relationcaseCreatedById);
            this.relationcaseForwaredById = new global::System.Data.DataRelation("caseForwaredById", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseForwardedByIdColumn}, false);
            this.Relations.Add(this.relationcaseForwaredById);
            this.relationcaseModifiedById = new global::System.Data.DataRelation("caseModifiedById", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseModifiedByIdColumn}, false);
            this.Relations.Add(this.relationcaseModifiedById);
            this.relationcaseOwnerIdFK = new global::System.Data.DataRelation("caseOwnerIdFK", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseOwnerIdColumn}, false);
            this.Relations.Add(this.relationcaseOwnerIdFK);
            this.relationcaseProcedureIdFK = new global::System.Data.DataRelation("caseProcedureIdFK", new global::System.Data.DataColumn[] {
                        this.tableproceduredefinition.prcIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseProcedureIdColumn}, false);
            this.Relations.Add(this.relationcaseProcedureIdFK);
            this.relationAuthorH = new global::System.Data.DataRelation("AuthorH", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasehistory.caseCreatedByIdColumn}, false);
            this.Relations.Add(this.relationAuthorH);
            this.relationCaseHistCaseId = new global::System.Data.DataRelation("CaseHistCaseId", new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasehistory.caseIdColumn}, false);
            this.Relations.Add(this.relationCaseHistCaseId);
            this.relationEditorH = new global::System.Data.DataRelation("EditorH", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasehistory.caseModifiedByIdColumn}, false);
            this.Relations.Add(this.relationEditorH);
            this.relationForwarderH = new global::System.Data.DataRelation("ForwarderH", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasehistory.caseForwardedByIdColumn}, false);
            this.Relations.Add(this.relationForwarderH);
            this.relationOwnerH = new global::System.Data.DataRelation("OwnerH", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasehistory.caseOwnerIdColumn}, false);
            this.Relations.Add(this.relationOwnerH);
            this.relationAuthorHD = new global::System.Data.DataRelation("AuthorHD", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasehistorydetails.caseCreatedByIdColumn}, false);
            this.Relations.Add(this.relationAuthorHD);
            this.relationCaseHistDetCaseId = new global::System.Data.DataRelation("CaseHistDetCaseId", new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasehistorydetails.caseIdColumn}, false);
            this.Relations.Add(this.relationCaseHistDetCaseId);
            this.relationEditorHD = new global::System.Data.DataRelation("EditorHD", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasehistorydetails.caseModifiedByIdColumn}, false);
            this.Relations.Add(this.relationEditorHD);
            this.relationOwnerHD = new global::System.Data.DataRelation("OwnerHD", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasehistorydetails.caseOwnerIdColumn}, false);
            this.Relations.Add(this.relationOwnerHD);
            this.relationReadedCaseId = new global::System.Data.DataRelation("ReadedCaseId", new global::System.Data.DataColumn[] {
                        this.tablecasedefinition.caseIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablecasereaded.crdCaseIdColumn}, false);
            this.Relations.Add(this.relationReadedCaseId);
            this.relationdepartManagerId = new global::System.Data.DataRelation("departManagerId", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledepartment.departManagerIdColumn}, false);
            this.Relations.Add(this.relationdepartManagerId);
            this.relationdepartParentId = new global::System.Data.DataRelation("departParentId", new global::System.Data.DataColumn[] {
                        this.tabledepartment.departIdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledepartment.departParentIdColumn}, false);
            this.Relations.Add(this.relationdepartParentId);
            this.relationProcStatusFromId = new global::System.Data.DataRelation("ProcStatusFromId", new global::System.Data.DataColumn[] {
                        this.tableprocedurestatus.pstIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablenextprocedurestatus.npstFromProcStatusColumn}, false);
            this.Relations.Add(this.relationProcStatusFromId);
            this.relationProcStatusToId = new global::System.Data.DataRelation("ProcStatusToId", new global::System.Data.DataColumn[] {
                        this.tableprocedurestatus.pstIdColumn}, new global::System.Data.DataColumn[] {
                        this.tablenextprocedurestatus.npstToProcStatusColumn}, false);
            this.Relations.Add(this.relationProcStatusToId);
            this.relationParamProcedureId = new global::System.Data.DataRelation("ParamProcedureId", new global::System.Data.DataColumn[] {
                        this.tableproceduredefinition.prcIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableprocedureparam.ppaProcedureIdColumn}, false);
            this.Relations.Add(this.relationParamProcedureId);
            this.relationProcStatusProcedureId = new global::System.Data.DataRelation("ProcStatusProcedureId", new global::System.Data.DataColumn[] {
                        this.tableproceduredefinition.prcIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableprocedurestatus.pstProcedureIdColumn}, false);
            this.Relations.Add(this.relationProcStatusProcedureId);
            this.relationpsguProcStatusId = new global::System.Data.DataRelation("psguProcStatusId", new global::System.Data.DataColumn[] {
                        this.tableprocedurestatus.pstIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableprocstatususergroup.psguProcStatusIdColumn}, false);
            this.Relations.Add(this.relationpsguProcStatusId);
            this.relationActionUser = new global::System.Data.DataRelation("ActionUser", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableuseraction.actUserIdColumn}, false);
            this.Relations.Add(this.relationActionUser);
            this.relationGroup = new global::System.Data.DataRelation("Group", new global::System.Data.DataColumn[] {
                        this.tableusergroup.ugrIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableusergroupconnection.ugcGroupIdColumn}, false);
            this.Relations.Add(this.relationGroup);
            this.relationUser = new global::System.Data.DataRelation("User", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableusergroupconnection.ugcUserIdColumn}, false);
            this.Relations.Add(this.relationUser);
            this.relationDepartment = new global::System.Data.DataRelation("Department", new global::System.Data.DataColumn[] {
                        this.tabledepartment.departIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userDepartmentIdColumn}, false);
            this.Relations.Add(this.relationDepartment);
            this.relationManager = new global::System.Data.DataRelation("Manager", new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableworkflowuser.userManagerIdColumn}, false);
            this.Relations.Add(this.relationManager);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecaseapps() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecaseattachment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecaseattachmenthistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecasecomment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecasedefinition() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecasehistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecasehistorydetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecaseparam() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializecasereaded() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedecisiontree() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedepartment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeftsearchdata() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializemailtemplates() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializenextprocedurestatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializenotification() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeparameters() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproceduredefinition() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeprocedureparam() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeprocedurestatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeprocstatususergroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializereminder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializereportdefinition() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializereportparam() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializesystemlog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeuseraction() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeusergroup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeusergroupconnection() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeworkflowuser() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            amodDataSet ds = new amodDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void caseappsRowChangeEventHandler(object sender, caseappsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void caseattachmentRowChangeEventHandler(object sender, caseattachmentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void caseattachmenthistoryRowChangeEventHandler(object sender, caseattachmenthistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void casecommentRowChangeEventHandler(object sender, casecommentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void casedefinitionRowChangeEventHandler(object sender, casedefinitionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void casehistoryRowChangeEventHandler(object sender, casehistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void casehistorydetailsRowChangeEventHandler(object sender, casehistorydetailsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void caseparamRowChangeEventHandler(object sender, caseparamRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void casereadedRowChangeEventHandler(object sender, casereadedRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void decisiontreeRowChangeEventHandler(object sender, decisiontreeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void departmentRowChangeEventHandler(object sender, departmentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ftsearchdataRowChangeEventHandler(object sender, ftsearchdataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void mailtemplatesRowChangeEventHandler(object sender, mailtemplatesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void nextprocedurestatusRowChangeEventHandler(object sender, nextprocedurestatusRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void notificationRowChangeEventHandler(object sender, notificationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void parametersRowChangeEventHandler(object sender, parametersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void proceduredefinitionRowChangeEventHandler(object sender, proceduredefinitionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void procedureparamRowChangeEventHandler(object sender, procedureparamRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void procedurestatusRowChangeEventHandler(object sender, procedurestatusRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void procstatususergroupRowChangeEventHandler(object sender, procstatususergroupRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void reminderRowChangeEventHandler(object sender, reminderRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void reportdefinitionRowChangeEventHandler(object sender, reportdefinitionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void reportparamRowChangeEventHandler(object sender, reportparamRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void systemlogRowChangeEventHandler(object sender, systemlogRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void useractionRowChangeEventHandler(object sender, useractionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void usergroupRowChangeEventHandler(object sender, usergroupRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void usergroupconnectionRowChangeEventHandler(object sender, usergroupconnectionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void workflowuserRowChangeEventHandler(object sender, workflowuserRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class caseappsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnappId;
            
            private global::System.Data.DataColumn columnappUrl;
            
            private global::System.Data.DataColumn columnappType;
            
            private global::System.Data.DataColumn columnappName;
            
            private global::System.Data.DataColumn columnappTitle;
            
            private global::System.Data.DataColumn columnappHeight;
            
            private global::System.Data.DataColumn columnappWidth;
            
            private global::System.Data.DataColumn columnappAdditionalStyle;
            
            private global::System.Data.DataColumn columnappProcedureId;
            
            private global::System.Data.DataColumn columnappStageId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseappsDataTable() {
                this.TableName = "caseapps";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal caseappsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected caseappsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appIdColumn {
                get {
                    return this.columnappId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appUrlColumn {
                get {
                    return this.columnappUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appTypeColumn {
                get {
                    return this.columnappType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appNameColumn {
                get {
                    return this.columnappName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appTitleColumn {
                get {
                    return this.columnappTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appHeightColumn {
                get {
                    return this.columnappHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appWidthColumn {
                get {
                    return this.columnappWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appAdditionalStyleColumn {
                get {
                    return this.columnappAdditionalStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appProcedureIdColumn {
                get {
                    return this.columnappProcedureId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appStageIdColumn {
                get {
                    return this.columnappStageId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseappsRow this[int index] {
                get {
                    return ((caseappsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseappsRowChangeEventHandler caseappsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseappsRowChangeEventHandler caseappsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseappsRowChangeEventHandler caseappsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseappsRowChangeEventHandler caseappsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcaseappsRow(caseappsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseappsRow AddcaseappsRow(string appUrl, int appType, string appName, string appTitle, string appHeight, string appWidth, string appAdditionalStyle, proceduredefinitionRow parentproceduredefinitionRowByappProcedureFK, procedurestatusRow parentprocedurestatusRowByappStageFK) {
                caseappsRow rowcaseappsRow = ((caseappsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        appUrl,
                        appType,
                        appName,
                        appTitle,
                        appHeight,
                        appWidth,
                        appAdditionalStyle,
                        null,
                        null};
                if ((parentproceduredefinitionRowByappProcedureFK != null)) {
                    columnValuesArray[8] = parentproceduredefinitionRowByappProcedureFK[0];
                }
                if ((parentprocedurestatusRowByappStageFK != null)) {
                    columnValuesArray[9] = parentprocedurestatusRowByappStageFK[0];
                }
                rowcaseappsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcaseappsRow);
                return rowcaseappsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseappsRow FindByappId(int appId) {
                return ((caseappsRow)(this.Rows.Find(new object[] {
                            appId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                caseappsDataTable cln = ((caseappsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new caseappsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnappId = base.Columns["appId"];
                this.columnappUrl = base.Columns["appUrl"];
                this.columnappType = base.Columns["appType"];
                this.columnappName = base.Columns["appName"];
                this.columnappTitle = base.Columns["appTitle"];
                this.columnappHeight = base.Columns["appHeight"];
                this.columnappWidth = base.Columns["appWidth"];
                this.columnappAdditionalStyle = base.Columns["appAdditionalStyle"];
                this.columnappProcedureId = base.Columns["appProcedureId"];
                this.columnappStageId = base.Columns["appStageId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnappId = new global::System.Data.DataColumn("appId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappId);
                this.columnappUrl = new global::System.Data.DataColumn("appUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappUrl);
                this.columnappType = new global::System.Data.DataColumn("appType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappType);
                this.columnappName = new global::System.Data.DataColumn("appName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappName);
                this.columnappTitle = new global::System.Data.DataColumn("appTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappTitle);
                this.columnappHeight = new global::System.Data.DataColumn("appHeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappHeight);
                this.columnappWidth = new global::System.Data.DataColumn("appWidth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappWidth);
                this.columnappAdditionalStyle = new global::System.Data.DataColumn("appAdditionalStyle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappAdditionalStyle);
                this.columnappProcedureId = new global::System.Data.DataColumn("appProcedureId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappProcedureId);
                this.columnappStageId = new global::System.Data.DataColumn("appStageId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappStageId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnappId}, true));
                this.columnappId.AutoIncrement = true;
                this.columnappId.AutoIncrementSeed = -1;
                this.columnappId.AutoIncrementStep = -1;
                this.columnappId.AllowDBNull = false;
                this.columnappId.Unique = true;
                this.columnappUrl.MaxLength = 255;
                this.columnappName.MaxLength = 45;
                this.columnappTitle.MaxLength = 45;
                this.columnappHeight.MaxLength = 45;
                this.columnappWidth.MaxLength = 45;
                this.columnappAdditionalStyle.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseappsRow NewcaseappsRow() {
                return ((caseappsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new caseappsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(caseappsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.caseappsRowChanged != null)) {
                    this.caseappsRowChanged(this, new caseappsRowChangeEvent(((caseappsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.caseappsRowChanging != null)) {
                    this.caseappsRowChanging(this, new caseappsRowChangeEvent(((caseappsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.caseappsRowDeleted != null)) {
                    this.caseappsRowDeleted(this, new caseappsRowChangeEvent(((caseappsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.caseappsRowDeleting != null)) {
                    this.caseappsRowDeleting(this, new caseappsRowChangeEvent(((caseappsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecaseappsRow(caseappsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "caseappsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class caseattachmentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnattId;
            
            private global::System.Data.DataColumn columnattCreated;
            
            private global::System.Data.DataColumn columnattCreatedById;
            
            private global::System.Data.DataColumn columnattModified;
            
            private global::System.Data.DataColumn columnattModifiedById;
            
            private global::System.Data.DataColumn columnattName;
            
            private global::System.Data.DataColumn columnattTitle;
            
            private global::System.Data.DataColumn columnattDescription;
            
            private global::System.Data.DataColumn columnattValue;
            
            private global::System.Data.DataColumn columnattIsExternal;
            
            private global::System.Data.DataColumn columnattExternalLink;
            
            private global::System.Data.DataColumn columnattIsCurrentVersion;
            
            private global::System.Data.DataColumn columnattVersion;
            
            private global::System.Data.DataColumn columnattCaseId;
            
            private global::System.Data.DataColumn columnattSize;
            
            private global::System.Data.DataColumn columnattThumbnail;
            
            private global::System.Data.DataColumn columnattLockedById;
            
            private global::System.Data.DataColumn columnattLocked;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentDataTable() {
                this.TableName = "caseattachment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal caseattachmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected caseattachmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attIdColumn {
                get {
                    return this.columnattId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attCreatedColumn {
                get {
                    return this.columnattCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attCreatedByIdColumn {
                get {
                    return this.columnattCreatedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attModifiedColumn {
                get {
                    return this.columnattModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attModifiedByIdColumn {
                get {
                    return this.columnattModifiedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attNameColumn {
                get {
                    return this.columnattName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attTitleColumn {
                get {
                    return this.columnattTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attDescriptionColumn {
                get {
                    return this.columnattDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attValueColumn {
                get {
                    return this.columnattValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attIsExternalColumn {
                get {
                    return this.columnattIsExternal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attExternalLinkColumn {
                get {
                    return this.columnattExternalLink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attIsCurrentVersionColumn {
                get {
                    return this.columnattIsCurrentVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attVersionColumn {
                get {
                    return this.columnattVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attCaseIdColumn {
                get {
                    return this.columnattCaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attSizeColumn {
                get {
                    return this.columnattSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attThumbnailColumn {
                get {
                    return this.columnattThumbnail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attLockedByIdColumn {
                get {
                    return this.columnattLockedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attLockedColumn {
                get {
                    return this.columnattLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentRow this[int index] {
                get {
                    return ((caseattachmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseattachmentRowChangeEventHandler caseattachmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseattachmentRowChangeEventHandler caseattachmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseattachmentRowChangeEventHandler caseattachmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseattachmentRowChangeEventHandler caseattachmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcaseattachmentRow(caseattachmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentRow AddcaseattachmentRow(
                        System.DateTime attCreated, 
                        workflowuserRow parentworkflowuserRowByAttCreatedBy, 
                        System.DateTime attModified, 
                        workflowuserRow parentworkflowuserRowByAttModifiedBy, 
                        string attName, 
                        string attTitle, 
                        string attDescription, 
                        byte[] attValue, 
                        ulong attIsExternal, 
                        string attExternalLink, 
                        ulong attIsCurrentVersion, 
                        int attVersion, 
                        casedefinitionRow parentcasedefinitionRowByAttCaseIdFK, 
                        long attSize, 
                        byte[] attThumbnail, 
                        workflowuserRow parentworkflowuserRowByAttLockedBy, 
                        System.DateTime attLocked) {
                caseattachmentRow rowcaseattachmentRow = ((caseattachmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        attCreated,
                        null,
                        attModified,
                        null,
                        attName,
                        attTitle,
                        attDescription,
                        attValue,
                        attIsExternal,
                        attExternalLink,
                        attIsCurrentVersion,
                        attVersion,
                        null,
                        attSize,
                        attThumbnail,
                        null,
                        attLocked};
                if ((parentworkflowuserRowByAttCreatedBy != null)) {
                    columnValuesArray[2] = parentworkflowuserRowByAttCreatedBy[0];
                }
                if ((parentworkflowuserRowByAttModifiedBy != null)) {
                    columnValuesArray[4] = parentworkflowuserRowByAttModifiedBy[0];
                }
                if ((parentcasedefinitionRowByAttCaseIdFK != null)) {
                    columnValuesArray[13] = parentcasedefinitionRowByAttCaseIdFK[0];
                }
                if ((parentworkflowuserRowByAttLockedBy != null)) {
                    columnValuesArray[16] = parentworkflowuserRowByAttLockedBy[0];
                }
                rowcaseattachmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcaseattachmentRow);
                return rowcaseattachmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentRow FindByattId(int attId) {
                return ((caseattachmentRow)(this.Rows.Find(new object[] {
                            attId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                caseattachmentDataTable cln = ((caseattachmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new caseattachmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnattId = base.Columns["attId"];
                this.columnattCreated = base.Columns["attCreated"];
                this.columnattCreatedById = base.Columns["attCreatedById"];
                this.columnattModified = base.Columns["attModified"];
                this.columnattModifiedById = base.Columns["attModifiedById"];
                this.columnattName = base.Columns["attName"];
                this.columnattTitle = base.Columns["attTitle"];
                this.columnattDescription = base.Columns["attDescription"];
                this.columnattValue = base.Columns["attValue"];
                this.columnattIsExternal = base.Columns["attIsExternal"];
                this.columnattExternalLink = base.Columns["attExternalLink"];
                this.columnattIsCurrentVersion = base.Columns["attIsCurrentVersion"];
                this.columnattVersion = base.Columns["attVersion"];
                this.columnattCaseId = base.Columns["attCaseId"];
                this.columnattSize = base.Columns["attSize"];
                this.columnattThumbnail = base.Columns["attThumbnail"];
                this.columnattLockedById = base.Columns["attLockedById"];
                this.columnattLocked = base.Columns["attLocked"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnattId = new global::System.Data.DataColumn("attId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattId);
                this.columnattCreated = new global::System.Data.DataColumn("attCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattCreated);
                this.columnattCreatedById = new global::System.Data.DataColumn("attCreatedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattCreatedById);
                this.columnattModified = new global::System.Data.DataColumn("attModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattModified);
                this.columnattModifiedById = new global::System.Data.DataColumn("attModifiedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattModifiedById);
                this.columnattName = new global::System.Data.DataColumn("attName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattName);
                this.columnattTitle = new global::System.Data.DataColumn("attTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattTitle);
                this.columnattDescription = new global::System.Data.DataColumn("attDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattDescription);
                this.columnattValue = new global::System.Data.DataColumn("attValue", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattValue);
                this.columnattIsExternal = new global::System.Data.DataColumn("attIsExternal", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattIsExternal);
                this.columnattExternalLink = new global::System.Data.DataColumn("attExternalLink", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattExternalLink);
                this.columnattIsCurrentVersion = new global::System.Data.DataColumn("attIsCurrentVersion", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattIsCurrentVersion);
                this.columnattVersion = new global::System.Data.DataColumn("attVersion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattVersion);
                this.columnattCaseId = new global::System.Data.DataColumn("attCaseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattCaseId);
                this.columnattSize = new global::System.Data.DataColumn("attSize", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattSize);
                this.columnattThumbnail = new global::System.Data.DataColumn("attThumbnail", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattThumbnail);
                this.columnattLockedById = new global::System.Data.DataColumn("attLockedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattLockedById);
                this.columnattLocked = new global::System.Data.DataColumn("attLocked", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattLocked);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnattId}, true));
                this.columnattId.AutoIncrement = true;
                this.columnattId.AutoIncrementSeed = -1;
                this.columnattId.AutoIncrementStep = -1;
                this.columnattId.AllowDBNull = false;
                this.columnattId.Unique = true;
                this.columnattModified.AllowDBNull = false;
                this.columnattModifiedById.AllowDBNull = false;
                this.columnattName.AllowDBNull = false;
                this.columnattName.MaxLength = 500;
                this.columnattTitle.MaxLength = 500;
                this.columnattDescription.MaxLength = 21845;
                this.columnattExternalLink.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentRow NewcaseattachmentRow() {
                return ((caseattachmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new caseattachmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(caseattachmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.caseattachmentRowChanged != null)) {
                    this.caseattachmentRowChanged(this, new caseattachmentRowChangeEvent(((caseattachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.caseattachmentRowChanging != null)) {
                    this.caseattachmentRowChanging(this, new caseattachmentRowChangeEvent(((caseattachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.caseattachmentRowDeleted != null)) {
                    this.caseattachmentRowDeleted(this, new caseattachmentRowChangeEvent(((caseattachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.caseattachmentRowDeleting != null)) {
                    this.caseattachmentRowDeleting(this, new caseattachmentRowChangeEvent(((caseattachmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecaseattachmentRow(caseattachmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "caseattachmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class caseattachmenthistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnattHistId;
            
            private global::System.Data.DataColumn columnattId;
            
            private global::System.Data.DataColumn columnattCaseId;
            
            private global::System.Data.DataColumn columnattCreated;
            
            private global::System.Data.DataColumn columnattCreatedById;
            
            private global::System.Data.DataColumn columnattModified;
            
            private global::System.Data.DataColumn columnattModifiedById;
            
            private global::System.Data.DataColumn columnattName;
            
            private global::System.Data.DataColumn columnattTitle;
            
            private global::System.Data.DataColumn columnattDescription;
            
            private global::System.Data.DataColumn columnattValue;
            
            private global::System.Data.DataColumn columnattIsExternal;
            
            private global::System.Data.DataColumn columnattExternalLink;
            
            private global::System.Data.DataColumn columnattIsCurrentVersion;
            
            private global::System.Data.DataColumn columnattVersion;
            
            private global::System.Data.DataColumn columnattThumbnail;
            
            private global::System.Data.DataColumn columnattIsDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmenthistoryDataTable() {
                this.TableName = "caseattachmenthistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal caseattachmenthistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected caseattachmenthistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attHistIdColumn {
                get {
                    return this.columnattHistId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attIdColumn {
                get {
                    return this.columnattId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attCaseIdColumn {
                get {
                    return this.columnattCaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attCreatedColumn {
                get {
                    return this.columnattCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attCreatedByIdColumn {
                get {
                    return this.columnattCreatedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attModifiedColumn {
                get {
                    return this.columnattModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attModifiedByIdColumn {
                get {
                    return this.columnattModifiedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attNameColumn {
                get {
                    return this.columnattName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attTitleColumn {
                get {
                    return this.columnattTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attDescriptionColumn {
                get {
                    return this.columnattDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attValueColumn {
                get {
                    return this.columnattValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attIsExternalColumn {
                get {
                    return this.columnattIsExternal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attExternalLinkColumn {
                get {
                    return this.columnattExternalLink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attIsCurrentVersionColumn {
                get {
                    return this.columnattIsCurrentVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attVersionColumn {
                get {
                    return this.columnattVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attThumbnailColumn {
                get {
                    return this.columnattThumbnail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn attIsDeletedColumn {
                get {
                    return this.columnattIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmenthistoryRow this[int index] {
                get {
                    return ((caseattachmenthistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseattachmenthistoryRowChangeEventHandler caseattachmenthistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseattachmenthistoryRowChangeEventHandler caseattachmenthistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseattachmenthistoryRowChangeEventHandler caseattachmenthistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseattachmenthistoryRowChangeEventHandler caseattachmenthistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcaseattachmenthistoryRow(caseattachmenthistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmenthistoryRow AddcaseattachmenthistoryRow(
                        int attId, 
                        casedefinitionRow parentcasedefinitionRowByAttCaseHistIdFK, 
                        System.DateTime attCreated, 
                        workflowuserRow parentworkflowuserRowByAttCreatedByH, 
                        System.DateTime attModified, 
                        workflowuserRow parentworkflowuserRowByAttModifiedByH, 
                        string attName, 
                        string attTitle, 
                        string attDescription, 
                        byte[] attValue, 
                        ulong attIsExternal, 
                        string attExternalLink, 
                        ulong attIsCurrentVersion, 
                        int attVersion, 
                        byte[] attThumbnail, 
                        ulong attIsDeleted) {
                caseattachmenthistoryRow rowcaseattachmenthistoryRow = ((caseattachmenthistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        attId,
                        null,
                        attCreated,
                        null,
                        attModified,
                        null,
                        attName,
                        attTitle,
                        attDescription,
                        attValue,
                        attIsExternal,
                        attExternalLink,
                        attIsCurrentVersion,
                        attVersion,
                        attThumbnail,
                        attIsDeleted};
                if ((parentcasedefinitionRowByAttCaseHistIdFK != null)) {
                    columnValuesArray[2] = parentcasedefinitionRowByAttCaseHistIdFK[0];
                }
                if ((parentworkflowuserRowByAttCreatedByH != null)) {
                    columnValuesArray[4] = parentworkflowuserRowByAttCreatedByH[0];
                }
                if ((parentworkflowuserRowByAttModifiedByH != null)) {
                    columnValuesArray[6] = parentworkflowuserRowByAttModifiedByH[0];
                }
                rowcaseattachmenthistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcaseattachmenthistoryRow);
                return rowcaseattachmenthistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmenthistoryRow FindByattHistId(int attHistId) {
                return ((caseattachmenthistoryRow)(this.Rows.Find(new object[] {
                            attHistId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                caseattachmenthistoryDataTable cln = ((caseattachmenthistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new caseattachmenthistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnattHistId = base.Columns["attHistId"];
                this.columnattId = base.Columns["attId"];
                this.columnattCaseId = base.Columns["attCaseId"];
                this.columnattCreated = base.Columns["attCreated"];
                this.columnattCreatedById = base.Columns["attCreatedById"];
                this.columnattModified = base.Columns["attModified"];
                this.columnattModifiedById = base.Columns["attModifiedById"];
                this.columnattName = base.Columns["attName"];
                this.columnattTitle = base.Columns["attTitle"];
                this.columnattDescription = base.Columns["attDescription"];
                this.columnattValue = base.Columns["attValue"];
                this.columnattIsExternal = base.Columns["attIsExternal"];
                this.columnattExternalLink = base.Columns["attExternalLink"];
                this.columnattIsCurrentVersion = base.Columns["attIsCurrentVersion"];
                this.columnattVersion = base.Columns["attVersion"];
                this.columnattThumbnail = base.Columns["attThumbnail"];
                this.columnattIsDeleted = base.Columns["attIsDeleted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnattHistId = new global::System.Data.DataColumn("attHistId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattHistId);
                this.columnattId = new global::System.Data.DataColumn("attId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattId);
                this.columnattCaseId = new global::System.Data.DataColumn("attCaseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattCaseId);
                this.columnattCreated = new global::System.Data.DataColumn("attCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattCreated);
                this.columnattCreatedById = new global::System.Data.DataColumn("attCreatedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattCreatedById);
                this.columnattModified = new global::System.Data.DataColumn("attModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattModified);
                this.columnattModifiedById = new global::System.Data.DataColumn("attModifiedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattModifiedById);
                this.columnattName = new global::System.Data.DataColumn("attName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattName);
                this.columnattTitle = new global::System.Data.DataColumn("attTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattTitle);
                this.columnattDescription = new global::System.Data.DataColumn("attDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattDescription);
                this.columnattValue = new global::System.Data.DataColumn("attValue", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattValue);
                this.columnattIsExternal = new global::System.Data.DataColumn("attIsExternal", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattIsExternal);
                this.columnattExternalLink = new global::System.Data.DataColumn("attExternalLink", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattExternalLink);
                this.columnattIsCurrentVersion = new global::System.Data.DataColumn("attIsCurrentVersion", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattIsCurrentVersion);
                this.columnattVersion = new global::System.Data.DataColumn("attVersion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattVersion);
                this.columnattThumbnail = new global::System.Data.DataColumn("attThumbnail", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattThumbnail);
                this.columnattIsDeleted = new global::System.Data.DataColumn("attIsDeleted", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattIsDeleted);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnattHistId}, true));
                this.columnattHistId.AutoIncrement = true;
                this.columnattHistId.AutoIncrementSeed = -1;
                this.columnattHistId.AutoIncrementStep = -1;
                this.columnattHistId.AllowDBNull = false;
                this.columnattHistId.Unique = true;
                this.columnattId.AllowDBNull = false;
                this.columnattModified.AllowDBNull = false;
                this.columnattModifiedById.AllowDBNull = false;
                this.columnattName.AllowDBNull = false;
                this.columnattName.MaxLength = 500;
                this.columnattTitle.MaxLength = 500;
                this.columnattDescription.MaxLength = 21845;
                this.columnattExternalLink.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmenthistoryRow NewcaseattachmenthistoryRow() {
                return ((caseattachmenthistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new caseattachmenthistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(caseattachmenthistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.caseattachmenthistoryRowChanged != null)) {
                    this.caseattachmenthistoryRowChanged(this, new caseattachmenthistoryRowChangeEvent(((caseattachmenthistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.caseattachmenthistoryRowChanging != null)) {
                    this.caseattachmenthistoryRowChanging(this, new caseattachmenthistoryRowChangeEvent(((caseattachmenthistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.caseattachmenthistoryRowDeleted != null)) {
                    this.caseattachmenthistoryRowDeleted(this, new caseattachmenthistoryRowChangeEvent(((caseattachmenthistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.caseattachmenthistoryRowDeleting != null)) {
                    this.caseattachmenthistoryRowDeleting(this, new caseattachmenthistoryRowChangeEvent(((caseattachmenthistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecaseattachmenthistoryRow(caseattachmenthistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "caseattachmenthistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class casecommentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncomId;
            
            private global::System.Data.DataColumn columncomText;
            
            private global::System.Data.DataColumn columncomDate;
            
            private global::System.Data.DataColumn columncomCaseId;
            
            private global::System.Data.DataColumn columncomUserId;
            
            private global::System.Data.DataColumn columncomStatusId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casecommentDataTable() {
                this.TableName = "casecomment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal casecommentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected casecommentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn comIdColumn {
                get {
                    return this.columncomId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn comTextColumn {
                get {
                    return this.columncomText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn comDateColumn {
                get {
                    return this.columncomDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn comCaseIdColumn {
                get {
                    return this.columncomCaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn comUserIdColumn {
                get {
                    return this.columncomUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn comStatusIdColumn {
                get {
                    return this.columncomStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casecommentRow this[int index] {
                get {
                    return ((casecommentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casecommentRowChangeEventHandler casecommentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casecommentRowChangeEventHandler casecommentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casecommentRowChangeEventHandler casecommentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casecommentRowChangeEventHandler casecommentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcasecommentRow(casecommentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casecommentRow AddcasecommentRow(string comText, System.DateTime comDate, casedefinitionRow parentcasedefinitionRowByCommentCaseId1, workflowuserRow parentworkflowuserRowByCommentUser, int comStatusId) {
                casecommentRow rowcasecommentRow = ((casecommentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        comText,
                        comDate,
                        null,
                        null,
                        comStatusId};
                if ((parentcasedefinitionRowByCommentCaseId1 != null)) {
                    columnValuesArray[3] = parentcasedefinitionRowByCommentCaseId1[0];
                }
                if ((parentworkflowuserRowByCommentUser != null)) {
                    columnValuesArray[4] = parentworkflowuserRowByCommentUser[0];
                }
                rowcasecommentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcasecommentRow);
                return rowcasecommentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casecommentRow FindBycomId(int comId) {
                return ((casecommentRow)(this.Rows.Find(new object[] {
                            comId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                casecommentDataTable cln = ((casecommentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new casecommentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncomId = base.Columns["comId"];
                this.columncomText = base.Columns["comText"];
                this.columncomDate = base.Columns["comDate"];
                this.columncomCaseId = base.Columns["comCaseId"];
                this.columncomUserId = base.Columns["comUserId"];
                this.columncomStatusId = base.Columns["comStatusId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncomId = new global::System.Data.DataColumn("comId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomId);
                this.columncomText = new global::System.Data.DataColumn("comText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomText);
                this.columncomDate = new global::System.Data.DataColumn("comDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomDate);
                this.columncomCaseId = new global::System.Data.DataColumn("comCaseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomCaseId);
                this.columncomUserId = new global::System.Data.DataColumn("comUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomUserId);
                this.columncomStatusId = new global::System.Data.DataColumn("comStatusId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomStatusId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncomId}, true));
                this.columncomId.AutoIncrement = true;
                this.columncomId.AutoIncrementSeed = -1;
                this.columncomId.AutoIncrementStep = -1;
                this.columncomId.AllowDBNull = false;
                this.columncomId.Unique = true;
                this.columncomText.AllowDBNull = false;
                this.columncomText.MaxLength = 21845;
                this.columncomDate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casecommentRow NewcasecommentRow() {
                return ((casecommentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new casecommentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(casecommentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.casecommentRowChanged != null)) {
                    this.casecommentRowChanged(this, new casecommentRowChangeEvent(((casecommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.casecommentRowChanging != null)) {
                    this.casecommentRowChanging(this, new casecommentRowChangeEvent(((casecommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.casecommentRowDeleted != null)) {
                    this.casecommentRowDeleted(this, new casecommentRowChangeEvent(((casecommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.casecommentRowDeleting != null)) {
                    this.casecommentRowDeleting(this, new casecommentRowChangeEvent(((casecommentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecasecommentRow(casecommentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "casecommentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class casedefinitionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncaseId;
            
            private global::System.Data.DataColumn columncaseTitle;
            
            private global::System.Data.DataColumn columncaseOwnerId;
            
            private global::System.Data.DataColumn columncaseCreated;
            
            private global::System.Data.DataColumn columncaseCreatedById;
            
            private global::System.Data.DataColumn columncaseModified;
            
            private global::System.Data.DataColumn columncaseModifiedById;
            
            private global::System.Data.DataColumn columncaseForwarded;
            
            private global::System.Data.DataColumn columncaseForwardedById;
            
            private global::System.Data.DataColumn columncaseProcedureId;
            
            private global::System.Data.DataColumn columncaseStatusId;
            
            private global::System.Data.DataColumn columncaseVersion;
            
            private global::System.Data.DataColumn columncaseIsCurrentVersion;
            
            private global::System.Data.DataColumn columncaseVarchar1;
            
            private global::System.Data.DataColumn columncaseVarchar2;
            
            private global::System.Data.DataColumn columncaseVarchar3;
            
            private global::System.Data.DataColumn columncaseText1;
            
            private global::System.Data.DataColumn columncaseText2;
            
            private global::System.Data.DataColumn columncaseText3;
            
            private global::System.Data.DataColumn columncaseNumber1;
            
            private global::System.Data.DataColumn columncaseNumber2;
            
            private global::System.Data.DataColumn columncaseNumber3;
            
            private global::System.Data.DataColumn columncaseDateTime1;
            
            private global::System.Data.DataColumn columncaseDateTime2;
            
            private global::System.Data.DataColumn columncaseDateTime3;
            
            private global::System.Data.DataColumn columncaseForwardedCC;
            
            private global::System.Data.DataColumn columncaseIsClosed;
            
            private global::System.Data.DataColumn columncaseNumber4;
            
            private global::System.Data.DataColumn columncaseNumber5;
            
            private global::System.Data.DataColumn columncaseNumber6;
            
            private global::System.Data.DataColumn columncaseNumber7;
            
            private global::System.Data.DataColumn columncaseNumber8;
            
            private global::System.Data.DataColumn columncaseNumber9;
            
            private global::System.Data.DataColumn columncaseNumber10;
            
            private global::System.Data.DataColumn columncaseVarchar4;
            
            private global::System.Data.DataColumn columncaseVarchar5;
            
            private global::System.Data.DataColumn columncaseVarchar6;
            
            private global::System.Data.DataColumn columncaseVarchar7;
            
            private global::System.Data.DataColumn columncaseVarchar8;
            
            private global::System.Data.DataColumn columncaseVarchar9;
            
            private global::System.Data.DataColumn columncaseVarchar10;
            
            private global::System.Data.DataColumn columncaseVarchar11;
            
            private global::System.Data.DataColumn columncaseVarchar12;
            
            private global::System.Data.DataColumn columncaseVarchar13;
            
            private global::System.Data.DataColumn columncaseVarchar14;
            
            private global::System.Data.DataColumn columncaseVarchar15;
            
            private global::System.Data.DataColumn columncaseVarchar16;
            
            private global::System.Data.DataColumn columncaseVarchar17;
            
            private global::System.Data.DataColumn columncaseVarchar18;
            
            private global::System.Data.DataColumn columncaseVarchar19;
            
            private global::System.Data.DataColumn columncaseVarchar20;
            
            private global::System.Data.DataColumn columncaseDateTime4;
            
            private global::System.Data.DataColumn columncaseDateTime5;
            
            private global::System.Data.DataColumn columncaseDateTime6;
            
            private global::System.Data.DataColumn columncaseDateTime7;
            
            private global::System.Data.DataColumn columncaseDateTime8;
            
            private global::System.Data.DataColumn columncaseDateTime9;
            
            private global::System.Data.DataColumn columncaseDateTime10;
            
            private global::System.Data.DataColumn columncaseText4;
            
            private global::System.Data.DataColumn columncaseText5;
            
            private global::System.Data.DataColumn columncaseText6;
            
            private global::System.Data.DataColumn columncaseText7;
            
            private global::System.Data.DataColumn columncaseText8;
            
            private global::System.Data.DataColumn columncaseText9;
            
            private global::System.Data.DataColumn columncaseText10;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionDataTable() {
                this.TableName = "casedefinition";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal casedefinitionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected casedefinitionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseIdColumn {
                get {
                    return this.columncaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseTitleColumn {
                get {
                    return this.columncaseTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseOwnerIdColumn {
                get {
                    return this.columncaseOwnerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseCreatedColumn {
                get {
                    return this.columncaseCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseCreatedByIdColumn {
                get {
                    return this.columncaseCreatedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseModifiedColumn {
                get {
                    return this.columncaseModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseModifiedByIdColumn {
                get {
                    return this.columncaseModifiedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseForwardedColumn {
                get {
                    return this.columncaseForwarded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseForwardedByIdColumn {
                get {
                    return this.columncaseForwardedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseProcedureIdColumn {
                get {
                    return this.columncaseProcedureId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseStatusIdColumn {
                get {
                    return this.columncaseStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVersionColumn {
                get {
                    return this.columncaseVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseIsCurrentVersionColumn {
                get {
                    return this.columncaseIsCurrentVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar1Column {
                get {
                    return this.columncaseVarchar1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar2Column {
                get {
                    return this.columncaseVarchar2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar3Column {
                get {
                    return this.columncaseVarchar3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText1Column {
                get {
                    return this.columncaseText1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText2Column {
                get {
                    return this.columncaseText2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText3Column {
                get {
                    return this.columncaseText3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber1Column {
                get {
                    return this.columncaseNumber1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber2Column {
                get {
                    return this.columncaseNumber2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber3Column {
                get {
                    return this.columncaseNumber3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime1Column {
                get {
                    return this.columncaseDateTime1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime2Column {
                get {
                    return this.columncaseDateTime2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime3Column {
                get {
                    return this.columncaseDateTime3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseForwardedCCColumn {
                get {
                    return this.columncaseForwardedCC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseIsClosedColumn {
                get {
                    return this.columncaseIsClosed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber4Column {
                get {
                    return this.columncaseNumber4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber5Column {
                get {
                    return this.columncaseNumber5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber6Column {
                get {
                    return this.columncaseNumber6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber7Column {
                get {
                    return this.columncaseNumber7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber8Column {
                get {
                    return this.columncaseNumber8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber9Column {
                get {
                    return this.columncaseNumber9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber10Column {
                get {
                    return this.columncaseNumber10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar4Column {
                get {
                    return this.columncaseVarchar4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar5Column {
                get {
                    return this.columncaseVarchar5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar6Column {
                get {
                    return this.columncaseVarchar6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar7Column {
                get {
                    return this.columncaseVarchar7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar8Column {
                get {
                    return this.columncaseVarchar8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar9Column {
                get {
                    return this.columncaseVarchar9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar10Column {
                get {
                    return this.columncaseVarchar10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar11Column {
                get {
                    return this.columncaseVarchar11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar12Column {
                get {
                    return this.columncaseVarchar12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar13Column {
                get {
                    return this.columncaseVarchar13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar14Column {
                get {
                    return this.columncaseVarchar14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar15Column {
                get {
                    return this.columncaseVarchar15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar16Column {
                get {
                    return this.columncaseVarchar16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar17Column {
                get {
                    return this.columncaseVarchar17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar18Column {
                get {
                    return this.columncaseVarchar18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar19Column {
                get {
                    return this.columncaseVarchar19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar20Column {
                get {
                    return this.columncaseVarchar20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime4Column {
                get {
                    return this.columncaseDateTime4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime5Column {
                get {
                    return this.columncaseDateTime5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime6Column {
                get {
                    return this.columncaseDateTime6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime7Column {
                get {
                    return this.columncaseDateTime7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime8Column {
                get {
                    return this.columncaseDateTime8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime9Column {
                get {
                    return this.columncaseDateTime9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime10Column {
                get {
                    return this.columncaseDateTime10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText4Column {
                get {
                    return this.columncaseText4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText5Column {
                get {
                    return this.columncaseText5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText6Column {
                get {
                    return this.columncaseText6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText7Column {
                get {
                    return this.columncaseText7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText8Column {
                get {
                    return this.columncaseText8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText9Column {
                get {
                    return this.columncaseText9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText10Column {
                get {
                    return this.columncaseText10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow this[int index] {
                get {
                    return ((casedefinitionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casedefinitionRowChangeEventHandler casedefinitionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casedefinitionRowChangeEventHandler casedefinitionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casedefinitionRowChangeEventHandler casedefinitionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casedefinitionRowChangeEventHandler casedefinitionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcasedefinitionRow(casedefinitionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow AddcasedefinitionRow(
                        string caseTitle, 
                        workflowuserRow parentworkflowuserRowBycaseOwnerIdFK, 
                        System.DateTime caseCreated, 
                        workflowuserRow parentworkflowuserRowBycaseCreatedById, 
                        System.DateTime caseModified, 
                        workflowuserRow parentworkflowuserRowBycaseModifiedById, 
                        System.DateTime caseForwarded, 
                        workflowuserRow parentworkflowuserRowBycaseForwaredById, 
                        proceduredefinitionRow parentproceduredefinitionRowBycaseProcedureIdFK, 
                        int caseStatusId, 
                        int caseVersion, 
                        ulong caseIsCurrentVersion, 
                        string caseVarchar1, 
                        string caseVarchar2, 
                        string caseVarchar3, 
                        string caseText1, 
                        string caseText2, 
                        string caseText3, 
                        decimal caseNumber1, 
                        decimal caseNumber2, 
                        decimal caseNumber3, 
                        System.DateTime caseDateTime1, 
                        System.DateTime caseDateTime2, 
                        System.DateTime caseDateTime3, 
                        string caseForwardedCC, 
                        ulong caseIsClosed, 
                        decimal caseNumber4, 
                        decimal caseNumber5, 
                        decimal caseNumber6, 
                        decimal caseNumber7, 
                        decimal caseNumber8, 
                        decimal caseNumber9, 
                        decimal caseNumber10, 
                        string caseVarchar4, 
                        string caseVarchar5, 
                        string caseVarchar6, 
                        string caseVarchar7, 
                        string caseVarchar8, 
                        string caseVarchar9, 
                        string caseVarchar10, 
                        string caseVarchar11, 
                        string caseVarchar12, 
                        string caseVarchar13, 
                        string caseVarchar14, 
                        string caseVarchar15, 
                        string caseVarchar16, 
                        string caseVarchar17, 
                        string caseVarchar18, 
                        string caseVarchar19, 
                        string caseVarchar20, 
                        System.DateTime caseDateTime4, 
                        System.DateTime caseDateTime5, 
                        System.DateTime caseDateTime6, 
                        System.DateTime caseDateTime7, 
                        System.DateTime caseDateTime8, 
                        System.DateTime caseDateTime9, 
                        System.DateTime caseDateTime10, 
                        string caseText4, 
                        string caseText5, 
                        string caseText6, 
                        string caseText7, 
                        string caseText8, 
                        string caseText9, 
                        string caseText10) {
                casedefinitionRow rowcasedefinitionRow = ((casedefinitionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        caseTitle,
                        null,
                        caseCreated,
                        null,
                        caseModified,
                        null,
                        caseForwarded,
                        null,
                        null,
                        caseStatusId,
                        caseVersion,
                        caseIsCurrentVersion,
                        caseVarchar1,
                        caseVarchar2,
                        caseVarchar3,
                        caseText1,
                        caseText2,
                        caseText3,
                        caseNumber1,
                        caseNumber2,
                        caseNumber3,
                        caseDateTime1,
                        caseDateTime2,
                        caseDateTime3,
                        caseForwardedCC,
                        caseIsClosed,
                        caseNumber4,
                        caseNumber5,
                        caseNumber6,
                        caseNumber7,
                        caseNumber8,
                        caseNumber9,
                        caseNumber10,
                        caseVarchar4,
                        caseVarchar5,
                        caseVarchar6,
                        caseVarchar7,
                        caseVarchar8,
                        caseVarchar9,
                        caseVarchar10,
                        caseVarchar11,
                        caseVarchar12,
                        caseVarchar13,
                        caseVarchar14,
                        caseVarchar15,
                        caseVarchar16,
                        caseVarchar17,
                        caseVarchar18,
                        caseVarchar19,
                        caseVarchar20,
                        caseDateTime4,
                        caseDateTime5,
                        caseDateTime6,
                        caseDateTime7,
                        caseDateTime8,
                        caseDateTime9,
                        caseDateTime10,
                        caseText4,
                        caseText5,
                        caseText6,
                        caseText7,
                        caseText8,
                        caseText9,
                        caseText10};
                if ((parentworkflowuserRowBycaseOwnerIdFK != null)) {
                    columnValuesArray[2] = parentworkflowuserRowBycaseOwnerIdFK[0];
                }
                if ((parentworkflowuserRowBycaseCreatedById != null)) {
                    columnValuesArray[4] = parentworkflowuserRowBycaseCreatedById[0];
                }
                if ((parentworkflowuserRowBycaseModifiedById != null)) {
                    columnValuesArray[6] = parentworkflowuserRowBycaseModifiedById[0];
                }
                if ((parentworkflowuserRowBycaseForwaredById != null)) {
                    columnValuesArray[8] = parentworkflowuserRowBycaseForwaredById[0];
                }
                if ((parentproceduredefinitionRowBycaseProcedureIdFK != null)) {
                    columnValuesArray[9] = parentproceduredefinitionRowBycaseProcedureIdFK[0];
                }
                rowcasedefinitionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcasedefinitionRow);
                return rowcasedefinitionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow FindBycaseId(int caseId) {
                return ((casedefinitionRow)(this.Rows.Find(new object[] {
                            caseId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                casedefinitionDataTable cln = ((casedefinitionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new casedefinitionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncaseId = base.Columns["caseId"];
                this.columncaseTitle = base.Columns["caseTitle"];
                this.columncaseOwnerId = base.Columns["caseOwnerId"];
                this.columncaseCreated = base.Columns["caseCreated"];
                this.columncaseCreatedById = base.Columns["caseCreatedById"];
                this.columncaseModified = base.Columns["caseModified"];
                this.columncaseModifiedById = base.Columns["caseModifiedById"];
                this.columncaseForwarded = base.Columns["caseForwarded"];
                this.columncaseForwardedById = base.Columns["caseForwardedById"];
                this.columncaseProcedureId = base.Columns["caseProcedureId"];
                this.columncaseStatusId = base.Columns["caseStatusId"];
                this.columncaseVersion = base.Columns["caseVersion"];
                this.columncaseIsCurrentVersion = base.Columns["caseIsCurrentVersion"];
                this.columncaseVarchar1 = base.Columns["caseVarchar1"];
                this.columncaseVarchar2 = base.Columns["caseVarchar2"];
                this.columncaseVarchar3 = base.Columns["caseVarchar3"];
                this.columncaseText1 = base.Columns["caseText1"];
                this.columncaseText2 = base.Columns["caseText2"];
                this.columncaseText3 = base.Columns["caseText3"];
                this.columncaseNumber1 = base.Columns["caseNumber1"];
                this.columncaseNumber2 = base.Columns["caseNumber2"];
                this.columncaseNumber3 = base.Columns["caseNumber3"];
                this.columncaseDateTime1 = base.Columns["caseDateTime1"];
                this.columncaseDateTime2 = base.Columns["caseDateTime2"];
                this.columncaseDateTime3 = base.Columns["caseDateTime3"];
                this.columncaseForwardedCC = base.Columns["caseForwardedCC"];
                this.columncaseIsClosed = base.Columns["caseIsClosed"];
                this.columncaseNumber4 = base.Columns["caseNumber4"];
                this.columncaseNumber5 = base.Columns["caseNumber5"];
                this.columncaseNumber6 = base.Columns["caseNumber6"];
                this.columncaseNumber7 = base.Columns["caseNumber7"];
                this.columncaseNumber8 = base.Columns["caseNumber8"];
                this.columncaseNumber9 = base.Columns["caseNumber9"];
                this.columncaseNumber10 = base.Columns["caseNumber10"];
                this.columncaseVarchar4 = base.Columns["caseVarchar4"];
                this.columncaseVarchar5 = base.Columns["caseVarchar5"];
                this.columncaseVarchar6 = base.Columns["caseVarchar6"];
                this.columncaseVarchar7 = base.Columns["caseVarchar7"];
                this.columncaseVarchar8 = base.Columns["caseVarchar8"];
                this.columncaseVarchar9 = base.Columns["caseVarchar9"];
                this.columncaseVarchar10 = base.Columns["caseVarchar10"];
                this.columncaseVarchar11 = base.Columns["caseVarchar11"];
                this.columncaseVarchar12 = base.Columns["caseVarchar12"];
                this.columncaseVarchar13 = base.Columns["caseVarchar13"];
                this.columncaseVarchar14 = base.Columns["caseVarchar14"];
                this.columncaseVarchar15 = base.Columns["caseVarchar15"];
                this.columncaseVarchar16 = base.Columns["caseVarchar16"];
                this.columncaseVarchar17 = base.Columns["caseVarchar17"];
                this.columncaseVarchar18 = base.Columns["caseVarchar18"];
                this.columncaseVarchar19 = base.Columns["caseVarchar19"];
                this.columncaseVarchar20 = base.Columns["caseVarchar20"];
                this.columncaseDateTime4 = base.Columns["caseDateTime4"];
                this.columncaseDateTime5 = base.Columns["caseDateTime5"];
                this.columncaseDateTime6 = base.Columns["caseDateTime6"];
                this.columncaseDateTime7 = base.Columns["caseDateTime7"];
                this.columncaseDateTime8 = base.Columns["caseDateTime8"];
                this.columncaseDateTime9 = base.Columns["caseDateTime9"];
                this.columncaseDateTime10 = base.Columns["caseDateTime10"];
                this.columncaseText4 = base.Columns["caseText4"];
                this.columncaseText5 = base.Columns["caseText5"];
                this.columncaseText6 = base.Columns["caseText6"];
                this.columncaseText7 = base.Columns["caseText7"];
                this.columncaseText8 = base.Columns["caseText8"];
                this.columncaseText9 = base.Columns["caseText9"];
                this.columncaseText10 = base.Columns["caseText10"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncaseId = new global::System.Data.DataColumn("caseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseId);
                this.columncaseTitle = new global::System.Data.DataColumn("caseTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseTitle);
                this.columncaseOwnerId = new global::System.Data.DataColumn("caseOwnerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseOwnerId);
                this.columncaseCreated = new global::System.Data.DataColumn("caseCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseCreated);
                this.columncaseCreatedById = new global::System.Data.DataColumn("caseCreatedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseCreatedById);
                this.columncaseModified = new global::System.Data.DataColumn("caseModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseModified);
                this.columncaseModifiedById = new global::System.Data.DataColumn("caseModifiedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseModifiedById);
                this.columncaseForwarded = new global::System.Data.DataColumn("caseForwarded", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseForwarded);
                this.columncaseForwardedById = new global::System.Data.DataColumn("caseForwardedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseForwardedById);
                this.columncaseProcedureId = new global::System.Data.DataColumn("caseProcedureId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseProcedureId);
                this.columncaseStatusId = new global::System.Data.DataColumn("caseStatusId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseStatusId);
                this.columncaseVersion = new global::System.Data.DataColumn("caseVersion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVersion);
                this.columncaseIsCurrentVersion = new global::System.Data.DataColumn("caseIsCurrentVersion", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseIsCurrentVersion);
                this.columncaseVarchar1 = new global::System.Data.DataColumn("caseVarchar1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar1);
                this.columncaseVarchar2 = new global::System.Data.DataColumn("caseVarchar2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar2);
                this.columncaseVarchar3 = new global::System.Data.DataColumn("caseVarchar3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar3);
                this.columncaseText1 = new global::System.Data.DataColumn("caseText1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText1);
                this.columncaseText2 = new global::System.Data.DataColumn("caseText2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText2);
                this.columncaseText3 = new global::System.Data.DataColumn("caseText3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText3);
                this.columncaseNumber1 = new global::System.Data.DataColumn("caseNumber1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber1);
                this.columncaseNumber2 = new global::System.Data.DataColumn("caseNumber2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber2);
                this.columncaseNumber3 = new global::System.Data.DataColumn("caseNumber3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber3);
                this.columncaseDateTime1 = new global::System.Data.DataColumn("caseDateTime1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime1);
                this.columncaseDateTime2 = new global::System.Data.DataColumn("caseDateTime2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime2);
                this.columncaseDateTime3 = new global::System.Data.DataColumn("caseDateTime3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime3);
                this.columncaseForwardedCC = new global::System.Data.DataColumn("caseForwardedCC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseForwardedCC);
                this.columncaseIsClosed = new global::System.Data.DataColumn("caseIsClosed", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseIsClosed);
                this.columncaseNumber4 = new global::System.Data.DataColumn("caseNumber4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber4);
                this.columncaseNumber5 = new global::System.Data.DataColumn("caseNumber5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber5);
                this.columncaseNumber6 = new global::System.Data.DataColumn("caseNumber6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber6);
                this.columncaseNumber7 = new global::System.Data.DataColumn("caseNumber7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber7);
                this.columncaseNumber8 = new global::System.Data.DataColumn("caseNumber8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber8);
                this.columncaseNumber9 = new global::System.Data.DataColumn("caseNumber9", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber9);
                this.columncaseNumber10 = new global::System.Data.DataColumn("caseNumber10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber10);
                this.columncaseVarchar4 = new global::System.Data.DataColumn("caseVarchar4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar4);
                this.columncaseVarchar5 = new global::System.Data.DataColumn("caseVarchar5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar5);
                this.columncaseVarchar6 = new global::System.Data.DataColumn("caseVarchar6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar6);
                this.columncaseVarchar7 = new global::System.Data.DataColumn("caseVarchar7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar7);
                this.columncaseVarchar8 = new global::System.Data.DataColumn("caseVarchar8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar8);
                this.columncaseVarchar9 = new global::System.Data.DataColumn("caseVarchar9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar9);
                this.columncaseVarchar10 = new global::System.Data.DataColumn("caseVarchar10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar10);
                this.columncaseVarchar11 = new global::System.Data.DataColumn("caseVarchar11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar11);
                this.columncaseVarchar12 = new global::System.Data.DataColumn("caseVarchar12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar12);
                this.columncaseVarchar13 = new global::System.Data.DataColumn("caseVarchar13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar13);
                this.columncaseVarchar14 = new global::System.Data.DataColumn("caseVarchar14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar14);
                this.columncaseVarchar15 = new global::System.Data.DataColumn("caseVarchar15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar15);
                this.columncaseVarchar16 = new global::System.Data.DataColumn("caseVarchar16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar16);
                this.columncaseVarchar17 = new global::System.Data.DataColumn("caseVarchar17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar17);
                this.columncaseVarchar18 = new global::System.Data.DataColumn("caseVarchar18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar18);
                this.columncaseVarchar19 = new global::System.Data.DataColumn("caseVarchar19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar19);
                this.columncaseVarchar20 = new global::System.Data.DataColumn("caseVarchar20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar20);
                this.columncaseDateTime4 = new global::System.Data.DataColumn("caseDateTime4", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime4);
                this.columncaseDateTime5 = new global::System.Data.DataColumn("caseDateTime5", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime5);
                this.columncaseDateTime6 = new global::System.Data.DataColumn("caseDateTime6", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime6);
                this.columncaseDateTime7 = new global::System.Data.DataColumn("caseDateTime7", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime7);
                this.columncaseDateTime8 = new global::System.Data.DataColumn("caseDateTime8", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime8);
                this.columncaseDateTime9 = new global::System.Data.DataColumn("caseDateTime9", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime9);
                this.columncaseDateTime10 = new global::System.Data.DataColumn("caseDateTime10", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime10);
                this.columncaseText4 = new global::System.Data.DataColumn("caseText4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText4);
                this.columncaseText5 = new global::System.Data.DataColumn("caseText5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText5);
                this.columncaseText6 = new global::System.Data.DataColumn("caseText6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText6);
                this.columncaseText7 = new global::System.Data.DataColumn("caseText7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText7);
                this.columncaseText8 = new global::System.Data.DataColumn("caseText8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText8);
                this.columncaseText9 = new global::System.Data.DataColumn("caseText9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText9);
                this.columncaseText10 = new global::System.Data.DataColumn("caseText10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText10);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncaseId}, true));
                this.columncaseId.AutoIncrement = true;
                this.columncaseId.AutoIncrementSeed = -1;
                this.columncaseId.AutoIncrementStep = -1;
                this.columncaseId.AllowDBNull = false;
                this.columncaseId.Unique = true;
                this.columncaseTitle.AllowDBNull = false;
                this.columncaseTitle.MaxLength = 100;
                this.columncaseOwnerId.AllowDBNull = false;
                this.columncaseCreated.AllowDBNull = false;
                this.columncaseCreatedById.AllowDBNull = false;
                this.columncaseModified.AllowDBNull = false;
                this.columncaseModifiedById.AllowDBNull = false;
                this.columncaseProcedureId.AllowDBNull = false;
                this.columncaseVersion.AllowDBNull = false;
                this.columncaseIsCurrentVersion.AllowDBNull = false;
                this.columncaseVarchar1.MaxLength = 256;
                this.columncaseVarchar2.MaxLength = 256;
                this.columncaseVarchar3.MaxLength = 256;
                this.columncaseText1.MaxLength = 21845;
                this.columncaseText2.MaxLength = 21845;
                this.columncaseText3.MaxLength = 21845;
                this.columncaseForwardedCC.MaxLength = 45;
                this.columncaseVarchar4.MaxLength = 256;
                this.columncaseVarchar5.MaxLength = 256;
                this.columncaseVarchar6.MaxLength = 256;
                this.columncaseVarchar7.MaxLength = 256;
                this.columncaseVarchar8.MaxLength = 256;
                this.columncaseVarchar9.MaxLength = 256;
                this.columncaseVarchar10.MaxLength = 256;
                this.columncaseVarchar11.MaxLength = 256;
                this.columncaseVarchar12.MaxLength = 256;
                this.columncaseVarchar13.MaxLength = 256;
                this.columncaseVarchar14.MaxLength = 256;
                this.columncaseVarchar15.MaxLength = 256;
                this.columncaseVarchar16.MaxLength = 256;
                this.columncaseVarchar17.MaxLength = 256;
                this.columncaseVarchar18.MaxLength = 256;
                this.columncaseVarchar19.MaxLength = 256;
                this.columncaseVarchar20.MaxLength = 256;
                this.columncaseText4.MaxLength = 21845;
                this.columncaseText5.MaxLength = 21845;
                this.columncaseText6.MaxLength = 21845;
                this.columncaseText7.MaxLength = 21845;
                this.columncaseText8.MaxLength = 21845;
                this.columncaseText9.MaxLength = 21845;
                this.columncaseText10.MaxLength = 21845;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow NewcasedefinitionRow() {
                return ((casedefinitionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new casedefinitionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(casedefinitionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.casedefinitionRowChanged != null)) {
                    this.casedefinitionRowChanged(this, new casedefinitionRowChangeEvent(((casedefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.casedefinitionRowChanging != null)) {
                    this.casedefinitionRowChanging(this, new casedefinitionRowChangeEvent(((casedefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.casedefinitionRowDeleted != null)) {
                    this.casedefinitionRowDeleted(this, new casedefinitionRowChangeEvent(((casedefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.casedefinitionRowDeleting != null)) {
                    this.casedefinitionRowDeleting(this, new casedefinitionRowChangeEvent(((casedefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecasedefinitionRow(casedefinitionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "casedefinitionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class casehistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncaseHistId;
            
            private global::System.Data.DataColumn columncaseId;
            
            private global::System.Data.DataColumn columncaseTitle;
            
            private global::System.Data.DataColumn columncaseOwnerId;
            
            private global::System.Data.DataColumn columncaseCreated;
            
            private global::System.Data.DataColumn columncaseCreatedById;
            
            private global::System.Data.DataColumn columncaseModified;
            
            private global::System.Data.DataColumn columncaseModifiedById;
            
            private global::System.Data.DataColumn columncaseForwarded;
            
            private global::System.Data.DataColumn columncaseForwardedById;
            
            private global::System.Data.DataColumn columncaseProcedureId;
            
            private global::System.Data.DataColumn columncaseStatusId;
            
            private global::System.Data.DataColumn columncaseVersion;
            
            private global::System.Data.DataColumn columncaseIsCurrentVersion;
            
            private global::System.Data.DataColumn columncaseVarchar1;
            
            private global::System.Data.DataColumn columncaseVarchar2;
            
            private global::System.Data.DataColumn columncaseVarchar3;
            
            private global::System.Data.DataColumn columncaseText1;
            
            private global::System.Data.DataColumn columncaseText2;
            
            private global::System.Data.DataColumn columncaseText3;
            
            private global::System.Data.DataColumn columncaseNumber1;
            
            private global::System.Data.DataColumn columncaseNumber2;
            
            private global::System.Data.DataColumn columncaseNumber3;
            
            private global::System.Data.DataColumn columncaseDateTime1;
            
            private global::System.Data.DataColumn columncaseDateTime2;
            
            private global::System.Data.DataColumn columncaseDateTime3;
            
            private global::System.Data.DataColumn columncaseForwardedCC;
            
            private global::System.Data.DataColumn columncasePrevStatusId;
            
            private global::System.Data.DataColumn columncasePrevOwnerId;
            
            private global::System.Data.DataColumn columncaseNextStatusId;
            
            private global::System.Data.DataColumn columncaseNextOwnerId;
            
            private global::System.Data.DataColumn columncaseIsClosed;
            
            private global::System.Data.DataColumn columncaseNumber4;
            
            private global::System.Data.DataColumn columncaseNumber5;
            
            private global::System.Data.DataColumn columncaseNumber6;
            
            private global::System.Data.DataColumn columncaseNumber7;
            
            private global::System.Data.DataColumn columncaseNumber8;
            
            private global::System.Data.DataColumn columncaseNumber9;
            
            private global::System.Data.DataColumn columncaseNumber10;
            
            private global::System.Data.DataColumn columncaseVarchar4;
            
            private global::System.Data.DataColumn columncaseVarchar5;
            
            private global::System.Data.DataColumn columncaseVarchar6;
            
            private global::System.Data.DataColumn columncaseVarchar7;
            
            private global::System.Data.DataColumn columncaseVarchar8;
            
            private global::System.Data.DataColumn columncaseVarchar9;
            
            private global::System.Data.DataColumn columncaseVarchar10;
            
            private global::System.Data.DataColumn columncaseVarchar11;
            
            private global::System.Data.DataColumn columncaseVarchar12;
            
            private global::System.Data.DataColumn columncaseVarchar13;
            
            private global::System.Data.DataColumn columncaseVarchar14;
            
            private global::System.Data.DataColumn columncaseVarchar15;
            
            private global::System.Data.DataColumn columncaseVarchar16;
            
            private global::System.Data.DataColumn columncaseVarchar17;
            
            private global::System.Data.DataColumn columncaseVarchar18;
            
            private global::System.Data.DataColumn columncaseVarchar19;
            
            private global::System.Data.DataColumn columncaseVarchar20;
            
            private global::System.Data.DataColumn columncaseDateTime4;
            
            private global::System.Data.DataColumn columncaseDateTime5;
            
            private global::System.Data.DataColumn columncaseDateTime6;
            
            private global::System.Data.DataColumn columncaseDateTime7;
            
            private global::System.Data.DataColumn columncaseDateTime8;
            
            private global::System.Data.DataColumn columncaseDateTime9;
            
            private global::System.Data.DataColumn columncaseDateTime10;
            
            private global::System.Data.DataColumn columncaseText4;
            
            private global::System.Data.DataColumn columncaseText5;
            
            private global::System.Data.DataColumn columncaseText6;
            
            private global::System.Data.DataColumn columncaseText7;
            
            private global::System.Data.DataColumn columncaseText8;
            
            private global::System.Data.DataColumn columncaseText9;
            
            private global::System.Data.DataColumn columncaseText10;
            
            private global::System.Data.DataColumn columncaseReceivedFromId;
            
            private global::System.Data.DataColumn columncaseReceived;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryDataTable() {
                this.TableName = "casehistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal casehistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected casehistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseHistIdColumn {
                get {
                    return this.columncaseHistId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseIdColumn {
                get {
                    return this.columncaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseTitleColumn {
                get {
                    return this.columncaseTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseOwnerIdColumn {
                get {
                    return this.columncaseOwnerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseCreatedColumn {
                get {
                    return this.columncaseCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseCreatedByIdColumn {
                get {
                    return this.columncaseCreatedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseModifiedColumn {
                get {
                    return this.columncaseModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseModifiedByIdColumn {
                get {
                    return this.columncaseModifiedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseForwardedColumn {
                get {
                    return this.columncaseForwarded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseForwardedByIdColumn {
                get {
                    return this.columncaseForwardedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseProcedureIdColumn {
                get {
                    return this.columncaseProcedureId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseStatusIdColumn {
                get {
                    return this.columncaseStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVersionColumn {
                get {
                    return this.columncaseVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseIsCurrentVersionColumn {
                get {
                    return this.columncaseIsCurrentVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar1Column {
                get {
                    return this.columncaseVarchar1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar2Column {
                get {
                    return this.columncaseVarchar2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar3Column {
                get {
                    return this.columncaseVarchar3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText1Column {
                get {
                    return this.columncaseText1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText2Column {
                get {
                    return this.columncaseText2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText3Column {
                get {
                    return this.columncaseText3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber1Column {
                get {
                    return this.columncaseNumber1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber2Column {
                get {
                    return this.columncaseNumber2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber3Column {
                get {
                    return this.columncaseNumber3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime1Column {
                get {
                    return this.columncaseDateTime1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime2Column {
                get {
                    return this.columncaseDateTime2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime3Column {
                get {
                    return this.columncaseDateTime3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseForwardedCCColumn {
                get {
                    return this.columncaseForwardedCC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn casePrevStatusIdColumn {
                get {
                    return this.columncasePrevStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn casePrevOwnerIdColumn {
                get {
                    return this.columncasePrevOwnerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNextStatusIdColumn {
                get {
                    return this.columncaseNextStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNextOwnerIdColumn {
                get {
                    return this.columncaseNextOwnerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseIsClosedColumn {
                get {
                    return this.columncaseIsClosed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber4Column {
                get {
                    return this.columncaseNumber4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber5Column {
                get {
                    return this.columncaseNumber5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber6Column {
                get {
                    return this.columncaseNumber6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber7Column {
                get {
                    return this.columncaseNumber7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber8Column {
                get {
                    return this.columncaseNumber8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber9Column {
                get {
                    return this.columncaseNumber9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber10Column {
                get {
                    return this.columncaseNumber10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar4Column {
                get {
                    return this.columncaseVarchar4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar5Column {
                get {
                    return this.columncaseVarchar5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar6Column {
                get {
                    return this.columncaseVarchar6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar7Column {
                get {
                    return this.columncaseVarchar7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar8Column {
                get {
                    return this.columncaseVarchar8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar9Column {
                get {
                    return this.columncaseVarchar9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar10Column {
                get {
                    return this.columncaseVarchar10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar11Column {
                get {
                    return this.columncaseVarchar11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar12Column {
                get {
                    return this.columncaseVarchar12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar13Column {
                get {
                    return this.columncaseVarchar13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar14Column {
                get {
                    return this.columncaseVarchar14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar15Column {
                get {
                    return this.columncaseVarchar15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar16Column {
                get {
                    return this.columncaseVarchar16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar17Column {
                get {
                    return this.columncaseVarchar17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar18Column {
                get {
                    return this.columncaseVarchar18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar19Column {
                get {
                    return this.columncaseVarchar19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar20Column {
                get {
                    return this.columncaseVarchar20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime4Column {
                get {
                    return this.columncaseDateTime4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime5Column {
                get {
                    return this.columncaseDateTime5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime6Column {
                get {
                    return this.columncaseDateTime6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime7Column {
                get {
                    return this.columncaseDateTime7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime8Column {
                get {
                    return this.columncaseDateTime8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime9Column {
                get {
                    return this.columncaseDateTime9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime10Column {
                get {
                    return this.columncaseDateTime10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText4Column {
                get {
                    return this.columncaseText4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText5Column {
                get {
                    return this.columncaseText5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText6Column {
                get {
                    return this.columncaseText6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText7Column {
                get {
                    return this.columncaseText7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText8Column {
                get {
                    return this.columncaseText8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText9Column {
                get {
                    return this.columncaseText9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText10Column {
                get {
                    return this.columncaseText10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseReceivedFromIdColumn {
                get {
                    return this.columncaseReceivedFromId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseReceivedColumn {
                get {
                    return this.columncaseReceived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRow this[int index] {
                get {
                    return ((casehistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casehistoryRowChangeEventHandler casehistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casehistoryRowChangeEventHandler casehistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casehistoryRowChangeEventHandler casehistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casehistoryRowChangeEventHandler casehistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcasehistoryRow(casehistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRow AddcasehistoryRow(
                        casedefinitionRow parentcasedefinitionRowByCaseHistCaseId, 
                        string caseTitle, 
                        workflowuserRow parentworkflowuserRowByOwnerH, 
                        System.DateTime caseCreated, 
                        workflowuserRow parentworkflowuserRowByAuthorH, 
                        System.DateTime caseModified, 
                        workflowuserRow parentworkflowuserRowByEditorH, 
                        System.DateTime caseForwarded, 
                        workflowuserRow parentworkflowuserRowByForwarderH, 
                        int caseProcedureId, 
                        int caseStatusId, 
                        int caseVersion, 
                        ulong caseIsCurrentVersion, 
                        string caseVarchar1, 
                        string caseVarchar2, 
                        string caseVarchar3, 
                        string caseText1, 
                        string caseText2, 
                        string caseText3, 
                        decimal caseNumber1, 
                        decimal caseNumber2, 
                        decimal caseNumber3, 
                        System.DateTime caseDateTime1, 
                        System.DateTime caseDateTime2, 
                        System.DateTime caseDateTime3, 
                        string caseForwardedCC, 
                        int casePrevStatusId, 
                        int casePrevOwnerId, 
                        int caseNextStatusId, 
                        int caseNextOwnerId, 
                        ulong caseIsClosed, 
                        decimal caseNumber4, 
                        decimal caseNumber5, 
                        decimal caseNumber6, 
                        decimal caseNumber7, 
                        decimal caseNumber8, 
                        decimal caseNumber9, 
                        decimal caseNumber10, 
                        string caseVarchar4, 
                        string caseVarchar5, 
                        string caseVarchar6, 
                        string caseVarchar7, 
                        string caseVarchar8, 
                        string caseVarchar9, 
                        string caseVarchar10, 
                        string caseVarchar11, 
                        string caseVarchar12, 
                        string caseVarchar13, 
                        string caseVarchar14, 
                        string caseVarchar15, 
                        string caseVarchar16, 
                        string caseVarchar17, 
                        string caseVarchar18, 
                        string caseVarchar19, 
                        string caseVarchar20, 
                        System.DateTime caseDateTime4, 
                        System.DateTime caseDateTime5, 
                        System.DateTime caseDateTime6, 
                        System.DateTime caseDateTime7, 
                        System.DateTime caseDateTime8, 
                        System.DateTime caseDateTime9, 
                        System.DateTime caseDateTime10, 
                        string caseText4, 
                        string caseText5, 
                        string caseText6, 
                        string caseText7, 
                        string caseText8, 
                        string caseText9, 
                        string caseText10, 
                        int caseReceivedFromId, 
                        System.DateTime caseReceived) {
                casehistoryRow rowcasehistoryRow = ((casehistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        caseTitle,
                        null,
                        caseCreated,
                        null,
                        caseModified,
                        null,
                        caseForwarded,
                        null,
                        caseProcedureId,
                        caseStatusId,
                        caseVersion,
                        caseIsCurrentVersion,
                        caseVarchar1,
                        caseVarchar2,
                        caseVarchar3,
                        caseText1,
                        caseText2,
                        caseText3,
                        caseNumber1,
                        caseNumber2,
                        caseNumber3,
                        caseDateTime1,
                        caseDateTime2,
                        caseDateTime3,
                        caseForwardedCC,
                        casePrevStatusId,
                        casePrevOwnerId,
                        caseNextStatusId,
                        caseNextOwnerId,
                        caseIsClosed,
                        caseNumber4,
                        caseNumber5,
                        caseNumber6,
                        caseNumber7,
                        caseNumber8,
                        caseNumber9,
                        caseNumber10,
                        caseVarchar4,
                        caseVarchar5,
                        caseVarchar6,
                        caseVarchar7,
                        caseVarchar8,
                        caseVarchar9,
                        caseVarchar10,
                        caseVarchar11,
                        caseVarchar12,
                        caseVarchar13,
                        caseVarchar14,
                        caseVarchar15,
                        caseVarchar16,
                        caseVarchar17,
                        caseVarchar18,
                        caseVarchar19,
                        caseVarchar20,
                        caseDateTime4,
                        caseDateTime5,
                        caseDateTime6,
                        caseDateTime7,
                        caseDateTime8,
                        caseDateTime9,
                        caseDateTime10,
                        caseText4,
                        caseText5,
                        caseText6,
                        caseText7,
                        caseText8,
                        caseText9,
                        caseText10,
                        caseReceivedFromId,
                        caseReceived};
                if ((parentcasedefinitionRowByCaseHistCaseId != null)) {
                    columnValuesArray[1] = parentcasedefinitionRowByCaseHistCaseId[0];
                }
                if ((parentworkflowuserRowByOwnerH != null)) {
                    columnValuesArray[3] = parentworkflowuserRowByOwnerH[0];
                }
                if ((parentworkflowuserRowByAuthorH != null)) {
                    columnValuesArray[5] = parentworkflowuserRowByAuthorH[0];
                }
                if ((parentworkflowuserRowByEditorH != null)) {
                    columnValuesArray[7] = parentworkflowuserRowByEditorH[0];
                }
                if ((parentworkflowuserRowByForwarderH != null)) {
                    columnValuesArray[9] = parentworkflowuserRowByForwarderH[0];
                }
                rowcasehistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcasehistoryRow);
                return rowcasehistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRow FindBycaseHistId(int caseHistId) {
                return ((casehistoryRow)(this.Rows.Find(new object[] {
                            caseHistId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                casehistoryDataTable cln = ((casehistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new casehistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncaseHistId = base.Columns["caseHistId"];
                this.columncaseId = base.Columns["caseId"];
                this.columncaseTitle = base.Columns["caseTitle"];
                this.columncaseOwnerId = base.Columns["caseOwnerId"];
                this.columncaseCreated = base.Columns["caseCreated"];
                this.columncaseCreatedById = base.Columns["caseCreatedById"];
                this.columncaseModified = base.Columns["caseModified"];
                this.columncaseModifiedById = base.Columns["caseModifiedById"];
                this.columncaseForwarded = base.Columns["caseForwarded"];
                this.columncaseForwardedById = base.Columns["caseForwardedById"];
                this.columncaseProcedureId = base.Columns["caseProcedureId"];
                this.columncaseStatusId = base.Columns["caseStatusId"];
                this.columncaseVersion = base.Columns["caseVersion"];
                this.columncaseIsCurrentVersion = base.Columns["caseIsCurrentVersion"];
                this.columncaseVarchar1 = base.Columns["caseVarchar1"];
                this.columncaseVarchar2 = base.Columns["caseVarchar2"];
                this.columncaseVarchar3 = base.Columns["caseVarchar3"];
                this.columncaseText1 = base.Columns["caseText1"];
                this.columncaseText2 = base.Columns["caseText2"];
                this.columncaseText3 = base.Columns["caseText3"];
                this.columncaseNumber1 = base.Columns["caseNumber1"];
                this.columncaseNumber2 = base.Columns["caseNumber2"];
                this.columncaseNumber3 = base.Columns["caseNumber3"];
                this.columncaseDateTime1 = base.Columns["caseDateTime1"];
                this.columncaseDateTime2 = base.Columns["caseDateTime2"];
                this.columncaseDateTime3 = base.Columns["caseDateTime3"];
                this.columncaseForwardedCC = base.Columns["caseForwardedCC"];
                this.columncasePrevStatusId = base.Columns["casePrevStatusId"];
                this.columncasePrevOwnerId = base.Columns["casePrevOwnerId"];
                this.columncaseNextStatusId = base.Columns["caseNextStatusId"];
                this.columncaseNextOwnerId = base.Columns["caseNextOwnerId"];
                this.columncaseIsClosed = base.Columns["caseIsClosed"];
                this.columncaseNumber4 = base.Columns["caseNumber4"];
                this.columncaseNumber5 = base.Columns["caseNumber5"];
                this.columncaseNumber6 = base.Columns["caseNumber6"];
                this.columncaseNumber7 = base.Columns["caseNumber7"];
                this.columncaseNumber8 = base.Columns["caseNumber8"];
                this.columncaseNumber9 = base.Columns["caseNumber9"];
                this.columncaseNumber10 = base.Columns["caseNumber10"];
                this.columncaseVarchar4 = base.Columns["caseVarchar4"];
                this.columncaseVarchar5 = base.Columns["caseVarchar5"];
                this.columncaseVarchar6 = base.Columns["caseVarchar6"];
                this.columncaseVarchar7 = base.Columns["caseVarchar7"];
                this.columncaseVarchar8 = base.Columns["caseVarchar8"];
                this.columncaseVarchar9 = base.Columns["caseVarchar9"];
                this.columncaseVarchar10 = base.Columns["caseVarchar10"];
                this.columncaseVarchar11 = base.Columns["caseVarchar11"];
                this.columncaseVarchar12 = base.Columns["caseVarchar12"];
                this.columncaseVarchar13 = base.Columns["caseVarchar13"];
                this.columncaseVarchar14 = base.Columns["caseVarchar14"];
                this.columncaseVarchar15 = base.Columns["caseVarchar15"];
                this.columncaseVarchar16 = base.Columns["caseVarchar16"];
                this.columncaseVarchar17 = base.Columns["caseVarchar17"];
                this.columncaseVarchar18 = base.Columns["caseVarchar18"];
                this.columncaseVarchar19 = base.Columns["caseVarchar19"];
                this.columncaseVarchar20 = base.Columns["caseVarchar20"];
                this.columncaseDateTime4 = base.Columns["caseDateTime4"];
                this.columncaseDateTime5 = base.Columns["caseDateTime5"];
                this.columncaseDateTime6 = base.Columns["caseDateTime6"];
                this.columncaseDateTime7 = base.Columns["caseDateTime7"];
                this.columncaseDateTime8 = base.Columns["caseDateTime8"];
                this.columncaseDateTime9 = base.Columns["caseDateTime9"];
                this.columncaseDateTime10 = base.Columns["caseDateTime10"];
                this.columncaseText4 = base.Columns["caseText4"];
                this.columncaseText5 = base.Columns["caseText5"];
                this.columncaseText6 = base.Columns["caseText6"];
                this.columncaseText7 = base.Columns["caseText7"];
                this.columncaseText8 = base.Columns["caseText8"];
                this.columncaseText9 = base.Columns["caseText9"];
                this.columncaseText10 = base.Columns["caseText10"];
                this.columncaseReceivedFromId = base.Columns["caseReceivedFromId"];
                this.columncaseReceived = base.Columns["caseReceived"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncaseHistId = new global::System.Data.DataColumn("caseHistId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseHistId);
                this.columncaseId = new global::System.Data.DataColumn("caseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseId);
                this.columncaseTitle = new global::System.Data.DataColumn("caseTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseTitle);
                this.columncaseOwnerId = new global::System.Data.DataColumn("caseOwnerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseOwnerId);
                this.columncaseCreated = new global::System.Data.DataColumn("caseCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseCreated);
                this.columncaseCreatedById = new global::System.Data.DataColumn("caseCreatedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseCreatedById);
                this.columncaseModified = new global::System.Data.DataColumn("caseModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseModified);
                this.columncaseModifiedById = new global::System.Data.DataColumn("caseModifiedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseModifiedById);
                this.columncaseForwarded = new global::System.Data.DataColumn("caseForwarded", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseForwarded);
                this.columncaseForwardedById = new global::System.Data.DataColumn("caseForwardedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseForwardedById);
                this.columncaseProcedureId = new global::System.Data.DataColumn("caseProcedureId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseProcedureId);
                this.columncaseStatusId = new global::System.Data.DataColumn("caseStatusId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseStatusId);
                this.columncaseVersion = new global::System.Data.DataColumn("caseVersion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVersion);
                this.columncaseIsCurrentVersion = new global::System.Data.DataColumn("caseIsCurrentVersion", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseIsCurrentVersion);
                this.columncaseVarchar1 = new global::System.Data.DataColumn("caseVarchar1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar1);
                this.columncaseVarchar2 = new global::System.Data.DataColumn("caseVarchar2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar2);
                this.columncaseVarchar3 = new global::System.Data.DataColumn("caseVarchar3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar3);
                this.columncaseText1 = new global::System.Data.DataColumn("caseText1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText1);
                this.columncaseText2 = new global::System.Data.DataColumn("caseText2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText2);
                this.columncaseText3 = new global::System.Data.DataColumn("caseText3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText3);
                this.columncaseNumber1 = new global::System.Data.DataColumn("caseNumber1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber1);
                this.columncaseNumber2 = new global::System.Data.DataColumn("caseNumber2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber2);
                this.columncaseNumber3 = new global::System.Data.DataColumn("caseNumber3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber3);
                this.columncaseDateTime1 = new global::System.Data.DataColumn("caseDateTime1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime1);
                this.columncaseDateTime2 = new global::System.Data.DataColumn("caseDateTime2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime2);
                this.columncaseDateTime3 = new global::System.Data.DataColumn("caseDateTime3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime3);
                this.columncaseForwardedCC = new global::System.Data.DataColumn("caseForwardedCC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseForwardedCC);
                this.columncasePrevStatusId = new global::System.Data.DataColumn("casePrevStatusId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncasePrevStatusId);
                this.columncasePrevOwnerId = new global::System.Data.DataColumn("casePrevOwnerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncasePrevOwnerId);
                this.columncaseNextStatusId = new global::System.Data.DataColumn("caseNextStatusId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNextStatusId);
                this.columncaseNextOwnerId = new global::System.Data.DataColumn("caseNextOwnerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNextOwnerId);
                this.columncaseIsClosed = new global::System.Data.DataColumn("caseIsClosed", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseIsClosed);
                this.columncaseNumber4 = new global::System.Data.DataColumn("caseNumber4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber4);
                this.columncaseNumber5 = new global::System.Data.DataColumn("caseNumber5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber5);
                this.columncaseNumber6 = new global::System.Data.DataColumn("caseNumber6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber6);
                this.columncaseNumber7 = new global::System.Data.DataColumn("caseNumber7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber7);
                this.columncaseNumber8 = new global::System.Data.DataColumn("caseNumber8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber8);
                this.columncaseNumber9 = new global::System.Data.DataColumn("caseNumber9", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber9);
                this.columncaseNumber10 = new global::System.Data.DataColumn("caseNumber10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber10);
                this.columncaseVarchar4 = new global::System.Data.DataColumn("caseVarchar4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar4);
                this.columncaseVarchar5 = new global::System.Data.DataColumn("caseVarchar5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar5);
                this.columncaseVarchar6 = new global::System.Data.DataColumn("caseVarchar6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar6);
                this.columncaseVarchar7 = new global::System.Data.DataColumn("caseVarchar7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar7);
                this.columncaseVarchar8 = new global::System.Data.DataColumn("caseVarchar8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar8);
                this.columncaseVarchar9 = new global::System.Data.DataColumn("caseVarchar9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar9);
                this.columncaseVarchar10 = new global::System.Data.DataColumn("caseVarchar10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar10);
                this.columncaseVarchar11 = new global::System.Data.DataColumn("caseVarchar11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar11);
                this.columncaseVarchar12 = new global::System.Data.DataColumn("caseVarchar12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar12);
                this.columncaseVarchar13 = new global::System.Data.DataColumn("caseVarchar13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar13);
                this.columncaseVarchar14 = new global::System.Data.DataColumn("caseVarchar14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar14);
                this.columncaseVarchar15 = new global::System.Data.DataColumn("caseVarchar15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar15);
                this.columncaseVarchar16 = new global::System.Data.DataColumn("caseVarchar16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar16);
                this.columncaseVarchar17 = new global::System.Data.DataColumn("caseVarchar17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar17);
                this.columncaseVarchar18 = new global::System.Data.DataColumn("caseVarchar18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar18);
                this.columncaseVarchar19 = new global::System.Data.DataColumn("caseVarchar19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar19);
                this.columncaseVarchar20 = new global::System.Data.DataColumn("caseVarchar20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar20);
                this.columncaseDateTime4 = new global::System.Data.DataColumn("caseDateTime4", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime4);
                this.columncaseDateTime5 = new global::System.Data.DataColumn("caseDateTime5", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime5);
                this.columncaseDateTime6 = new global::System.Data.DataColumn("caseDateTime6", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime6);
                this.columncaseDateTime7 = new global::System.Data.DataColumn("caseDateTime7", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime7);
                this.columncaseDateTime8 = new global::System.Data.DataColumn("caseDateTime8", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime8);
                this.columncaseDateTime9 = new global::System.Data.DataColumn("caseDateTime9", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime9);
                this.columncaseDateTime10 = new global::System.Data.DataColumn("caseDateTime10", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime10);
                this.columncaseText4 = new global::System.Data.DataColumn("caseText4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText4);
                this.columncaseText5 = new global::System.Data.DataColumn("caseText5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText5);
                this.columncaseText6 = new global::System.Data.DataColumn("caseText6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText6);
                this.columncaseText7 = new global::System.Data.DataColumn("caseText7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText7);
                this.columncaseText8 = new global::System.Data.DataColumn("caseText8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText8);
                this.columncaseText9 = new global::System.Data.DataColumn("caseText9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText9);
                this.columncaseText10 = new global::System.Data.DataColumn("caseText10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText10);
                this.columncaseReceivedFromId = new global::System.Data.DataColumn("caseReceivedFromId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseReceivedFromId);
                this.columncaseReceived = new global::System.Data.DataColumn("caseReceived", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseReceived);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncaseHistId}, true));
                this.columncaseHistId.AutoIncrement = true;
                this.columncaseHistId.AutoIncrementSeed = -1;
                this.columncaseHistId.AutoIncrementStep = -1;
                this.columncaseHistId.AllowDBNull = false;
                this.columncaseHistId.Unique = true;
                this.columncaseId.AllowDBNull = false;
                this.columncaseTitle.AllowDBNull = false;
                this.columncaseTitle.MaxLength = 100;
                this.columncaseOwnerId.AllowDBNull = false;
                this.columncaseCreated.AllowDBNull = false;
                this.columncaseCreatedById.AllowDBNull = false;
                this.columncaseModified.AllowDBNull = false;
                this.columncaseModifiedById.AllowDBNull = false;
                this.columncaseProcedureId.AllowDBNull = false;
                this.columncaseVersion.AllowDBNull = false;
                this.columncaseIsCurrentVersion.AllowDBNull = false;
                this.columncaseVarchar1.MaxLength = 256;
                this.columncaseVarchar2.MaxLength = 256;
                this.columncaseVarchar3.MaxLength = 256;
                this.columncaseText1.MaxLength = 21845;
                this.columncaseText2.MaxLength = 21845;
                this.columncaseText3.MaxLength = 21845;
                this.columncaseForwardedCC.MaxLength = 45;
                this.columncaseVarchar4.MaxLength = 256;
                this.columncaseVarchar5.MaxLength = 256;
                this.columncaseVarchar6.MaxLength = 256;
                this.columncaseVarchar7.MaxLength = 256;
                this.columncaseVarchar8.MaxLength = 256;
                this.columncaseVarchar9.MaxLength = 256;
                this.columncaseVarchar10.MaxLength = 256;
                this.columncaseVarchar11.MaxLength = 256;
                this.columncaseVarchar12.MaxLength = 256;
                this.columncaseVarchar13.MaxLength = 256;
                this.columncaseVarchar14.MaxLength = 256;
                this.columncaseVarchar15.MaxLength = 256;
                this.columncaseVarchar16.MaxLength = 256;
                this.columncaseVarchar17.MaxLength = 256;
                this.columncaseVarchar18.MaxLength = 256;
                this.columncaseVarchar19.MaxLength = 256;
                this.columncaseVarchar20.MaxLength = 256;
                this.columncaseText4.MaxLength = 21845;
                this.columncaseText5.MaxLength = 21845;
                this.columncaseText6.MaxLength = 21845;
                this.columncaseText7.MaxLength = 21845;
                this.columncaseText8.MaxLength = 21845;
                this.columncaseText9.MaxLength = 21845;
                this.columncaseText10.MaxLength = 21845;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRow NewcasehistoryRow() {
                return ((casehistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new casehistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(casehistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.casehistoryRowChanged != null)) {
                    this.casehistoryRowChanged(this, new casehistoryRowChangeEvent(((casehistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.casehistoryRowChanging != null)) {
                    this.casehistoryRowChanging(this, new casehistoryRowChangeEvent(((casehistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.casehistoryRowDeleted != null)) {
                    this.casehistoryRowDeleted(this, new casehistoryRowChangeEvent(((casehistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.casehistoryRowDeleting != null)) {
                    this.casehistoryRowDeleting(this, new casehistoryRowChangeEvent(((casehistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecasehistoryRow(casehistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "casehistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class casehistorydetailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncaseId;
            
            private global::System.Data.DataColumn columncaseTitle;
            
            private global::System.Data.DataColumn columncaseOwnerId;
            
            private global::System.Data.DataColumn columncaseCreated;
            
            private global::System.Data.DataColumn columncaseCreatedById;
            
            private global::System.Data.DataColumn columncaseModified;
            
            private global::System.Data.DataColumn columncaseModifiedById;
            
            private global::System.Data.DataColumn columncaseProcedureId;
            
            private global::System.Data.DataColumn columncaseStatusId;
            
            private global::System.Data.DataColumn columncaseSubversion;
            
            private global::System.Data.DataColumn columncaseVersion;
            
            private global::System.Data.DataColumn columncaseVarchar1;
            
            private global::System.Data.DataColumn columncaseVarchar2;
            
            private global::System.Data.DataColumn columncaseVarchar3;
            
            private global::System.Data.DataColumn columncaseText1;
            
            private global::System.Data.DataColumn columncaseText2;
            
            private global::System.Data.DataColumn columncaseText3;
            
            private global::System.Data.DataColumn columncaseNumber1;
            
            private global::System.Data.DataColumn columncaseNumber2;
            
            private global::System.Data.DataColumn columncaseNumber3;
            
            private global::System.Data.DataColumn columncaseDateTime1;
            
            private global::System.Data.DataColumn columncaseDateTime2;
            
            private global::System.Data.DataColumn columncaseDateTime3;
            
            private global::System.Data.DataColumn columncaseForwardedCC;
            
            private global::System.Data.DataColumn columncaseIsClosed;
            
            private global::System.Data.DataColumn columncaseNumber4;
            
            private global::System.Data.DataColumn columncaseNumber5;
            
            private global::System.Data.DataColumn columncaseNumber6;
            
            private global::System.Data.DataColumn columncaseNumber7;
            
            private global::System.Data.DataColumn columncaseNumber8;
            
            private global::System.Data.DataColumn columncaseNumber9;
            
            private global::System.Data.DataColumn columncaseNumber10;
            
            private global::System.Data.DataColumn columncaseVarchar4;
            
            private global::System.Data.DataColumn columncaseVarchar5;
            
            private global::System.Data.DataColumn columncaseVarchar6;
            
            private global::System.Data.DataColumn columncaseVarchar7;
            
            private global::System.Data.DataColumn columncaseVarchar8;
            
            private global::System.Data.DataColumn columncaseVarchar9;
            
            private global::System.Data.DataColumn columncaseVarchar10;
            
            private global::System.Data.DataColumn columncaseVarchar11;
            
            private global::System.Data.DataColumn columncaseVarchar12;
            
            private global::System.Data.DataColumn columncaseVarchar13;
            
            private global::System.Data.DataColumn columncaseVarchar14;
            
            private global::System.Data.DataColumn columncaseVarchar15;
            
            private global::System.Data.DataColumn columncaseVarchar16;
            
            private global::System.Data.DataColumn columncaseVarchar17;
            
            private global::System.Data.DataColumn columncaseVarchar18;
            
            private global::System.Data.DataColumn columncaseVarchar19;
            
            private global::System.Data.DataColumn columncaseVarchar20;
            
            private global::System.Data.DataColumn columncaseDateTime4;
            
            private global::System.Data.DataColumn columncaseDateTime5;
            
            private global::System.Data.DataColumn columncaseDateTime6;
            
            private global::System.Data.DataColumn columncaseDateTime7;
            
            private global::System.Data.DataColumn columncaseDateTime8;
            
            private global::System.Data.DataColumn columncaseDateTime9;
            
            private global::System.Data.DataColumn columncaseDateTime10;
            
            private global::System.Data.DataColumn columncaseText4;
            
            private global::System.Data.DataColumn columncaseText5;
            
            private global::System.Data.DataColumn columncaseText6;
            
            private global::System.Data.DataColumn columncaseText7;
            
            private global::System.Data.DataColumn columncaseText8;
            
            private global::System.Data.DataColumn columncaseText9;
            
            private global::System.Data.DataColumn columncaseText10;
            
            private global::System.Data.DataColumn columncaseHistDetId;
            
            private global::System.Data.DataColumn columncaseHistId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsDataTable() {
                this.TableName = "casehistorydetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal casehistorydetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected casehistorydetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseIdColumn {
                get {
                    return this.columncaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseTitleColumn {
                get {
                    return this.columncaseTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseOwnerIdColumn {
                get {
                    return this.columncaseOwnerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseCreatedColumn {
                get {
                    return this.columncaseCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseCreatedByIdColumn {
                get {
                    return this.columncaseCreatedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseModifiedColumn {
                get {
                    return this.columncaseModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseModifiedByIdColumn {
                get {
                    return this.columncaseModifiedById;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseProcedureIdColumn {
                get {
                    return this.columncaseProcedureId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseStatusIdColumn {
                get {
                    return this.columncaseStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseSubversionColumn {
                get {
                    return this.columncaseSubversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVersionColumn {
                get {
                    return this.columncaseVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar1Column {
                get {
                    return this.columncaseVarchar1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar2Column {
                get {
                    return this.columncaseVarchar2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar3Column {
                get {
                    return this.columncaseVarchar3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText1Column {
                get {
                    return this.columncaseText1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText2Column {
                get {
                    return this.columncaseText2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText3Column {
                get {
                    return this.columncaseText3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber1Column {
                get {
                    return this.columncaseNumber1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber2Column {
                get {
                    return this.columncaseNumber2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber3Column {
                get {
                    return this.columncaseNumber3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime1Column {
                get {
                    return this.columncaseDateTime1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime2Column {
                get {
                    return this.columncaseDateTime2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime3Column {
                get {
                    return this.columncaseDateTime3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseForwardedCCColumn {
                get {
                    return this.columncaseForwardedCC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseIsClosedColumn {
                get {
                    return this.columncaseIsClosed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber4Column {
                get {
                    return this.columncaseNumber4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber5Column {
                get {
                    return this.columncaseNumber5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber6Column {
                get {
                    return this.columncaseNumber6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber7Column {
                get {
                    return this.columncaseNumber7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber8Column {
                get {
                    return this.columncaseNumber8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber9Column {
                get {
                    return this.columncaseNumber9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseNumber10Column {
                get {
                    return this.columncaseNumber10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar4Column {
                get {
                    return this.columncaseVarchar4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar5Column {
                get {
                    return this.columncaseVarchar5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar6Column {
                get {
                    return this.columncaseVarchar6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar7Column {
                get {
                    return this.columncaseVarchar7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar8Column {
                get {
                    return this.columncaseVarchar8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar9Column {
                get {
                    return this.columncaseVarchar9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar10Column {
                get {
                    return this.columncaseVarchar10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar11Column {
                get {
                    return this.columncaseVarchar11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar12Column {
                get {
                    return this.columncaseVarchar12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar13Column {
                get {
                    return this.columncaseVarchar13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar14Column {
                get {
                    return this.columncaseVarchar14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar15Column {
                get {
                    return this.columncaseVarchar15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar16Column {
                get {
                    return this.columncaseVarchar16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar17Column {
                get {
                    return this.columncaseVarchar17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar18Column {
                get {
                    return this.columncaseVarchar18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar19Column {
                get {
                    return this.columncaseVarchar19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseVarchar20Column {
                get {
                    return this.columncaseVarchar20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime4Column {
                get {
                    return this.columncaseDateTime4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime5Column {
                get {
                    return this.columncaseDateTime5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime6Column {
                get {
                    return this.columncaseDateTime6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime7Column {
                get {
                    return this.columncaseDateTime7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime8Column {
                get {
                    return this.columncaseDateTime8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime9Column {
                get {
                    return this.columncaseDateTime9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseDateTime10Column {
                get {
                    return this.columncaseDateTime10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText4Column {
                get {
                    return this.columncaseText4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText5Column {
                get {
                    return this.columncaseText5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText6Column {
                get {
                    return this.columncaseText6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText7Column {
                get {
                    return this.columncaseText7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText8Column {
                get {
                    return this.columncaseText8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText9Column {
                get {
                    return this.columncaseText9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseText10Column {
                get {
                    return this.columncaseText10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseHistDetIdColumn {
                get {
                    return this.columncaseHistDetId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseHistIdColumn {
                get {
                    return this.columncaseHistId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsRow this[int index] {
                get {
                    return ((casehistorydetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casehistorydetailsRowChangeEventHandler casehistorydetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casehistorydetailsRowChangeEventHandler casehistorydetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casehistorydetailsRowChangeEventHandler casehistorydetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casehistorydetailsRowChangeEventHandler casehistorydetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcasehistorydetailsRow(casehistorydetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsRow AddcasehistorydetailsRow(
                        casedefinitionRow parentcasedefinitionRowByCaseHistDetCaseId, 
                        string caseTitle, 
                        workflowuserRow parentworkflowuserRowByOwnerHD, 
                        System.DateTime caseCreated, 
                        workflowuserRow parentworkflowuserRowByAuthorHD, 
                        System.DateTime caseModified, 
                        workflowuserRow parentworkflowuserRowByEditorHD, 
                        int caseProcedureId, 
                        int caseStatusId, 
                        int caseSubversion, 
                        int caseVersion, 
                        string caseVarchar1, 
                        string caseVarchar2, 
                        string caseVarchar3, 
                        string caseText1, 
                        string caseText2, 
                        string caseText3, 
                        decimal caseNumber1, 
                        decimal caseNumber2, 
                        decimal caseNumber3, 
                        System.DateTime caseDateTime1, 
                        System.DateTime caseDateTime2, 
                        System.DateTime caseDateTime3, 
                        string caseForwardedCC, 
                        ulong caseIsClosed, 
                        decimal caseNumber4, 
                        decimal caseNumber5, 
                        decimal caseNumber6, 
                        decimal caseNumber7, 
                        decimal caseNumber8, 
                        decimal caseNumber9, 
                        decimal caseNumber10, 
                        string caseVarchar4, 
                        string caseVarchar5, 
                        string caseVarchar6, 
                        string caseVarchar7, 
                        string caseVarchar8, 
                        string caseVarchar9, 
                        string caseVarchar10, 
                        string caseVarchar11, 
                        string caseVarchar12, 
                        string caseVarchar13, 
                        string caseVarchar14, 
                        string caseVarchar15, 
                        string caseVarchar16, 
                        string caseVarchar17, 
                        string caseVarchar18, 
                        string caseVarchar19, 
                        string caseVarchar20, 
                        System.DateTime caseDateTime4, 
                        System.DateTime caseDateTime5, 
                        System.DateTime caseDateTime6, 
                        System.DateTime caseDateTime7, 
                        System.DateTime caseDateTime8, 
                        System.DateTime caseDateTime9, 
                        System.DateTime caseDateTime10, 
                        string caseText4, 
                        string caseText5, 
                        string caseText6, 
                        string caseText7, 
                        string caseText8, 
                        string caseText9, 
                        string caseText10, 
                        int caseHistId) {
                casehistorydetailsRow rowcasehistorydetailsRow = ((casehistorydetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        caseTitle,
                        null,
                        caseCreated,
                        null,
                        caseModified,
                        null,
                        caseProcedureId,
                        caseStatusId,
                        caseSubversion,
                        caseVersion,
                        caseVarchar1,
                        caseVarchar2,
                        caseVarchar3,
                        caseText1,
                        caseText2,
                        caseText3,
                        caseNumber1,
                        caseNumber2,
                        caseNumber3,
                        caseDateTime1,
                        caseDateTime2,
                        caseDateTime3,
                        caseForwardedCC,
                        caseIsClosed,
                        caseNumber4,
                        caseNumber5,
                        caseNumber6,
                        caseNumber7,
                        caseNumber8,
                        caseNumber9,
                        caseNumber10,
                        caseVarchar4,
                        caseVarchar5,
                        caseVarchar6,
                        caseVarchar7,
                        caseVarchar8,
                        caseVarchar9,
                        caseVarchar10,
                        caseVarchar11,
                        caseVarchar12,
                        caseVarchar13,
                        caseVarchar14,
                        caseVarchar15,
                        caseVarchar16,
                        caseVarchar17,
                        caseVarchar18,
                        caseVarchar19,
                        caseVarchar20,
                        caseDateTime4,
                        caseDateTime5,
                        caseDateTime6,
                        caseDateTime7,
                        caseDateTime8,
                        caseDateTime9,
                        caseDateTime10,
                        caseText4,
                        caseText5,
                        caseText6,
                        caseText7,
                        caseText8,
                        caseText9,
                        caseText10,
                        null,
                        caseHistId};
                if ((parentcasedefinitionRowByCaseHistDetCaseId != null)) {
                    columnValuesArray[0] = parentcasedefinitionRowByCaseHistDetCaseId[0];
                }
                if ((parentworkflowuserRowByOwnerHD != null)) {
                    columnValuesArray[2] = parentworkflowuserRowByOwnerHD[0];
                }
                if ((parentworkflowuserRowByAuthorHD != null)) {
                    columnValuesArray[4] = parentworkflowuserRowByAuthorHD[0];
                }
                if ((parentworkflowuserRowByEditorHD != null)) {
                    columnValuesArray[6] = parentworkflowuserRowByEditorHD[0];
                }
                rowcasehistorydetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcasehistorydetailsRow);
                return rowcasehistorydetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsRow FindBycaseHistDetId(int caseHistDetId) {
                return ((casehistorydetailsRow)(this.Rows.Find(new object[] {
                            caseHistDetId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                casehistorydetailsDataTable cln = ((casehistorydetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new casehistorydetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncaseId = base.Columns["caseId"];
                this.columncaseTitle = base.Columns["caseTitle"];
                this.columncaseOwnerId = base.Columns["caseOwnerId"];
                this.columncaseCreated = base.Columns["caseCreated"];
                this.columncaseCreatedById = base.Columns["caseCreatedById"];
                this.columncaseModified = base.Columns["caseModified"];
                this.columncaseModifiedById = base.Columns["caseModifiedById"];
                this.columncaseProcedureId = base.Columns["caseProcedureId"];
                this.columncaseStatusId = base.Columns["caseStatusId"];
                this.columncaseSubversion = base.Columns["caseSubversion"];
                this.columncaseVersion = base.Columns["caseVersion"];
                this.columncaseVarchar1 = base.Columns["caseVarchar1"];
                this.columncaseVarchar2 = base.Columns["caseVarchar2"];
                this.columncaseVarchar3 = base.Columns["caseVarchar3"];
                this.columncaseText1 = base.Columns["caseText1"];
                this.columncaseText2 = base.Columns["caseText2"];
                this.columncaseText3 = base.Columns["caseText3"];
                this.columncaseNumber1 = base.Columns["caseNumber1"];
                this.columncaseNumber2 = base.Columns["caseNumber2"];
                this.columncaseNumber3 = base.Columns["caseNumber3"];
                this.columncaseDateTime1 = base.Columns["caseDateTime1"];
                this.columncaseDateTime2 = base.Columns["caseDateTime2"];
                this.columncaseDateTime3 = base.Columns["caseDateTime3"];
                this.columncaseForwardedCC = base.Columns["caseForwardedCC"];
                this.columncaseIsClosed = base.Columns["caseIsClosed"];
                this.columncaseNumber4 = base.Columns["caseNumber4"];
                this.columncaseNumber5 = base.Columns["caseNumber5"];
                this.columncaseNumber6 = base.Columns["caseNumber6"];
                this.columncaseNumber7 = base.Columns["caseNumber7"];
                this.columncaseNumber8 = base.Columns["caseNumber8"];
                this.columncaseNumber9 = base.Columns["caseNumber9"];
                this.columncaseNumber10 = base.Columns["caseNumber10"];
                this.columncaseVarchar4 = base.Columns["caseVarchar4"];
                this.columncaseVarchar5 = base.Columns["caseVarchar5"];
                this.columncaseVarchar6 = base.Columns["caseVarchar6"];
                this.columncaseVarchar7 = base.Columns["caseVarchar7"];
                this.columncaseVarchar8 = base.Columns["caseVarchar8"];
                this.columncaseVarchar9 = base.Columns["caseVarchar9"];
                this.columncaseVarchar10 = base.Columns["caseVarchar10"];
                this.columncaseVarchar11 = base.Columns["caseVarchar11"];
                this.columncaseVarchar12 = base.Columns["caseVarchar12"];
                this.columncaseVarchar13 = base.Columns["caseVarchar13"];
                this.columncaseVarchar14 = base.Columns["caseVarchar14"];
                this.columncaseVarchar15 = base.Columns["caseVarchar15"];
                this.columncaseVarchar16 = base.Columns["caseVarchar16"];
                this.columncaseVarchar17 = base.Columns["caseVarchar17"];
                this.columncaseVarchar18 = base.Columns["caseVarchar18"];
                this.columncaseVarchar19 = base.Columns["caseVarchar19"];
                this.columncaseVarchar20 = base.Columns["caseVarchar20"];
                this.columncaseDateTime4 = base.Columns["caseDateTime4"];
                this.columncaseDateTime5 = base.Columns["caseDateTime5"];
                this.columncaseDateTime6 = base.Columns["caseDateTime6"];
                this.columncaseDateTime7 = base.Columns["caseDateTime7"];
                this.columncaseDateTime8 = base.Columns["caseDateTime8"];
                this.columncaseDateTime9 = base.Columns["caseDateTime9"];
                this.columncaseDateTime10 = base.Columns["caseDateTime10"];
                this.columncaseText4 = base.Columns["caseText4"];
                this.columncaseText5 = base.Columns["caseText5"];
                this.columncaseText6 = base.Columns["caseText6"];
                this.columncaseText7 = base.Columns["caseText7"];
                this.columncaseText8 = base.Columns["caseText8"];
                this.columncaseText9 = base.Columns["caseText9"];
                this.columncaseText10 = base.Columns["caseText10"];
                this.columncaseHistDetId = base.Columns["caseHistDetId"];
                this.columncaseHistId = base.Columns["caseHistId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncaseId = new global::System.Data.DataColumn("caseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseId);
                this.columncaseTitle = new global::System.Data.DataColumn("caseTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseTitle);
                this.columncaseOwnerId = new global::System.Data.DataColumn("caseOwnerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseOwnerId);
                this.columncaseCreated = new global::System.Data.DataColumn("caseCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseCreated);
                this.columncaseCreatedById = new global::System.Data.DataColumn("caseCreatedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseCreatedById);
                this.columncaseModified = new global::System.Data.DataColumn("caseModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseModified);
                this.columncaseModifiedById = new global::System.Data.DataColumn("caseModifiedById", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseModifiedById);
                this.columncaseProcedureId = new global::System.Data.DataColumn("caseProcedureId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseProcedureId);
                this.columncaseStatusId = new global::System.Data.DataColumn("caseStatusId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseStatusId);
                this.columncaseSubversion = new global::System.Data.DataColumn("caseSubversion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseSubversion);
                this.columncaseVersion = new global::System.Data.DataColumn("caseVersion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVersion);
                this.columncaseVarchar1 = new global::System.Data.DataColumn("caseVarchar1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar1);
                this.columncaseVarchar2 = new global::System.Data.DataColumn("caseVarchar2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar2);
                this.columncaseVarchar3 = new global::System.Data.DataColumn("caseVarchar3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar3);
                this.columncaseText1 = new global::System.Data.DataColumn("caseText1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText1);
                this.columncaseText2 = new global::System.Data.DataColumn("caseText2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText2);
                this.columncaseText3 = new global::System.Data.DataColumn("caseText3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText3);
                this.columncaseNumber1 = new global::System.Data.DataColumn("caseNumber1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber1);
                this.columncaseNumber2 = new global::System.Data.DataColumn("caseNumber2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber2);
                this.columncaseNumber3 = new global::System.Data.DataColumn("caseNumber3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber3);
                this.columncaseDateTime1 = new global::System.Data.DataColumn("caseDateTime1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime1);
                this.columncaseDateTime2 = new global::System.Data.DataColumn("caseDateTime2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime2);
                this.columncaseDateTime3 = new global::System.Data.DataColumn("caseDateTime3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime3);
                this.columncaseForwardedCC = new global::System.Data.DataColumn("caseForwardedCC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseForwardedCC);
                this.columncaseIsClosed = new global::System.Data.DataColumn("caseIsClosed", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseIsClosed);
                this.columncaseNumber4 = new global::System.Data.DataColumn("caseNumber4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber4);
                this.columncaseNumber5 = new global::System.Data.DataColumn("caseNumber5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber5);
                this.columncaseNumber6 = new global::System.Data.DataColumn("caseNumber6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber6);
                this.columncaseNumber7 = new global::System.Data.DataColumn("caseNumber7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber7);
                this.columncaseNumber8 = new global::System.Data.DataColumn("caseNumber8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber8);
                this.columncaseNumber9 = new global::System.Data.DataColumn("caseNumber9", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber9);
                this.columncaseNumber10 = new global::System.Data.DataColumn("caseNumber10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseNumber10);
                this.columncaseVarchar4 = new global::System.Data.DataColumn("caseVarchar4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar4);
                this.columncaseVarchar5 = new global::System.Data.DataColumn("caseVarchar5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar5);
                this.columncaseVarchar6 = new global::System.Data.DataColumn("caseVarchar6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar6);
                this.columncaseVarchar7 = new global::System.Data.DataColumn("caseVarchar7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar7);
                this.columncaseVarchar8 = new global::System.Data.DataColumn("caseVarchar8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar8);
                this.columncaseVarchar9 = new global::System.Data.DataColumn("caseVarchar9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar9);
                this.columncaseVarchar10 = new global::System.Data.DataColumn("caseVarchar10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar10);
                this.columncaseVarchar11 = new global::System.Data.DataColumn("caseVarchar11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar11);
                this.columncaseVarchar12 = new global::System.Data.DataColumn("caseVarchar12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar12);
                this.columncaseVarchar13 = new global::System.Data.DataColumn("caseVarchar13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar13);
                this.columncaseVarchar14 = new global::System.Data.DataColumn("caseVarchar14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar14);
                this.columncaseVarchar15 = new global::System.Data.DataColumn("caseVarchar15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar15);
                this.columncaseVarchar16 = new global::System.Data.DataColumn("caseVarchar16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar16);
                this.columncaseVarchar17 = new global::System.Data.DataColumn("caseVarchar17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar17);
                this.columncaseVarchar18 = new global::System.Data.DataColumn("caseVarchar18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar18);
                this.columncaseVarchar19 = new global::System.Data.DataColumn("caseVarchar19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar19);
                this.columncaseVarchar20 = new global::System.Data.DataColumn("caseVarchar20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseVarchar20);
                this.columncaseDateTime4 = new global::System.Data.DataColumn("caseDateTime4", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime4);
                this.columncaseDateTime5 = new global::System.Data.DataColumn("caseDateTime5", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime5);
                this.columncaseDateTime6 = new global::System.Data.DataColumn("caseDateTime6", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime6);
                this.columncaseDateTime7 = new global::System.Data.DataColumn("caseDateTime7", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime7);
                this.columncaseDateTime8 = new global::System.Data.DataColumn("caseDateTime8", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime8);
                this.columncaseDateTime9 = new global::System.Data.DataColumn("caseDateTime9", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime9);
                this.columncaseDateTime10 = new global::System.Data.DataColumn("caseDateTime10", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseDateTime10);
                this.columncaseText4 = new global::System.Data.DataColumn("caseText4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText4);
                this.columncaseText5 = new global::System.Data.DataColumn("caseText5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText5);
                this.columncaseText6 = new global::System.Data.DataColumn("caseText6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText6);
                this.columncaseText7 = new global::System.Data.DataColumn("caseText7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText7);
                this.columncaseText8 = new global::System.Data.DataColumn("caseText8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText8);
                this.columncaseText9 = new global::System.Data.DataColumn("caseText9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText9);
                this.columncaseText10 = new global::System.Data.DataColumn("caseText10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseText10);
                this.columncaseHistDetId = new global::System.Data.DataColumn("caseHistDetId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseHistDetId);
                this.columncaseHistId = new global::System.Data.DataColumn("caseHistId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseHistId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncaseHistDetId}, true));
                this.columncaseId.AllowDBNull = false;
                this.columncaseTitle.AllowDBNull = false;
                this.columncaseTitle.MaxLength = 100;
                this.columncaseOwnerId.AllowDBNull = false;
                this.columncaseCreated.AllowDBNull = false;
                this.columncaseCreatedById.AllowDBNull = false;
                this.columncaseModified.AllowDBNull = false;
                this.columncaseModifiedById.AllowDBNull = false;
                this.columncaseProcedureId.AllowDBNull = false;
                this.columncaseSubversion.AllowDBNull = false;
                this.columncaseVersion.AllowDBNull = false;
                this.columncaseVarchar1.MaxLength = 256;
                this.columncaseVarchar2.MaxLength = 256;
                this.columncaseVarchar3.MaxLength = 256;
                this.columncaseText1.MaxLength = 21845;
                this.columncaseText2.MaxLength = 21845;
                this.columncaseText3.MaxLength = 21845;
                this.columncaseForwardedCC.MaxLength = 45;
                this.columncaseVarchar4.MaxLength = 256;
                this.columncaseVarchar5.MaxLength = 256;
                this.columncaseVarchar6.MaxLength = 256;
                this.columncaseVarchar7.MaxLength = 256;
                this.columncaseVarchar8.MaxLength = 256;
                this.columncaseVarchar9.MaxLength = 256;
                this.columncaseVarchar10.MaxLength = 256;
                this.columncaseVarchar11.MaxLength = 256;
                this.columncaseVarchar12.MaxLength = 256;
                this.columncaseVarchar13.MaxLength = 256;
                this.columncaseVarchar14.MaxLength = 256;
                this.columncaseVarchar15.MaxLength = 256;
                this.columncaseVarchar16.MaxLength = 256;
                this.columncaseVarchar17.MaxLength = 256;
                this.columncaseVarchar18.MaxLength = 256;
                this.columncaseVarchar19.MaxLength = 256;
                this.columncaseVarchar20.MaxLength = 256;
                this.columncaseText4.MaxLength = 21845;
                this.columncaseText5.MaxLength = 21845;
                this.columncaseText6.MaxLength = 21845;
                this.columncaseText7.MaxLength = 21845;
                this.columncaseText8.MaxLength = 21845;
                this.columncaseText9.MaxLength = 21845;
                this.columncaseText10.MaxLength = 21845;
                this.columncaseHistDetId.AutoIncrement = true;
                this.columncaseHistDetId.AutoIncrementSeed = -1;
                this.columncaseHistDetId.AutoIncrementStep = -1;
                this.columncaseHistDetId.AllowDBNull = false;
                this.columncaseHistDetId.Unique = true;
                this.columncaseHistId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsRow NewcasehistorydetailsRow() {
                return ((casehistorydetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new casehistorydetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(casehistorydetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.casehistorydetailsRowChanged != null)) {
                    this.casehistorydetailsRowChanged(this, new casehistorydetailsRowChangeEvent(((casehistorydetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.casehistorydetailsRowChanging != null)) {
                    this.casehistorydetailsRowChanging(this, new casehistorydetailsRowChangeEvent(((casehistorydetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.casehistorydetailsRowDeleted != null)) {
                    this.casehistorydetailsRowDeleted(this, new casehistorydetailsRowChangeEvent(((casehistorydetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.casehistorydetailsRowDeleting != null)) {
                    this.casehistorydetailsRowDeleting(this, new casehistorydetailsRowChangeEvent(((casehistorydetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecasehistorydetailsRow(casehistorydetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "casehistorydetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class caseparamDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnparId;
            
            private global::System.Data.DataColumn columnparTitle;
            
            private global::System.Data.DataColumn columnparType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseparamDataTable() {
                this.TableName = "caseparam";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal caseparamDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected caseparamDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn parIdColumn {
                get {
                    return this.columnparId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn parTitleColumn {
                get {
                    return this.columnparTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn parTypeColumn {
                get {
                    return this.columnparType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseparamRow this[int index] {
                get {
                    return ((caseparamRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseparamRowChangeEventHandler caseparamRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseparamRowChangeEventHandler caseparamRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseparamRowChangeEventHandler caseparamRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event caseparamRowChangeEventHandler caseparamRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcaseparamRow(caseparamRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseparamRow AddcaseparamRow(string parTitle, int parType) {
                caseparamRow rowcaseparamRow = ((caseparamRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        parTitle,
                        parType};
                rowcaseparamRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcaseparamRow);
                return rowcaseparamRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseparamRow FindByparId(int parId) {
                return ((caseparamRow)(this.Rows.Find(new object[] {
                            parId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                caseparamDataTable cln = ((caseparamDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new caseparamDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnparId = base.Columns["parId"];
                this.columnparTitle = base.Columns["parTitle"];
                this.columnparType = base.Columns["parType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnparId = new global::System.Data.DataColumn("parId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparId);
                this.columnparTitle = new global::System.Data.DataColumn("parTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparTitle);
                this.columnparType = new global::System.Data.DataColumn("parType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnparId}, true));
                this.columnparId.AutoIncrement = true;
                this.columnparId.AutoIncrementSeed = -1;
                this.columnparId.AutoIncrementStep = -1;
                this.columnparId.AllowDBNull = false;
                this.columnparId.Unique = true;
                this.columnparTitle.AllowDBNull = false;
                this.columnparTitle.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseparamRow NewcaseparamRow() {
                return ((caseparamRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new caseparamRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(caseparamRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.caseparamRowChanged != null)) {
                    this.caseparamRowChanged(this, new caseparamRowChangeEvent(((caseparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.caseparamRowChanging != null)) {
                    this.caseparamRowChanging(this, new caseparamRowChangeEvent(((caseparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.caseparamRowDeleted != null)) {
                    this.caseparamRowDeleted(this, new caseparamRowChangeEvent(((caseparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.caseparamRowDeleting != null)) {
                    this.caseparamRowDeleting(this, new caseparamRowChangeEvent(((caseparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecaseparamRow(caseparamRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "caseparamDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class casereadedDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncrdUserId;
            
            private global::System.Data.DataColumn columncrdCaseId;
            
            private global::System.Data.DataColumn columncrdReaded;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casereadedDataTable() {
                this.TableName = "casereaded";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal casereadedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected casereadedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn crdUserIdColumn {
                get {
                    return this.columncrdUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn crdCaseIdColumn {
                get {
                    return this.columncrdCaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn crdReadedColumn {
                get {
                    return this.columncrdReaded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casereadedRow this[int index] {
                get {
                    return ((casereadedRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casereadedRowChangeEventHandler casereadedRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casereadedRowChangeEventHandler casereadedRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casereadedRowChangeEventHandler casereadedRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event casereadedRowChangeEventHandler casereadedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddcasereadedRow(casereadedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casereadedRow AddcasereadedRow(int crdUserId, casedefinitionRow parentcasedefinitionRowByReadedCaseId, sbyte crdReaded) {
                casereadedRow rowcasereadedRow = ((casereadedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        crdUserId,
                        null,
                        crdReaded};
                if ((parentcasedefinitionRowByReadedCaseId != null)) {
                    columnValuesArray[1] = parentcasedefinitionRowByReadedCaseId[0];
                }
                rowcasereadedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcasereadedRow);
                return rowcasereadedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casereadedRow FindBycrdUserIdcrdCaseId(int crdUserId, int crdCaseId) {
                return ((casereadedRow)(this.Rows.Find(new object[] {
                            crdUserId,
                            crdCaseId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                casereadedDataTable cln = ((casereadedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new casereadedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncrdUserId = base.Columns["crdUserId"];
                this.columncrdCaseId = base.Columns["crdCaseId"];
                this.columncrdReaded = base.Columns["crdReaded"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncrdUserId = new global::System.Data.DataColumn("crdUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncrdUserId);
                this.columncrdCaseId = new global::System.Data.DataColumn("crdCaseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncrdCaseId);
                this.columncrdReaded = new global::System.Data.DataColumn("crdReaded", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncrdReaded);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncrdUserId,
                                this.columncrdCaseId}, true));
                this.columncrdUserId.AllowDBNull = false;
                this.columncrdCaseId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casereadedRow NewcasereadedRow() {
                return ((casereadedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new casereadedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(casereadedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.casereadedRowChanged != null)) {
                    this.casereadedRowChanged(this, new casereadedRowChangeEvent(((casereadedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.casereadedRowChanging != null)) {
                    this.casereadedRowChanging(this, new casereadedRowChangeEvent(((casereadedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.casereadedRowDeleted != null)) {
                    this.casereadedRowDeleted(this, new casereadedRowChangeEvent(((casereadedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.casereadedRowDeleting != null)) {
                    this.casereadedRowDeleting(this, new casereadedRowChangeEvent(((casereadedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovecasereadedRow(casereadedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "casereadedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class decisiontreeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntreeUserId;
            
            private global::System.Data.DataColumn columntreeStageId;
            
            private global::System.Data.DataColumn columntreeSerialized;
            
            private global::System.Data.DataColumn columntreeProcedureId;
            
            private global::System.Data.DataColumn columntreeType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decisiontreeDataTable() {
                this.TableName = "decisiontree";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal decisiontreeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected decisiontreeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treeUserIdColumn {
                get {
                    return this.columntreeUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treeStageIdColumn {
                get {
                    return this.columntreeStageId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treeSerializedColumn {
                get {
                    return this.columntreeSerialized;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treeProcedureIdColumn {
                get {
                    return this.columntreeProcedureId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treeTypeColumn {
                get {
                    return this.columntreeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decisiontreeRow this[int index] {
                get {
                    return ((decisiontreeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event decisiontreeRowChangeEventHandler decisiontreeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event decisiontreeRowChangeEventHandler decisiontreeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event decisiontreeRowChangeEventHandler decisiontreeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event decisiontreeRowChangeEventHandler decisiontreeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddecisiontreeRow(decisiontreeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decisiontreeRow AdddecisiontreeRow(int treeUserId, int treeStageId, string treeSerialized, int treeProcedureId, string treeType) {
                decisiontreeRow rowdecisiontreeRow = ((decisiontreeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        treeUserId,
                        treeStageId,
                        treeSerialized,
                        treeProcedureId,
                        treeType};
                rowdecisiontreeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdecisiontreeRow);
                return rowdecisiontreeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decisiontreeRow FindBytreeUserIdtreeStageIdtreeProcedureIdtreeType(int treeUserId, int treeStageId, int treeProcedureId, string treeType) {
                return ((decisiontreeRow)(this.Rows.Find(new object[] {
                            treeUserId,
                            treeStageId,
                            treeProcedureId,
                            treeType})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                decisiontreeDataTable cln = ((decisiontreeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new decisiontreeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columntreeUserId = base.Columns["treeUserId"];
                this.columntreeStageId = base.Columns["treeStageId"];
                this.columntreeSerialized = base.Columns["treeSerialized"];
                this.columntreeProcedureId = base.Columns["treeProcedureId"];
                this.columntreeType = base.Columns["treeType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columntreeUserId = new global::System.Data.DataColumn("treeUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreeUserId);
                this.columntreeStageId = new global::System.Data.DataColumn("treeStageId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreeStageId);
                this.columntreeSerialized = new global::System.Data.DataColumn("treeSerialized", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreeSerialized);
                this.columntreeProcedureId = new global::System.Data.DataColumn("treeProcedureId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreeProcedureId);
                this.columntreeType = new global::System.Data.DataColumn("treeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreeType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columntreeUserId,
                                this.columntreeStageId,
                                this.columntreeProcedureId,
                                this.columntreeType}, true));
                this.columntreeUserId.AllowDBNull = false;
                this.columntreeStageId.AllowDBNull = false;
                this.columntreeSerialized.MaxLength = 21845;
                this.columntreeProcedureId.AllowDBNull = false;
                this.columntreeType.AllowDBNull = false;
                this.columntreeType.MaxLength = 45;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decisiontreeRow NewdecisiontreeRow() {
                return ((decisiontreeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new decisiontreeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(decisiontreeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.decisiontreeRowChanged != null)) {
                    this.decisiontreeRowChanged(this, new decisiontreeRowChangeEvent(((decisiontreeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.decisiontreeRowChanging != null)) {
                    this.decisiontreeRowChanging(this, new decisiontreeRowChangeEvent(((decisiontreeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.decisiontreeRowDeleted != null)) {
                    this.decisiontreeRowDeleted(this, new decisiontreeRowChangeEvent(((decisiontreeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.decisiontreeRowDeleting != null)) {
                    this.decisiontreeRowDeleting(this, new decisiontreeRowChangeEvent(((decisiontreeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedecisiontreeRow(decisiontreeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "decisiontreeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class departmentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columndepartId;
            
            private global::System.Data.DataColumn columndepartName;
            
            private global::System.Data.DataColumn columndepartManagerId;
            
            private global::System.Data.DataColumn columndepartParentId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentDataTable() {
                this.TableName = "department";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal departmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected departmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn departIdColumn {
                get {
                    return this.columndepartId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn departNameColumn {
                get {
                    return this.columndepartName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn departManagerIdColumn {
                get {
                    return this.columndepartManagerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn departParentIdColumn {
                get {
                    return this.columndepartParentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentRow this[int index] {
                get {
                    return ((departmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event departmentRowChangeEventHandler departmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event departmentRowChangeEventHandler departmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event departmentRowChangeEventHandler departmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event departmentRowChangeEventHandler departmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddepartmentRow(departmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentRow AdddepartmentRow(string departName, workflowuserRow parentworkflowuserRowBydepartManagerId, departmentRow parentdepartmentRowBydepartParentId) {
                departmentRow rowdepartmentRow = ((departmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        departName,
                        null,
                        null};
                if ((parentworkflowuserRowBydepartManagerId != null)) {
                    columnValuesArray[2] = parentworkflowuserRowBydepartManagerId[0];
                }
                if ((parentdepartmentRowBydepartParentId != null)) {
                    columnValuesArray[3] = parentdepartmentRowBydepartParentId[0];
                }
                rowdepartmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdepartmentRow);
                return rowdepartmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentRow FindBydepartId(int departId) {
                return ((departmentRow)(this.Rows.Find(new object[] {
                            departId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                departmentDataTable cln = ((departmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new departmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columndepartId = base.Columns["departId"];
                this.columndepartName = base.Columns["departName"];
                this.columndepartManagerId = base.Columns["departManagerId"];
                this.columndepartParentId = base.Columns["departParentId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columndepartId = new global::System.Data.DataColumn("departId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartId);
                this.columndepartName = new global::System.Data.DataColumn("departName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartName);
                this.columndepartManagerId = new global::System.Data.DataColumn("departManagerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartManagerId);
                this.columndepartParentId = new global::System.Data.DataColumn("departParentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartParentId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndepartId}, true));
                this.columndepartId.AutoIncrement = true;
                this.columndepartId.AutoIncrementSeed = -1;
                this.columndepartId.AutoIncrementStep = -1;
                this.columndepartId.AllowDBNull = false;
                this.columndepartId.Unique = true;
                this.columndepartName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentRow NewdepartmentRow() {
                return ((departmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new departmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(departmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.departmentRowChanged != null)) {
                    this.departmentRowChanged(this, new departmentRowChangeEvent(((departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.departmentRowChanging != null)) {
                    this.departmentRowChanging(this, new departmentRowChangeEvent(((departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.departmentRowDeleted != null)) {
                    this.departmentRowDeleted(this, new departmentRowChangeEvent(((departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.departmentRowDeleting != null)) {
                    this.departmentRowDeleting(this, new departmentRowChangeEvent(((departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedepartmentRow(departmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "departmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ftsearchdataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnftsText;
            
            private global::System.Data.DataColumn columnftsType;
            
            private global::System.Data.DataColumn columnftsObjId;
            
            private global::System.Data.DataColumn columnftsCaseId;
            
            private global::System.Data.DataColumn columnftsProcTitle;
            
            private global::System.Data.DataColumn columnftsCaseTitle;
            
            private global::System.Data.DataColumn columnftsAttTitle;
            
            private global::System.Data.DataColumn columnftsModified;
            
            private global::System.Data.DataColumn columnftsProcId;
            
            private global::System.Data.DataColumn columnftsCaseHistId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ftsearchdataDataTable() {
                this.TableName = "ftsearchdata";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ftsearchdataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ftsearchdataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ftsTextColumn {
                get {
                    return this.columnftsText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ftsTypeColumn {
                get {
                    return this.columnftsType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ftsObjIdColumn {
                get {
                    return this.columnftsObjId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ftsCaseIdColumn {
                get {
                    return this.columnftsCaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ftsProcTitleColumn {
                get {
                    return this.columnftsProcTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ftsCaseTitleColumn {
                get {
                    return this.columnftsCaseTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ftsAttTitleColumn {
                get {
                    return this.columnftsAttTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ftsModifiedColumn {
                get {
                    return this.columnftsModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ftsProcIdColumn {
                get {
                    return this.columnftsProcId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ftsCaseHistIdColumn {
                get {
                    return this.columnftsCaseHistId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ftsearchdataRow this[int index] {
                get {
                    return ((ftsearchdataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ftsearchdataRowChangeEventHandler ftsearchdataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ftsearchdataRowChangeEventHandler ftsearchdataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ftsearchdataRowChangeEventHandler ftsearchdataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ftsearchdataRowChangeEventHandler ftsearchdataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddftsearchdataRow(ftsearchdataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ftsearchdataRow AddftsearchdataRow(string ftsText, string ftsType, int ftsObjId, int ftsCaseId, string ftsProcTitle, string ftsCaseTitle, string ftsAttTitle, System.DateTime ftsModified, int ftsProcId, int ftsCaseHistId) {
                ftsearchdataRow rowftsearchdataRow = ((ftsearchdataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ftsText,
                        ftsType,
                        ftsObjId,
                        ftsCaseId,
                        ftsProcTitle,
                        ftsCaseTitle,
                        ftsAttTitle,
                        ftsModified,
                        ftsProcId,
                        ftsCaseHistId};
                rowftsearchdataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowftsearchdataRow);
                return rowftsearchdataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ftsearchdataRow FindByftsTypeftsObjId(string ftsType, int ftsObjId) {
                return ((ftsearchdataRow)(this.Rows.Find(new object[] {
                            ftsType,
                            ftsObjId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ftsearchdataDataTable cln = ((ftsearchdataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ftsearchdataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnftsText = base.Columns["ftsText"];
                this.columnftsType = base.Columns["ftsType"];
                this.columnftsObjId = base.Columns["ftsObjId"];
                this.columnftsCaseId = base.Columns["ftsCaseId"];
                this.columnftsProcTitle = base.Columns["ftsProcTitle"];
                this.columnftsCaseTitle = base.Columns["ftsCaseTitle"];
                this.columnftsAttTitle = base.Columns["ftsAttTitle"];
                this.columnftsModified = base.Columns["ftsModified"];
                this.columnftsProcId = base.Columns["ftsProcId"];
                this.columnftsCaseHistId = base.Columns["ftsCaseHistId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnftsText = new global::System.Data.DataColumn("ftsText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnftsText);
                this.columnftsType = new global::System.Data.DataColumn("ftsType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnftsType);
                this.columnftsObjId = new global::System.Data.DataColumn("ftsObjId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnftsObjId);
                this.columnftsCaseId = new global::System.Data.DataColumn("ftsCaseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnftsCaseId);
                this.columnftsProcTitle = new global::System.Data.DataColumn("ftsProcTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnftsProcTitle);
                this.columnftsCaseTitle = new global::System.Data.DataColumn("ftsCaseTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnftsCaseTitle);
                this.columnftsAttTitle = new global::System.Data.DataColumn("ftsAttTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnftsAttTitle);
                this.columnftsModified = new global::System.Data.DataColumn("ftsModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnftsModified);
                this.columnftsProcId = new global::System.Data.DataColumn("ftsProcId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnftsProcId);
                this.columnftsCaseHistId = new global::System.Data.DataColumn("ftsCaseHistId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnftsCaseHistId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnftsType,
                                this.columnftsObjId}, true));
                this.columnftsType.AllowDBNull = false;
                this.columnftsType.MaxLength = 50;
                this.columnftsObjId.AllowDBNull = false;
                this.columnftsProcTitle.MaxLength = 200;
                this.columnftsCaseTitle.MaxLength = 200;
                this.columnftsAttTitle.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ftsearchdataRow NewftsearchdataRow() {
                return ((ftsearchdataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ftsearchdataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ftsearchdataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ftsearchdataRowChanged != null)) {
                    this.ftsearchdataRowChanged(this, new ftsearchdataRowChangeEvent(((ftsearchdataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ftsearchdataRowChanging != null)) {
                    this.ftsearchdataRowChanging(this, new ftsearchdataRowChangeEvent(((ftsearchdataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ftsearchdataRowDeleted != null)) {
                    this.ftsearchdataRowDeleted(this, new ftsearchdataRowChangeEvent(((ftsearchdataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ftsearchdataRowDeleting != null)) {
                    this.ftsearchdataRowDeleting(this, new ftsearchdataRowChangeEvent(((ftsearchdataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveftsearchdataRow(ftsearchdataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ftsearchdataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mailtemplatesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmailId;
            
            private global::System.Data.DataColumn columnmailTemplate;
            
            private global::System.Data.DataColumn columnmailLanguage;
            
            private global::System.Data.DataColumn columnmailSubject;
            
            private global::System.Data.DataColumn columnmailMessage;
            
            private global::System.Data.DataColumn columnmailHTML;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mailtemplatesDataTable() {
                this.TableName = "mailtemplates";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mailtemplatesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected mailtemplatesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mailIdColumn {
                get {
                    return this.columnmailId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mailTemplateColumn {
                get {
                    return this.columnmailTemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mailLanguageColumn {
                get {
                    return this.columnmailLanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mailSubjectColumn {
                get {
                    return this.columnmailSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mailMessageColumn {
                get {
                    return this.columnmailMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn mailHTMLColumn {
                get {
                    return this.columnmailHTML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mailtemplatesRow this[int index] {
                get {
                    return ((mailtemplatesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mailtemplatesRowChangeEventHandler mailtemplatesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mailtemplatesRowChangeEventHandler mailtemplatesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mailtemplatesRowChangeEventHandler mailtemplatesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event mailtemplatesRowChangeEventHandler mailtemplatesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddmailtemplatesRow(mailtemplatesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mailtemplatesRow AddmailtemplatesRow(string mailTemplate, string mailLanguage, string mailSubject, string mailMessage, sbyte mailHTML) {
                mailtemplatesRow rowmailtemplatesRow = ((mailtemplatesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        mailTemplate,
                        mailLanguage,
                        mailSubject,
                        mailMessage,
                        mailHTML};
                rowmailtemplatesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmailtemplatesRow);
                return rowmailtemplatesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mailtemplatesRow FindBymailId(int mailId) {
                return ((mailtemplatesRow)(this.Rows.Find(new object[] {
                            mailId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                mailtemplatesDataTable cln = ((mailtemplatesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mailtemplatesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnmailId = base.Columns["mailId"];
                this.columnmailTemplate = base.Columns["mailTemplate"];
                this.columnmailLanguage = base.Columns["mailLanguage"];
                this.columnmailSubject = base.Columns["mailSubject"];
                this.columnmailMessage = base.Columns["mailMessage"];
                this.columnmailHTML = base.Columns["mailHTML"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnmailId = new global::System.Data.DataColumn("mailId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmailId);
                this.columnmailTemplate = new global::System.Data.DataColumn("mailTemplate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmailTemplate);
                this.columnmailLanguage = new global::System.Data.DataColumn("mailLanguage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmailLanguage);
                this.columnmailSubject = new global::System.Data.DataColumn("mailSubject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmailSubject);
                this.columnmailMessage = new global::System.Data.DataColumn("mailMessage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmailMessage);
                this.columnmailHTML = new global::System.Data.DataColumn("mailHTML", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmailHTML);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnmailId}, true));
                this.columnmailId.AutoIncrement = true;
                this.columnmailId.AutoIncrementSeed = -1;
                this.columnmailId.AutoIncrementStep = -1;
                this.columnmailId.AllowDBNull = false;
                this.columnmailId.Unique = true;
                this.columnmailTemplate.MaxLength = 45;
                this.columnmailLanguage.MaxLength = 45;
                this.columnmailSubject.MaxLength = 45;
                this.columnmailMessage.MaxLength = 21845;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mailtemplatesRow NewmailtemplatesRow() {
                return ((mailtemplatesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mailtemplatesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(mailtemplatesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mailtemplatesRowChanged != null)) {
                    this.mailtemplatesRowChanged(this, new mailtemplatesRowChangeEvent(((mailtemplatesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mailtemplatesRowChanging != null)) {
                    this.mailtemplatesRowChanging(this, new mailtemplatesRowChangeEvent(((mailtemplatesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mailtemplatesRowDeleted != null)) {
                    this.mailtemplatesRowDeleted(this, new mailtemplatesRowChangeEvent(((mailtemplatesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mailtemplatesRowDeleting != null)) {
                    this.mailtemplatesRowDeleting(this, new mailtemplatesRowChangeEvent(((mailtemplatesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovemailtemplatesRow(mailtemplatesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mailtemplatesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class nextprocedurestatusDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnpstToProcStatus;
            
            private global::System.Data.DataColumn columnnpstFromProcStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nextprocedurestatusDataTable() {
                this.TableName = "nextprocedurestatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal nextprocedurestatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected nextprocedurestatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn npstToProcStatusColumn {
                get {
                    return this.columnnpstToProcStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn npstFromProcStatusColumn {
                get {
                    return this.columnnpstFromProcStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nextprocedurestatusRow this[int index] {
                get {
                    return ((nextprocedurestatusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nextprocedurestatusRowChangeEventHandler nextprocedurestatusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nextprocedurestatusRowChangeEventHandler nextprocedurestatusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nextprocedurestatusRowChangeEventHandler nextprocedurestatusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event nextprocedurestatusRowChangeEventHandler nextprocedurestatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddnextprocedurestatusRow(nextprocedurestatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nextprocedurestatusRow AddnextprocedurestatusRow(procedurestatusRow parentprocedurestatusRowByProcStatusToId, procedurestatusRow parentprocedurestatusRowByProcStatusFromId) {
                nextprocedurestatusRow rownextprocedurestatusRow = ((nextprocedurestatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentprocedurestatusRowByProcStatusToId != null)) {
                    columnValuesArray[0] = parentprocedurestatusRowByProcStatusToId[0];
                }
                if ((parentprocedurestatusRowByProcStatusFromId != null)) {
                    columnValuesArray[1] = parentprocedurestatusRowByProcStatusFromId[0];
                }
                rownextprocedurestatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rownextprocedurestatusRow);
                return rownextprocedurestatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nextprocedurestatusRow FindBynpstToProcStatusnpstFromProcStatus(int npstToProcStatus, int npstFromProcStatus) {
                return ((nextprocedurestatusRow)(this.Rows.Find(new object[] {
                            npstToProcStatus,
                            npstFromProcStatus})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                nextprocedurestatusDataTable cln = ((nextprocedurestatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new nextprocedurestatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnpstToProcStatus = base.Columns["npstToProcStatus"];
                this.columnnpstFromProcStatus = base.Columns["npstFromProcStatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnpstToProcStatus = new global::System.Data.DataColumn("npstToProcStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnpstToProcStatus);
                this.columnnpstFromProcStatus = new global::System.Data.DataColumn("npstFromProcStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnpstFromProcStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnpstToProcStatus,
                                this.columnnpstFromProcStatus}, true));
                this.columnnpstToProcStatus.AllowDBNull = false;
                this.columnnpstFromProcStatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nextprocedurestatusRow NewnextprocedurestatusRow() {
                return ((nextprocedurestatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new nextprocedurestatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(nextprocedurestatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.nextprocedurestatusRowChanged != null)) {
                    this.nextprocedurestatusRowChanged(this, new nextprocedurestatusRowChangeEvent(((nextprocedurestatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.nextprocedurestatusRowChanging != null)) {
                    this.nextprocedurestatusRowChanging(this, new nextprocedurestatusRowChangeEvent(((nextprocedurestatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.nextprocedurestatusRowDeleted != null)) {
                    this.nextprocedurestatusRowDeleted(this, new nextprocedurestatusRowChangeEvent(((nextprocedurestatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.nextprocedurestatusRowDeleting != null)) {
                    this.nextprocedurestatusRowDeleting(this, new nextprocedurestatusRowChangeEvent(((nextprocedurestatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovenextprocedurestatusRow(nextprocedurestatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "nextprocedurestatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class notificationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnotId;
            
            private global::System.Data.DataColumn columnnotSubject;
            
            private global::System.Data.DataColumn columnnotBody;
            
            private global::System.Data.DataColumn columnnotFrom;
            
            private global::System.Data.DataColumn columnnotTo;
            
            private global::System.Data.DataColumn columnnotBodyHtml;
            
            private global::System.Data.DataColumn columnnotFromU;
            
            private global::System.Data.DataColumn columnnotPassword;
            
            private global::System.Data.DataColumn columnnotPort;
            
            private global::System.Data.DataColumn columnnotAdded;
            
            private global::System.Data.DataColumn columnnotSended;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public notificationDataTable() {
                this.TableName = "notification";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal notificationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected notificationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notIdColumn {
                get {
                    return this.columnnotId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notSubjectColumn {
                get {
                    return this.columnnotSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notBodyColumn {
                get {
                    return this.columnnotBody;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notFromColumn {
                get {
                    return this.columnnotFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notToColumn {
                get {
                    return this.columnnotTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notBodyHtmlColumn {
                get {
                    return this.columnnotBodyHtml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notFromUColumn {
                get {
                    return this.columnnotFromU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notPasswordColumn {
                get {
                    return this.columnnotPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notPortColumn {
                get {
                    return this.columnnotPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notAddedColumn {
                get {
                    return this.columnnotAdded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn notSendedColumn {
                get {
                    return this.columnnotSended;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public notificationRow this[int index] {
                get {
                    return ((notificationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event notificationRowChangeEventHandler notificationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event notificationRowChangeEventHandler notificationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event notificationRowChangeEventHandler notificationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event notificationRowChangeEventHandler notificationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddnotificationRow(notificationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public notificationRow AddnotificationRow(string notSubject, string notBody, string notFrom, string notTo, bool notBodyHtml, string notFromU, string notPassword, int notPort, System.DateTime notAdded, System.DateTime notSended) {
                notificationRow rownotificationRow = ((notificationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        notSubject,
                        notBody,
                        notFrom,
                        notTo,
                        notBodyHtml,
                        notFromU,
                        notPassword,
                        notPort,
                        notAdded,
                        notSended};
                rownotificationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rownotificationRow);
                return rownotificationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public notificationRow FindBynotId(int notId) {
                return ((notificationRow)(this.Rows.Find(new object[] {
                            notId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                notificationDataTable cln = ((notificationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new notificationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnotId = base.Columns["notId"];
                this.columnnotSubject = base.Columns["notSubject"];
                this.columnnotBody = base.Columns["notBody"];
                this.columnnotFrom = base.Columns["notFrom"];
                this.columnnotTo = base.Columns["notTo"];
                this.columnnotBodyHtml = base.Columns["notBodyHtml"];
                this.columnnotFromU = base.Columns["notFromU"];
                this.columnnotPassword = base.Columns["notPassword"];
                this.columnnotPort = base.Columns["notPort"];
                this.columnnotAdded = base.Columns["notAdded"];
                this.columnnotSended = base.Columns["notSended"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnotId = new global::System.Data.DataColumn("notId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotId);
                this.columnnotSubject = new global::System.Data.DataColumn("notSubject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotSubject);
                this.columnnotBody = new global::System.Data.DataColumn("notBody", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotBody);
                this.columnnotFrom = new global::System.Data.DataColumn("notFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotFrom);
                this.columnnotTo = new global::System.Data.DataColumn("notTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotTo);
                this.columnnotBodyHtml = new global::System.Data.DataColumn("notBodyHtml", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotBodyHtml);
                this.columnnotFromU = new global::System.Data.DataColumn("notFromU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotFromU);
                this.columnnotPassword = new global::System.Data.DataColumn("notPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotPassword);
                this.columnnotPort = new global::System.Data.DataColumn("notPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotPort);
                this.columnnotAdded = new global::System.Data.DataColumn("notAdded", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotAdded);
                this.columnnotSended = new global::System.Data.DataColumn("notSended", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotSended);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnotId}, true));
                this.columnnotId.AutoIncrement = true;
                this.columnnotId.AutoIncrementSeed = -1;
                this.columnnotId.AutoIncrementStep = -1;
                this.columnnotId.AllowDBNull = false;
                this.columnnotId.Unique = true;
                this.columnnotSubject.MaxLength = 255;
                this.columnnotFrom.MaxLength = 200;
                this.columnnotTo.MaxLength = 500;
                this.columnnotFromU.MaxLength = 200;
                this.columnnotPassword.MaxLength = 45;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public notificationRow NewnotificationRow() {
                return ((notificationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new notificationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(notificationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.notificationRowChanged != null)) {
                    this.notificationRowChanged(this, new notificationRowChangeEvent(((notificationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.notificationRowChanging != null)) {
                    this.notificationRowChanging(this, new notificationRowChangeEvent(((notificationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.notificationRowDeleted != null)) {
                    this.notificationRowDeleted(this, new notificationRowChangeEvent(((notificationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.notificationRowDeleting != null)) {
                    this.notificationRowDeleting(this, new notificationRowChangeEvent(((notificationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovenotificationRow(notificationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "notificationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class parametersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnparId;
            
            private global::System.Data.DataColumn columnparName;
            
            private global::System.Data.DataColumn columnparValue;
            
            private global::System.Data.DataColumn columnparDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public parametersDataTable() {
                this.TableName = "parameters";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal parametersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected parametersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn parIdColumn {
                get {
                    return this.columnparId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn parNameColumn {
                get {
                    return this.columnparName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn parValueColumn {
                get {
                    return this.columnparValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn parDescriptionColumn {
                get {
                    return this.columnparDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public parametersRow this[int index] {
                get {
                    return ((parametersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event parametersRowChangeEventHandler parametersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event parametersRowChangeEventHandler parametersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event parametersRowChangeEventHandler parametersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event parametersRowChangeEventHandler parametersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddparametersRow(parametersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public parametersRow AddparametersRow(string parName, string parValue, string parDescription) {
                parametersRow rowparametersRow = ((parametersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        parName,
                        parValue,
                        parDescription};
                rowparametersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowparametersRow);
                return rowparametersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public parametersRow FindByparId(int parId) {
                return ((parametersRow)(this.Rows.Find(new object[] {
                            parId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                parametersDataTable cln = ((parametersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new parametersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnparId = base.Columns["parId"];
                this.columnparName = base.Columns["parName"];
                this.columnparValue = base.Columns["parValue"];
                this.columnparDescription = base.Columns["parDescription"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnparId = new global::System.Data.DataColumn("parId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparId);
                this.columnparName = new global::System.Data.DataColumn("parName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparName);
                this.columnparValue = new global::System.Data.DataColumn("parValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparValue);
                this.columnparDescription = new global::System.Data.DataColumn("parDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnparId}, true));
                this.columnparId.AutoIncrement = true;
                this.columnparId.AutoIncrementSeed = -1;
                this.columnparId.AutoIncrementStep = -1;
                this.columnparId.AllowDBNull = false;
                this.columnparId.Unique = true;
                this.columnparName.AllowDBNull = false;
                this.columnparName.MaxLength = 50;
                this.columnparValue.MaxLength = 2000;
                this.columnparDescription.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public parametersRow NewparametersRow() {
                return ((parametersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new parametersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(parametersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.parametersRowChanged != null)) {
                    this.parametersRowChanged(this, new parametersRowChangeEvent(((parametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.parametersRowChanging != null)) {
                    this.parametersRowChanging(this, new parametersRowChangeEvent(((parametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.parametersRowDeleted != null)) {
                    this.parametersRowDeleted(this, new parametersRowChangeEvent(((parametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.parametersRowDeleting != null)) {
                    this.parametersRowDeleting(this, new parametersRowChangeEvent(((parametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveparametersRow(parametersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "parametersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class proceduredefinitionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnprcId;
            
            private global::System.Data.DataColumn columnprcTitle;
            
            private global::System.Data.DataColumn columnprcTitlePlural;
            
            private global::System.Data.DataColumn columnprcDefaultMode;
            
            private global::System.Data.DataColumn columnprcDynamicNewStages;
            
            private global::System.Data.DataColumn columnprcNewParamsByUser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionDataTable() {
                this.TableName = "proceduredefinition";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proceduredefinitionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected proceduredefinitionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prcIdColumn {
                get {
                    return this.columnprcId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prcTitleColumn {
                get {
                    return this.columnprcTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prcTitlePluralColumn {
                get {
                    return this.columnprcTitlePlural;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prcDefaultModeColumn {
                get {
                    return this.columnprcDefaultMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prcDynamicNewStagesColumn {
                get {
                    return this.columnprcDynamicNewStages;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn prcNewParamsByUserColumn {
                get {
                    return this.columnprcNewParamsByUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionRow this[int index] {
                get {
                    return ((proceduredefinitionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proceduredefinitionRowChangeEventHandler proceduredefinitionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proceduredefinitionRowChangeEventHandler proceduredefinitionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proceduredefinitionRowChangeEventHandler proceduredefinitionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proceduredefinitionRowChangeEventHandler proceduredefinitionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddproceduredefinitionRow(proceduredefinitionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionRow AddproceduredefinitionRow(string prcTitle, string prcTitlePlural, int prcDefaultMode, int prcDynamicNewStages, int prcNewParamsByUser) {
                proceduredefinitionRow rowproceduredefinitionRow = ((proceduredefinitionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        prcTitle,
                        prcTitlePlural,
                        prcDefaultMode,
                        prcDynamicNewStages,
                        prcNewParamsByUser};
                rowproceduredefinitionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproceduredefinitionRow);
                return rowproceduredefinitionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionRow FindByprcId(int prcId) {
                return ((proceduredefinitionRow)(this.Rows.Find(new object[] {
                            prcId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                proceduredefinitionDataTable cln = ((proceduredefinitionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new proceduredefinitionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnprcId = base.Columns["prcId"];
                this.columnprcTitle = base.Columns["prcTitle"];
                this.columnprcTitlePlural = base.Columns["prcTitlePlural"];
                this.columnprcDefaultMode = base.Columns["prcDefaultMode"];
                this.columnprcDynamicNewStages = base.Columns["prcDynamicNewStages"];
                this.columnprcNewParamsByUser = base.Columns["prcNewParamsByUser"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnprcId = new global::System.Data.DataColumn("prcId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprcId);
                this.columnprcTitle = new global::System.Data.DataColumn("prcTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprcTitle);
                this.columnprcTitlePlural = new global::System.Data.DataColumn("prcTitlePlural", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprcTitlePlural);
                this.columnprcDefaultMode = new global::System.Data.DataColumn("prcDefaultMode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprcDefaultMode);
                this.columnprcDynamicNewStages = new global::System.Data.DataColumn("prcDynamicNewStages", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprcDynamicNewStages);
                this.columnprcNewParamsByUser = new global::System.Data.DataColumn("prcNewParamsByUser", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprcNewParamsByUser);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnprcId}, true));
                this.columnprcId.AutoIncrement = true;
                this.columnprcId.AutoIncrementSeed = -1;
                this.columnprcId.AutoIncrementStep = -1;
                this.columnprcId.AllowDBNull = false;
                this.columnprcId.Unique = true;
                this.columnprcTitle.AllowDBNull = false;
                this.columnprcTitle.MaxLength = 100;
                this.columnprcTitlePlural.MaxLength = 100;
                this.columnprcDefaultMode.AllowDBNull = false;
                this.columnprcDynamicNewStages.AllowDBNull = false;
                this.columnprcNewParamsByUser.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionRow NewproceduredefinitionRow() {
                return ((proceduredefinitionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new proceduredefinitionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(proceduredefinitionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.proceduredefinitionRowChanged != null)) {
                    this.proceduredefinitionRowChanged(this, new proceduredefinitionRowChangeEvent(((proceduredefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.proceduredefinitionRowChanging != null)) {
                    this.proceduredefinitionRowChanging(this, new proceduredefinitionRowChangeEvent(((proceduredefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.proceduredefinitionRowDeleted != null)) {
                    this.proceduredefinitionRowDeleted(this, new proceduredefinitionRowChangeEvent(((proceduredefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.proceduredefinitionRowDeleting != null)) {
                    this.proceduredefinitionRowDeleting(this, new proceduredefinitionRowChangeEvent(((proceduredefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveproceduredefinitionRow(proceduredefinitionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "proceduredefinitionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class procedureparamDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnppaId;
            
            private global::System.Data.DataColumn columnppaIndex;
            
            private global::System.Data.DataColumn columnppaProcedureId;
            
            private global::System.Data.DataColumn columnppaCaseParamId;
            
            private global::System.Data.DataColumn columnppaIsImportant;
            
            private global::System.Data.DataColumn columnppaFieldName;
            
            private global::System.Data.DataColumn columnppaType;
            
            private global::System.Data.DataColumn columnppaParamTitle;
            
            private global::System.Data.DataColumn columnppaSectionName;
            
            private global::System.Data.DataColumn columnppaActive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedureparamDataTable() {
                this.TableName = "procedureparam";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal procedureparamDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected procedureparamDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ppaIdColumn {
                get {
                    return this.columnppaId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ppaIndexColumn {
                get {
                    return this.columnppaIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ppaProcedureIdColumn {
                get {
                    return this.columnppaProcedureId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ppaCaseParamIdColumn {
                get {
                    return this.columnppaCaseParamId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ppaIsImportantColumn {
                get {
                    return this.columnppaIsImportant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ppaFieldNameColumn {
                get {
                    return this.columnppaFieldName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ppaTypeColumn {
                get {
                    return this.columnppaType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ppaParamTitleColumn {
                get {
                    return this.columnppaParamTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ppaSectionNameColumn {
                get {
                    return this.columnppaSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ppaActiveColumn {
                get {
                    return this.columnppaActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedureparamRow this[int index] {
                get {
                    return ((procedureparamRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procedureparamRowChangeEventHandler procedureparamRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procedureparamRowChangeEventHandler procedureparamRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procedureparamRowChangeEventHandler procedureparamRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procedureparamRowChangeEventHandler procedureparamRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddprocedureparamRow(procedureparamRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedureparamRow AddprocedureparamRow(int ppaIndex, proceduredefinitionRow parentproceduredefinitionRowByParamProcedureId, int ppaCaseParamId, ulong ppaIsImportant, string ppaFieldName, int ppaType, string ppaParamTitle, string ppaSectionName, ulong ppaActive) {
                procedureparamRow rowprocedureparamRow = ((procedureparamRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ppaIndex,
                        null,
                        ppaCaseParamId,
                        ppaIsImportant,
                        ppaFieldName,
                        ppaType,
                        ppaParamTitle,
                        ppaSectionName,
                        ppaActive};
                if ((parentproceduredefinitionRowByParamProcedureId != null)) {
                    columnValuesArray[2] = parentproceduredefinitionRowByParamProcedureId[0];
                }
                rowprocedureparamRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowprocedureparamRow);
                return rowprocedureparamRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedureparamRow FindByppaId(int ppaId) {
                return ((procedureparamRow)(this.Rows.Find(new object[] {
                            ppaId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                procedureparamDataTable cln = ((procedureparamDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new procedureparamDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnppaId = base.Columns["ppaId"];
                this.columnppaIndex = base.Columns["ppaIndex"];
                this.columnppaProcedureId = base.Columns["ppaProcedureId"];
                this.columnppaCaseParamId = base.Columns["ppaCaseParamId"];
                this.columnppaIsImportant = base.Columns["ppaIsImportant"];
                this.columnppaFieldName = base.Columns["ppaFieldName"];
                this.columnppaType = base.Columns["ppaType"];
                this.columnppaParamTitle = base.Columns["ppaParamTitle"];
                this.columnppaSectionName = base.Columns["ppaSectionName"];
                this.columnppaActive = base.Columns["ppaActive"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnppaId = new global::System.Data.DataColumn("ppaId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppaId);
                this.columnppaIndex = new global::System.Data.DataColumn("ppaIndex", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppaIndex);
                this.columnppaProcedureId = new global::System.Data.DataColumn("ppaProcedureId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppaProcedureId);
                this.columnppaCaseParamId = new global::System.Data.DataColumn("ppaCaseParamId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppaCaseParamId);
                this.columnppaIsImportant = new global::System.Data.DataColumn("ppaIsImportant", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppaIsImportant);
                this.columnppaFieldName = new global::System.Data.DataColumn("ppaFieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppaFieldName);
                this.columnppaType = new global::System.Data.DataColumn("ppaType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppaType);
                this.columnppaParamTitle = new global::System.Data.DataColumn("ppaParamTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppaParamTitle);
                this.columnppaSectionName = new global::System.Data.DataColumn("ppaSectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppaSectionName);
                this.columnppaActive = new global::System.Data.DataColumn("ppaActive", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppaActive);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnppaId}, true));
                this.columnppaId.AutoIncrement = true;
                this.columnppaId.AutoIncrementSeed = -1;
                this.columnppaId.AutoIncrementStep = -1;
                this.columnppaId.AllowDBNull = false;
                this.columnppaId.Unique = true;
                this.columnppaIndex.AllowDBNull = false;
                this.columnppaProcedureId.AllowDBNull = false;
                this.columnppaCaseParamId.AllowDBNull = false;
                this.columnppaFieldName.AllowDBNull = false;
                this.columnppaFieldName.MaxLength = 45;
                this.columnppaType.AllowDBNull = false;
                this.columnppaParamTitle.MaxLength = 100;
                this.columnppaSectionName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedureparamRow NewprocedureparamRow() {
                return ((procedureparamRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new procedureparamRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(procedureparamRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.procedureparamRowChanged != null)) {
                    this.procedureparamRowChanged(this, new procedureparamRowChangeEvent(((procedureparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.procedureparamRowChanging != null)) {
                    this.procedureparamRowChanging(this, new procedureparamRowChangeEvent(((procedureparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.procedureparamRowDeleted != null)) {
                    this.procedureparamRowDeleted(this, new procedureparamRowChangeEvent(((procedureparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.procedureparamRowDeleting != null)) {
                    this.procedureparamRowDeleting(this, new procedureparamRowChangeEvent(((procedureparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveprocedureparamRow(procedureparamRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "procedureparamDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class procedurestatusDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnpstId;
            
            private global::System.Data.DataColumn columnpstProcedureId;
            
            private global::System.Data.DataColumn columnpstTitle;
            
            private global::System.Data.DataColumn columnpstIndex;
            
            private global::System.Data.DataColumn columnpstMode;
            
            private global::System.Data.DataColumn columnpstAllUsersAllowed;
            
            private global::System.Data.DataColumn columnpstCanStart;
            
            private global::System.Data.DataColumn columnpstCanEnd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusDataTable() {
                this.TableName = "procedurestatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal procedurestatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected procedurestatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pstIdColumn {
                get {
                    return this.columnpstId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pstProcedureIdColumn {
                get {
                    return this.columnpstProcedureId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pstTitleColumn {
                get {
                    return this.columnpstTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pstIndexColumn {
                get {
                    return this.columnpstIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pstModeColumn {
                get {
                    return this.columnpstMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pstAllUsersAllowedColumn {
                get {
                    return this.columnpstAllUsersAllowed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pstCanStartColumn {
                get {
                    return this.columnpstCanStart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pstCanEndColumn {
                get {
                    return this.columnpstCanEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRow this[int index] {
                get {
                    return ((procedurestatusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procedurestatusRowChangeEventHandler procedurestatusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procedurestatusRowChangeEventHandler procedurestatusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procedurestatusRowChangeEventHandler procedurestatusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procedurestatusRowChangeEventHandler procedurestatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddprocedurestatusRow(procedurestatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRow AddprocedurestatusRow(proceduredefinitionRow parentproceduredefinitionRowByProcStatusProcedureId, string pstTitle, int pstIndex, int pstMode, ulong pstAllUsersAllowed, ulong pstCanStart, ulong pstCanEnd) {
                procedurestatusRow rowprocedurestatusRow = ((procedurestatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        pstTitle,
                        pstIndex,
                        pstMode,
                        pstAllUsersAllowed,
                        pstCanStart,
                        pstCanEnd};
                if ((parentproceduredefinitionRowByProcStatusProcedureId != null)) {
                    columnValuesArray[1] = parentproceduredefinitionRowByProcStatusProcedureId[0];
                }
                rowprocedurestatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowprocedurestatusRow);
                return rowprocedurestatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRow FindBypstId(int pstId) {
                return ((procedurestatusRow)(this.Rows.Find(new object[] {
                            pstId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                procedurestatusDataTable cln = ((procedurestatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new procedurestatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnpstId = base.Columns["pstId"];
                this.columnpstProcedureId = base.Columns["pstProcedureId"];
                this.columnpstTitle = base.Columns["pstTitle"];
                this.columnpstIndex = base.Columns["pstIndex"];
                this.columnpstMode = base.Columns["pstMode"];
                this.columnpstAllUsersAllowed = base.Columns["pstAllUsersAllowed"];
                this.columnpstCanStart = base.Columns["pstCanStart"];
                this.columnpstCanEnd = base.Columns["pstCanEnd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnpstId = new global::System.Data.DataColumn("pstId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpstId);
                this.columnpstProcedureId = new global::System.Data.DataColumn("pstProcedureId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpstProcedureId);
                this.columnpstTitle = new global::System.Data.DataColumn("pstTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpstTitle);
                this.columnpstIndex = new global::System.Data.DataColumn("pstIndex", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpstIndex);
                this.columnpstMode = new global::System.Data.DataColumn("pstMode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpstMode);
                this.columnpstAllUsersAllowed = new global::System.Data.DataColumn("pstAllUsersAllowed", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpstAllUsersAllowed);
                this.columnpstCanStart = new global::System.Data.DataColumn("pstCanStart", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpstCanStart);
                this.columnpstCanEnd = new global::System.Data.DataColumn("pstCanEnd", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpstCanEnd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnpstId}, true));
                this.columnpstId.AutoIncrement = true;
                this.columnpstId.AutoIncrementSeed = -1;
                this.columnpstId.AutoIncrementStep = -1;
                this.columnpstId.AllowDBNull = false;
                this.columnpstId.Unique = true;
                this.columnpstProcedureId.AllowDBNull = false;
                this.columnpstTitle.AllowDBNull = false;
                this.columnpstTitle.MaxLength = 100;
                this.columnpstAllUsersAllowed.AllowDBNull = false;
                this.columnpstCanStart.AllowDBNull = false;
                this.columnpstCanEnd.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRow NewprocedurestatusRow() {
                return ((procedurestatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new procedurestatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(procedurestatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.procedurestatusRowChanged != null)) {
                    this.procedurestatusRowChanged(this, new procedurestatusRowChangeEvent(((procedurestatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.procedurestatusRowChanging != null)) {
                    this.procedurestatusRowChanging(this, new procedurestatusRowChangeEvent(((procedurestatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.procedurestatusRowDeleted != null)) {
                    this.procedurestatusRowDeleted(this, new procedurestatusRowChangeEvent(((procedurestatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.procedurestatusRowDeleting != null)) {
                    this.procedurestatusRowDeleting(this, new procedurestatusRowChangeEvent(((procedurestatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveprocedurestatusRow(procedurestatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "procedurestatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class procstatususergroupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnpsguId;
            
            private global::System.Data.DataColumn columnpsguUserId;
            
            private global::System.Data.DataColumn columnpsguGroupId;
            
            private global::System.Data.DataColumn columnpsguProcStatusId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procstatususergroupDataTable() {
                this.TableName = "procstatususergroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal procstatususergroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected procstatususergroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn psguIdColumn {
                get {
                    return this.columnpsguId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn psguUserIdColumn {
                get {
                    return this.columnpsguUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn psguGroupIdColumn {
                get {
                    return this.columnpsguGroupId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn psguProcStatusIdColumn {
                get {
                    return this.columnpsguProcStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procstatususergroupRow this[int index] {
                get {
                    return ((procstatususergroupRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procstatususergroupRowChangeEventHandler procstatususergroupRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procstatususergroupRowChangeEventHandler procstatususergroupRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procstatususergroupRowChangeEventHandler procstatususergroupRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event procstatususergroupRowChangeEventHandler procstatususergroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddprocstatususergroupRow(procstatususergroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procstatususergroupRow AddprocstatususergroupRow(int psguUserId, int psguGroupId, procedurestatusRow parentprocedurestatusRowBypsguProcStatusId) {
                procstatususergroupRow rowprocstatususergroupRow = ((procstatususergroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        psguUserId,
                        psguGroupId,
                        null};
                if ((parentprocedurestatusRowBypsguProcStatusId != null)) {
                    columnValuesArray[3] = parentprocedurestatusRowBypsguProcStatusId[0];
                }
                rowprocstatususergroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowprocstatususergroupRow);
                return rowprocstatususergroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procstatususergroupRow FindBypsguId(int psguId) {
                return ((procstatususergroupRow)(this.Rows.Find(new object[] {
                            psguId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                procstatususergroupDataTable cln = ((procstatususergroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new procstatususergroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnpsguId = base.Columns["psguId"];
                this.columnpsguUserId = base.Columns["psguUserId"];
                this.columnpsguGroupId = base.Columns["psguGroupId"];
                this.columnpsguProcStatusId = base.Columns["psguProcStatusId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnpsguId = new global::System.Data.DataColumn("psguId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpsguId);
                this.columnpsguUserId = new global::System.Data.DataColumn("psguUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpsguUserId);
                this.columnpsguGroupId = new global::System.Data.DataColumn("psguGroupId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpsguGroupId);
                this.columnpsguProcStatusId = new global::System.Data.DataColumn("psguProcStatusId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpsguProcStatusId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnpsguId}, true));
                this.columnpsguId.AutoIncrement = true;
                this.columnpsguId.AutoIncrementSeed = -1;
                this.columnpsguId.AutoIncrementStep = -1;
                this.columnpsguId.AllowDBNull = false;
                this.columnpsguId.Unique = true;
                this.columnpsguProcStatusId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procstatususergroupRow NewprocstatususergroupRow() {
                return ((procstatususergroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new procstatususergroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(procstatususergroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.procstatususergroupRowChanged != null)) {
                    this.procstatususergroupRowChanged(this, new procstatususergroupRowChangeEvent(((procstatususergroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.procstatususergroupRowChanging != null)) {
                    this.procstatususergroupRowChanging(this, new procstatususergroupRowChangeEvent(((procstatususergroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.procstatususergroupRowDeleted != null)) {
                    this.procstatususergroupRowDeleted(this, new procstatususergroupRowChangeEvent(((procstatususergroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.procstatususergroupRowDeleting != null)) {
                    this.procstatususergroupRowDeleting(this, new procstatususergroupRowChangeEvent(((procstatususergroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveprocstatususergroupRow(procstatususergroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "procstatususergroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class reminderDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnremId;
            
            private global::System.Data.DataColumn columncaseId;
            
            private global::System.Data.DataColumn columnremOwnerId;
            
            private global::System.Data.DataColumn columnremReceiverId;
            
            private global::System.Data.DataColumn columnremDeadline;
            
            private global::System.Data.DataColumn columnremCreated;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reminderDataTable() {
                this.TableName = "reminder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal reminderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected reminderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn remIdColumn {
                get {
                    return this.columnremId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn caseIdColumn {
                get {
                    return this.columncaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn remOwnerIdColumn {
                get {
                    return this.columnremOwnerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn remReceiverIdColumn {
                get {
                    return this.columnremReceiverId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn remDeadlineColumn {
                get {
                    return this.columnremDeadline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn remCreatedColumn {
                get {
                    return this.columnremCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reminderRow this[int index] {
                get {
                    return ((reminderRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reminderRowChangeEventHandler reminderRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reminderRowChangeEventHandler reminderRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reminderRowChangeEventHandler reminderRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reminderRowChangeEventHandler reminderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddreminderRow(reminderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reminderRow AddreminderRow(int caseId, int remOwnerId, int remReceiverId, System.DateTime remDeadline, System.DateTime remCreated) {
                reminderRow rowreminderRow = ((reminderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        caseId,
                        remOwnerId,
                        remReceiverId,
                        remDeadline,
                        remCreated};
                rowreminderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreminderRow);
                return rowreminderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reminderRow FindByremId(int remId) {
                return ((reminderRow)(this.Rows.Find(new object[] {
                            remId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                reminderDataTable cln = ((reminderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new reminderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnremId = base.Columns["remId"];
                this.columncaseId = base.Columns["caseId"];
                this.columnremOwnerId = base.Columns["remOwnerId"];
                this.columnremReceiverId = base.Columns["remReceiverId"];
                this.columnremDeadline = base.Columns["remDeadline"];
                this.columnremCreated = base.Columns["remCreated"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnremId = new global::System.Data.DataColumn("remId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremId);
                this.columncaseId = new global::System.Data.DataColumn("caseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncaseId);
                this.columnremOwnerId = new global::System.Data.DataColumn("remOwnerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremOwnerId);
                this.columnremReceiverId = new global::System.Data.DataColumn("remReceiverId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremReceiverId);
                this.columnremDeadline = new global::System.Data.DataColumn("remDeadline", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremDeadline);
                this.columnremCreated = new global::System.Data.DataColumn("remCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremCreated);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnremId}, true));
                this.columnremId.AutoIncrement = true;
                this.columnremId.AutoIncrementSeed = -1;
                this.columnremId.AutoIncrementStep = -1;
                this.columnremId.AllowDBNull = false;
                this.columnremId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reminderRow NewreminderRow() {
                return ((reminderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new reminderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(reminderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.reminderRowChanged != null)) {
                    this.reminderRowChanged(this, new reminderRowChangeEvent(((reminderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.reminderRowChanging != null)) {
                    this.reminderRowChanging(this, new reminderRowChangeEvent(((reminderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.reminderRowDeleted != null)) {
                    this.reminderRowDeleted(this, new reminderRowChangeEvent(((reminderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.reminderRowDeleting != null)) {
                    this.reminderRowDeleting(this, new reminderRowChangeEvent(((reminderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovereminderRow(reminderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "reminderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class reportdefinitionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrepId;
            
            private global::System.Data.DataColumn columnrepName;
            
            private global::System.Data.DataColumn columnrepType;
            
            private global::System.Data.DataColumn columnrepXdimensionName;
            
            private global::System.Data.DataColumn columnrepYdimensionName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportdefinitionDataTable() {
                this.TableName = "reportdefinition";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal reportdefinitionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected reportdefinitionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repIdColumn {
                get {
                    return this.columnrepId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repNameColumn {
                get {
                    return this.columnrepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repTypeColumn {
                get {
                    return this.columnrepType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repXdimensionNameColumn {
                get {
                    return this.columnrepXdimensionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repYdimensionNameColumn {
                get {
                    return this.columnrepYdimensionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportdefinitionRow this[int index] {
                get {
                    return ((reportdefinitionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reportdefinitionRowChangeEventHandler reportdefinitionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reportdefinitionRowChangeEventHandler reportdefinitionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reportdefinitionRowChangeEventHandler reportdefinitionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reportdefinitionRowChangeEventHandler reportdefinitionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddreportdefinitionRow(reportdefinitionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportdefinitionRow AddreportdefinitionRow(string repName, string repType, string repXdimensionName, string repYdimensionName) {
                reportdefinitionRow rowreportdefinitionRow = ((reportdefinitionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        repName,
                        repType,
                        repXdimensionName,
                        repYdimensionName};
                rowreportdefinitionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreportdefinitionRow);
                return rowreportdefinitionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportdefinitionRow FindByrepId(int repId) {
                return ((reportdefinitionRow)(this.Rows.Find(new object[] {
                            repId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                reportdefinitionDataTable cln = ((reportdefinitionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new reportdefinitionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnrepId = base.Columns["repId"];
                this.columnrepName = base.Columns["repName"];
                this.columnrepType = base.Columns["repType"];
                this.columnrepXdimensionName = base.Columns["repXdimensionName"];
                this.columnrepYdimensionName = base.Columns["repYdimensionName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnrepId = new global::System.Data.DataColumn("repId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepId);
                this.columnrepName = new global::System.Data.DataColumn("repName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepName);
                this.columnrepType = new global::System.Data.DataColumn("repType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepType);
                this.columnrepXdimensionName = new global::System.Data.DataColumn("repXdimensionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepXdimensionName);
                this.columnrepYdimensionName = new global::System.Data.DataColumn("repYdimensionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepYdimensionName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrepId}, true));
                this.columnrepId.AutoIncrement = true;
                this.columnrepId.AutoIncrementSeed = -1;
                this.columnrepId.AutoIncrementStep = -1;
                this.columnrepId.AllowDBNull = false;
                this.columnrepId.Unique = true;
                this.columnrepName.AllowDBNull = false;
                this.columnrepName.MaxLength = 100;
                this.columnrepType.AllowDBNull = false;
                this.columnrepType.MaxLength = 50;
                this.columnrepXdimensionName.AllowDBNull = false;
                this.columnrepXdimensionName.MaxLength = 50;
                this.columnrepYdimensionName.AllowDBNull = false;
                this.columnrepYdimensionName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportdefinitionRow NewreportdefinitionRow() {
                return ((reportdefinitionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new reportdefinitionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(reportdefinitionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.reportdefinitionRowChanged != null)) {
                    this.reportdefinitionRowChanged(this, new reportdefinitionRowChangeEvent(((reportdefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.reportdefinitionRowChanging != null)) {
                    this.reportdefinitionRowChanging(this, new reportdefinitionRowChangeEvent(((reportdefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.reportdefinitionRowDeleted != null)) {
                    this.reportdefinitionRowDeleted(this, new reportdefinitionRowChangeEvent(((reportdefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.reportdefinitionRowDeleting != null)) {
                    this.reportdefinitionRowDeleting(this, new reportdefinitionRowChangeEvent(((reportdefinitionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovereportdefinitionRow(reportdefinitionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "reportdefinitionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class reportparamDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrepId;
            
            private global::System.Data.DataColumn columnrepName;
            
            private global::System.Data.DataColumn columnrepType;
            
            private global::System.Data.DataColumn columnrepXdimensionName;
            
            private global::System.Data.DataColumn columnrepYdimensionName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportparamDataTable() {
                this.TableName = "reportparam";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal reportparamDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected reportparamDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repIdColumn {
                get {
                    return this.columnrepId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repNameColumn {
                get {
                    return this.columnrepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repTypeColumn {
                get {
                    return this.columnrepType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repXdimensionNameColumn {
                get {
                    return this.columnrepXdimensionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn repYdimensionNameColumn {
                get {
                    return this.columnrepYdimensionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportparamRow this[int index] {
                get {
                    return ((reportparamRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reportparamRowChangeEventHandler reportparamRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reportparamRowChangeEventHandler reportparamRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reportparamRowChangeEventHandler reportparamRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event reportparamRowChangeEventHandler reportparamRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddreportparamRow(reportparamRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportparamRow AddreportparamRow(string repName, string repType, string repXdimensionName, string repYdimensionName) {
                reportparamRow rowreportparamRow = ((reportparamRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        repName,
                        repType,
                        repXdimensionName,
                        repYdimensionName};
                rowreportparamRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreportparamRow);
                return rowreportparamRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportparamRow FindByrepId(int repId) {
                return ((reportparamRow)(this.Rows.Find(new object[] {
                            repId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                reportparamDataTable cln = ((reportparamDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new reportparamDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnrepId = base.Columns["repId"];
                this.columnrepName = base.Columns["repName"];
                this.columnrepType = base.Columns["repType"];
                this.columnrepXdimensionName = base.Columns["repXdimensionName"];
                this.columnrepYdimensionName = base.Columns["repYdimensionName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnrepId = new global::System.Data.DataColumn("repId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepId);
                this.columnrepName = new global::System.Data.DataColumn("repName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepName);
                this.columnrepType = new global::System.Data.DataColumn("repType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepType);
                this.columnrepXdimensionName = new global::System.Data.DataColumn("repXdimensionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepXdimensionName);
                this.columnrepYdimensionName = new global::System.Data.DataColumn("repYdimensionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepYdimensionName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrepId}, true));
                this.columnrepId.AutoIncrement = true;
                this.columnrepId.AutoIncrementSeed = -1;
                this.columnrepId.AutoIncrementStep = -1;
                this.columnrepId.AllowDBNull = false;
                this.columnrepId.Unique = true;
                this.columnrepName.MaxLength = 100;
                this.columnrepType.MaxLength = 50;
                this.columnrepXdimensionName.MaxLength = 50;
                this.columnrepYdimensionName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportparamRow NewreportparamRow() {
                return ((reportparamRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new reportparamRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(reportparamRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.reportparamRowChanged != null)) {
                    this.reportparamRowChanged(this, new reportparamRowChangeEvent(((reportparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.reportparamRowChanging != null)) {
                    this.reportparamRowChanging(this, new reportparamRowChangeEvent(((reportparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.reportparamRowDeleted != null)) {
                    this.reportparamRowDeleted(this, new reportparamRowChangeEvent(((reportparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.reportparamRowDeleting != null)) {
                    this.reportparamRowDeleting(this, new reportparamRowChangeEvent(((reportparamRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovereportparamRow(reportparamRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "reportparamDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class systemlogDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnlogId;
            
            private global::System.Data.DataColumn columnlogStatus;
            
            private global::System.Data.DataColumn columnlogDate;
            
            private global::System.Data.DataColumn columnlogMessage;
            
            private global::System.Data.DataColumn columnlogUrl;
            
            private global::System.Data.DataColumn columnlogCallStack;
            
            private global::System.Data.DataColumn columnlogModule;
            
            private global::System.Data.DataColumn columnlogUser;
            
            private global::System.Data.DataColumn columnlogServer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systemlogDataTable() {
                this.TableName = "systemlog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal systemlogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected systemlogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logIdColumn {
                get {
                    return this.columnlogId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logStatusColumn {
                get {
                    return this.columnlogStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logDateColumn {
                get {
                    return this.columnlogDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logMessageColumn {
                get {
                    return this.columnlogMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logUrlColumn {
                get {
                    return this.columnlogUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logCallStackColumn {
                get {
                    return this.columnlogCallStack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logModuleColumn {
                get {
                    return this.columnlogModule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logUserColumn {
                get {
                    return this.columnlogUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn logServerColumn {
                get {
                    return this.columnlogServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systemlogRow this[int index] {
                get {
                    return ((systemlogRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event systemlogRowChangeEventHandler systemlogRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event systemlogRowChangeEventHandler systemlogRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event systemlogRowChangeEventHandler systemlogRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event systemlogRowChangeEventHandler systemlogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddsystemlogRow(systemlogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systemlogRow AddsystemlogRow(int logStatus, System.DateTime logDate, string logMessage, string logUrl, string logCallStack, string logModule, string logUser, string logServer) {
                systemlogRow rowsystemlogRow = ((systemlogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        logStatus,
                        logDate,
                        logMessage,
                        logUrl,
                        logCallStack,
                        logModule,
                        logUser,
                        logServer};
                rowsystemlogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsystemlogRow);
                return rowsystemlogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systemlogRow FindBylogId(int logId) {
                return ((systemlogRow)(this.Rows.Find(new object[] {
                            logId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                systemlogDataTable cln = ((systemlogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new systemlogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnlogId = base.Columns["logId"];
                this.columnlogStatus = base.Columns["logStatus"];
                this.columnlogDate = base.Columns["logDate"];
                this.columnlogMessage = base.Columns["logMessage"];
                this.columnlogUrl = base.Columns["logUrl"];
                this.columnlogCallStack = base.Columns["logCallStack"];
                this.columnlogModule = base.Columns["logModule"];
                this.columnlogUser = base.Columns["logUser"];
                this.columnlogServer = base.Columns["logServer"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnlogId = new global::System.Data.DataColumn("logId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogId);
                this.columnlogStatus = new global::System.Data.DataColumn("logStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogStatus);
                this.columnlogDate = new global::System.Data.DataColumn("logDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogDate);
                this.columnlogMessage = new global::System.Data.DataColumn("logMessage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogMessage);
                this.columnlogUrl = new global::System.Data.DataColumn("logUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogUrl);
                this.columnlogCallStack = new global::System.Data.DataColumn("logCallStack", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogCallStack);
                this.columnlogModule = new global::System.Data.DataColumn("logModule", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogModule);
                this.columnlogUser = new global::System.Data.DataColumn("logUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogUser);
                this.columnlogServer = new global::System.Data.DataColumn("logServer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogServer);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnlogId}, true));
                this.columnlogId.AutoIncrement = true;
                this.columnlogId.AutoIncrementSeed = -1;
                this.columnlogId.AutoIncrementStep = -1;
                this.columnlogId.AllowDBNull = false;
                this.columnlogId.Unique = true;
                this.columnlogStatus.AllowDBNull = false;
                this.columnlogDate.AllowDBNull = false;
                this.columnlogMessage.AllowDBNull = false;
                this.columnlogMessage.MaxLength = 1000;
                this.columnlogUrl.MaxLength = 1000;
                this.columnlogCallStack.MaxLength = 21845;
                this.columnlogModule.MaxLength = 45;
                this.columnlogUser.MaxLength = 45;
                this.columnlogServer.MaxLength = 45;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systemlogRow NewsystemlogRow() {
                return ((systemlogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new systemlogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(systemlogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.systemlogRowChanged != null)) {
                    this.systemlogRowChanged(this, new systemlogRowChangeEvent(((systemlogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.systemlogRowChanging != null)) {
                    this.systemlogRowChanging(this, new systemlogRowChangeEvent(((systemlogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.systemlogRowDeleted != null)) {
                    this.systemlogRowDeleted(this, new systemlogRowChangeEvent(((systemlogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.systemlogRowDeleting != null)) {
                    this.systemlogRowDeleting(this, new systemlogRowChangeEvent(((systemlogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovesystemlogRow(systemlogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "systemlogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class useractionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnactId;
            
            private global::System.Data.DataColumn columnactUserId;
            
            private global::System.Data.DataColumn columnactObjectType;
            
            private global::System.Data.DataColumn columnactObjectId;
            
            private global::System.Data.DataColumn columnactActionType;
            
            private global::System.Data.DataColumn columnactDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public useractionDataTable() {
                this.TableName = "useraction";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal useractionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected useractionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn actIdColumn {
                get {
                    return this.columnactId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn actUserIdColumn {
                get {
                    return this.columnactUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn actObjectTypeColumn {
                get {
                    return this.columnactObjectType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn actObjectIdColumn {
                get {
                    return this.columnactObjectId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn actActionTypeColumn {
                get {
                    return this.columnactActionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn actDateColumn {
                get {
                    return this.columnactDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public useractionRow this[int index] {
                get {
                    return ((useractionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event useractionRowChangeEventHandler useractionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event useractionRowChangeEventHandler useractionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event useractionRowChangeEventHandler useractionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event useractionRowChangeEventHandler useractionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdduseractionRow(useractionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public useractionRow AdduseractionRow(workflowuserRow parentworkflowuserRowByActionUser, string actObjectType, int actObjectId, string actActionType, System.DateTime actDate) {
                useractionRow rowuseractionRow = ((useractionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        actObjectType,
                        actObjectId,
                        actActionType,
                        actDate};
                if ((parentworkflowuserRowByActionUser != null)) {
                    columnValuesArray[1] = parentworkflowuserRowByActionUser[0];
                }
                rowuseractionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowuseractionRow);
                return rowuseractionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public useractionRow FindByactId(int actId) {
                return ((useractionRow)(this.Rows.Find(new object[] {
                            actId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                useractionDataTable cln = ((useractionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new useractionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnactId = base.Columns["actId"];
                this.columnactUserId = base.Columns["actUserId"];
                this.columnactObjectType = base.Columns["actObjectType"];
                this.columnactObjectId = base.Columns["actObjectId"];
                this.columnactActionType = base.Columns["actActionType"];
                this.columnactDate = base.Columns["actDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnactId = new global::System.Data.DataColumn("actId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactId);
                this.columnactUserId = new global::System.Data.DataColumn("actUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactUserId);
                this.columnactObjectType = new global::System.Data.DataColumn("actObjectType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactObjectType);
                this.columnactObjectId = new global::System.Data.DataColumn("actObjectId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactObjectId);
                this.columnactActionType = new global::System.Data.DataColumn("actActionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactActionType);
                this.columnactDate = new global::System.Data.DataColumn("actDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnactDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnactId}, true));
                this.columnactId.AutoIncrement = true;
                this.columnactId.AutoIncrementSeed = -1;
                this.columnactId.AutoIncrementStep = -1;
                this.columnactId.AllowDBNull = false;
                this.columnactId.Unique = true;
                this.columnactObjectType.MaxLength = 45;
                this.columnactActionType.MaxLength = 45;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public useractionRow NewuseractionRow() {
                return ((useractionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new useractionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(useractionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.useractionRowChanged != null)) {
                    this.useractionRowChanged(this, new useractionRowChangeEvent(((useractionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.useractionRowChanging != null)) {
                    this.useractionRowChanging(this, new useractionRowChangeEvent(((useractionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.useractionRowDeleted != null)) {
                    this.useractionRowDeleted(this, new useractionRowChangeEvent(((useractionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.useractionRowDeleting != null)) {
                    this.useractionRowDeleting(this, new useractionRowChangeEvent(((useractionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveuseractionRow(useractionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "useractionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usergroupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnugrId;
            
            private global::System.Data.DataColumn columnugrName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupDataTable() {
                this.TableName = "usergroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal usergroupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected usergroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ugrIdColumn {
                get {
                    return this.columnugrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ugrNameColumn {
                get {
                    return this.columnugrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupRow this[int index] {
                get {
                    return ((usergroupRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event usergroupRowChangeEventHandler usergroupRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event usergroupRowChangeEventHandler usergroupRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event usergroupRowChangeEventHandler usergroupRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event usergroupRowChangeEventHandler usergroupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddusergroupRow(usergroupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupRow AddusergroupRow(string ugrName) {
                usergroupRow rowusergroupRow = ((usergroupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ugrName};
                rowusergroupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusergroupRow);
                return rowusergroupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupRow FindByugrId(int ugrId) {
                return ((usergroupRow)(this.Rows.Find(new object[] {
                            ugrId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                usergroupDataTable cln = ((usergroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usergroupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnugrId = base.Columns["ugrId"];
                this.columnugrName = base.Columns["ugrName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnugrId = new global::System.Data.DataColumn("ugrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnugrId);
                this.columnugrName = new global::System.Data.DataColumn("ugrName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnugrName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnugrId}, true));
                this.columnugrId.AutoIncrement = true;
                this.columnugrId.AutoIncrementSeed = -1;
                this.columnugrId.AutoIncrementStep = -1;
                this.columnugrId.AllowDBNull = false;
                this.columnugrId.Unique = true;
                this.columnugrName.AllowDBNull = false;
                this.columnugrName.MaxLength = 45;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupRow NewusergroupRow() {
                return ((usergroupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usergroupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(usergroupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usergroupRowChanged != null)) {
                    this.usergroupRowChanged(this, new usergroupRowChangeEvent(((usergroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usergroupRowChanging != null)) {
                    this.usergroupRowChanging(this, new usergroupRowChangeEvent(((usergroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usergroupRowDeleted != null)) {
                    this.usergroupRowDeleted(this, new usergroupRowChangeEvent(((usergroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usergroupRowDeleting != null)) {
                    this.usergroupRowDeleting(this, new usergroupRowChangeEvent(((usergroupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveusergroupRow(usergroupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usergroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class usergroupconnectionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnugcUserId;
            
            private global::System.Data.DataColumn columnugcGroupId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupconnectionDataTable() {
                this.TableName = "usergroupconnection";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal usergroupconnectionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected usergroupconnectionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ugcUserIdColumn {
                get {
                    return this.columnugcUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ugcGroupIdColumn {
                get {
                    return this.columnugcGroupId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupconnectionRow this[int index] {
                get {
                    return ((usergroupconnectionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event usergroupconnectionRowChangeEventHandler usergroupconnectionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event usergroupconnectionRowChangeEventHandler usergroupconnectionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event usergroupconnectionRowChangeEventHandler usergroupconnectionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event usergroupconnectionRowChangeEventHandler usergroupconnectionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddusergroupconnectionRow(usergroupconnectionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupconnectionRow AddusergroupconnectionRow(workflowuserRow parentworkflowuserRowByUser, usergroupRow parentusergroupRowByGroup) {
                usergroupconnectionRow rowusergroupconnectionRow = ((usergroupconnectionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentworkflowuserRowByUser != null)) {
                    columnValuesArray[0] = parentworkflowuserRowByUser[0];
                }
                if ((parentusergroupRowByGroup != null)) {
                    columnValuesArray[1] = parentusergroupRowByGroup[0];
                }
                rowusergroupconnectionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowusergroupconnectionRow);
                return rowusergroupconnectionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupconnectionRow FindByugcUserIdugcGroupId(int ugcUserId, int ugcGroupId) {
                return ((usergroupconnectionRow)(this.Rows.Find(new object[] {
                            ugcUserId,
                            ugcGroupId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                usergroupconnectionDataTable cln = ((usergroupconnectionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new usergroupconnectionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnugcUserId = base.Columns["ugcUserId"];
                this.columnugcGroupId = base.Columns["ugcGroupId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnugcUserId = new global::System.Data.DataColumn("ugcUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnugcUserId);
                this.columnugcGroupId = new global::System.Data.DataColumn("ugcGroupId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnugcGroupId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnugcUserId,
                                this.columnugcGroupId}, true));
                this.columnugcUserId.AllowDBNull = false;
                this.columnugcGroupId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupconnectionRow NewusergroupconnectionRow() {
                return ((usergroupconnectionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new usergroupconnectionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(usergroupconnectionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.usergroupconnectionRowChanged != null)) {
                    this.usergroupconnectionRowChanged(this, new usergroupconnectionRowChangeEvent(((usergroupconnectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.usergroupconnectionRowChanging != null)) {
                    this.usergroupconnectionRowChanging(this, new usergroupconnectionRowChangeEvent(((usergroupconnectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.usergroupconnectionRowDeleted != null)) {
                    this.usergroupconnectionRowDeleted(this, new usergroupconnectionRowChangeEvent(((usergroupconnectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.usergroupconnectionRowDeleting != null)) {
                    this.usergroupconnectionRowDeleting(this, new usergroupconnectionRowChangeEvent(((usergroupconnectionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveusergroupconnectionRow(usergroupconnectionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "usergroupconnectionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class workflowuserDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnuserId;
            
            private global::System.Data.DataColumn columnuserLogin;
            
            private global::System.Data.DataColumn columnuserIsFromAD;
            
            private global::System.Data.DataColumn columnuserPassword;
            
            private global::System.Data.DataColumn columnuserFirstName;
            
            private global::System.Data.DataColumn columnuserLastName;
            
            private global::System.Data.DataColumn columnuserManagerId;
            
            private global::System.Data.DataColumn columnuserIsAdmin;
            
            private global::System.Data.DataColumn columnuserEmail;
            
            private global::System.Data.DataColumn columnuserLanguage;
            
            private global::System.Data.DataColumn columnuserCode;
            
            private global::System.Data.DataColumn columnuserDepartmentId;
            
            private global::System.Data.DataColumn columnuserLocation;
            
            private global::System.Data.DataColumn columnuserPhoneNumbers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserDataTable() {
                this.TableName = "workflowuser";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal workflowuserDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected workflowuserDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userIdColumn {
                get {
                    return this.columnuserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userLoginColumn {
                get {
                    return this.columnuserLogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userIsFromADColumn {
                get {
                    return this.columnuserIsFromAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userPasswordColumn {
                get {
                    return this.columnuserPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userFirstNameColumn {
                get {
                    return this.columnuserFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userLastNameColumn {
                get {
                    return this.columnuserLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userManagerIdColumn {
                get {
                    return this.columnuserManagerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userIsAdminColumn {
                get {
                    return this.columnuserIsAdmin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userEmailColumn {
                get {
                    return this.columnuserEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userLanguageColumn {
                get {
                    return this.columnuserLanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userCodeColumn {
                get {
                    return this.columnuserCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userDepartmentIdColumn {
                get {
                    return this.columnuserDepartmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userLocationColumn {
                get {
                    return this.columnuserLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn userPhoneNumbersColumn {
                get {
                    return this.columnuserPhoneNumbers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow this[int index] {
                get {
                    return ((workflowuserRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event workflowuserRowChangeEventHandler workflowuserRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event workflowuserRowChangeEventHandler workflowuserRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event workflowuserRowChangeEventHandler workflowuserRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event workflowuserRowChangeEventHandler workflowuserRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddworkflowuserRow(workflowuserRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow AddworkflowuserRow(string userLogin, ulong userIsFromAD, string userPassword, string userFirstName, string userLastName, workflowuserRow parentworkflowuserRowByManager, ulong userIsAdmin, string userEmail, string userLanguage, string userCode, departmentRow parentdepartmentRowByDepartment, string userLocation, string userPhoneNumbers) {
                workflowuserRow rowworkflowuserRow = ((workflowuserRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        userLogin,
                        userIsFromAD,
                        userPassword,
                        userFirstName,
                        userLastName,
                        null,
                        userIsAdmin,
                        userEmail,
                        userLanguage,
                        userCode,
                        null,
                        userLocation,
                        userPhoneNumbers};
                if ((parentworkflowuserRowByManager != null)) {
                    columnValuesArray[6] = parentworkflowuserRowByManager[0];
                }
                if ((parentdepartmentRowByDepartment != null)) {
                    columnValuesArray[11] = parentdepartmentRowByDepartment[0];
                }
                rowworkflowuserRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowworkflowuserRow);
                return rowworkflowuserRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow FindByuserId(int userId) {
                return ((workflowuserRow)(this.Rows.Find(new object[] {
                            userId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                workflowuserDataTable cln = ((workflowuserDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new workflowuserDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnuserId = base.Columns["userId"];
                this.columnuserLogin = base.Columns["userLogin"];
                this.columnuserIsFromAD = base.Columns["userIsFromAD"];
                this.columnuserPassword = base.Columns["userPassword"];
                this.columnuserFirstName = base.Columns["userFirstName"];
                this.columnuserLastName = base.Columns["userLastName"];
                this.columnuserManagerId = base.Columns["userManagerId"];
                this.columnuserIsAdmin = base.Columns["userIsAdmin"];
                this.columnuserEmail = base.Columns["userEmail"];
                this.columnuserLanguage = base.Columns["userLanguage"];
                this.columnuserCode = base.Columns["userCode"];
                this.columnuserDepartmentId = base.Columns["userDepartmentId"];
                this.columnuserLocation = base.Columns["userLocation"];
                this.columnuserPhoneNumbers = base.Columns["userPhoneNumbers"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnuserId = new global::System.Data.DataColumn("userId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserId);
                this.columnuserLogin = new global::System.Data.DataColumn("userLogin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserLogin);
                this.columnuserIsFromAD = new global::System.Data.DataColumn("userIsFromAD", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserIsFromAD);
                this.columnuserPassword = new global::System.Data.DataColumn("userPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserPassword);
                this.columnuserFirstName = new global::System.Data.DataColumn("userFirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserFirstName);
                this.columnuserLastName = new global::System.Data.DataColumn("userLastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserLastName);
                this.columnuserManagerId = new global::System.Data.DataColumn("userManagerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserManagerId);
                this.columnuserIsAdmin = new global::System.Data.DataColumn("userIsAdmin", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserIsAdmin);
                this.columnuserEmail = new global::System.Data.DataColumn("userEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserEmail);
                this.columnuserLanguage = new global::System.Data.DataColumn("userLanguage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserLanguage);
                this.columnuserCode = new global::System.Data.DataColumn("userCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserCode);
                this.columnuserDepartmentId = new global::System.Data.DataColumn("userDepartmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserDepartmentId);
                this.columnuserLocation = new global::System.Data.DataColumn("userLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserLocation);
                this.columnuserPhoneNumbers = new global::System.Data.DataColumn("userPhoneNumbers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserPhoneNumbers);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuserId}, true));
                this.columnuserId.AutoIncrement = true;
                this.columnuserId.AutoIncrementSeed = -1;
                this.columnuserId.AutoIncrementStep = -1;
                this.columnuserId.AllowDBNull = false;
                this.columnuserId.Unique = true;
                this.columnuserLogin.AllowDBNull = false;
                this.columnuserLogin.MaxLength = 50;
                this.columnuserIsFromAD.AllowDBNull = false;
                this.columnuserPassword.MaxLength = 50;
                this.columnuserFirstName.AllowDBNull = false;
                this.columnuserFirstName.MaxLength = 50;
                this.columnuserLastName.AllowDBNull = false;
                this.columnuserLastName.MaxLength = 100;
                this.columnuserEmail.MaxLength = 100;
                this.columnuserLanguage.MaxLength = 45;
                this.columnuserCode.MaxLength = 32;
                this.columnuserLocation.MaxLength = 100;
                this.columnuserPhoneNumbers.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow NewworkflowuserRow() {
                return ((workflowuserRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new workflowuserRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(workflowuserRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.workflowuserRowChanged != null)) {
                    this.workflowuserRowChanged(this, new workflowuserRowChangeEvent(((workflowuserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.workflowuserRowChanging != null)) {
                    this.workflowuserRowChanging(this, new workflowuserRowChangeEvent(((workflowuserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.workflowuserRowDeleted != null)) {
                    this.workflowuserRowDeleted(this, new workflowuserRowChangeEvent(((workflowuserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.workflowuserRowDeleting != null)) {
                    this.workflowuserRowDeleting(this, new workflowuserRowChangeEvent(((workflowuserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveworkflowuserRow(workflowuserRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                amodDataSet ds = new amodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "workflowuserDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class caseappsRow : global::System.Data.DataRow {
            
            private caseappsDataTable tablecaseapps;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal caseappsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecaseapps = ((caseappsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int appId {
                get {
                    return ((int)(this[this.tablecaseapps.appIdColumn]));
                }
                set {
                    this[this.tablecaseapps.appIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string appUrl {
                get {
                    try {
                        return ((string)(this[this.tablecaseapps.appUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appUrl\' in table \'caseapps\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseapps.appUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int appType {
                get {
                    try {
                        return ((int)(this[this.tablecaseapps.appTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appType\' in table \'caseapps\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseapps.appTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string appName {
                get {
                    try {
                        return ((string)(this[this.tablecaseapps.appNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appName\' in table \'caseapps\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseapps.appNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string appTitle {
                get {
                    try {
                        return ((string)(this[this.tablecaseapps.appTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appTitle\' in table \'caseapps\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseapps.appTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string appHeight {
                get {
                    try {
                        return ((string)(this[this.tablecaseapps.appHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appHeight\' in table \'caseapps\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseapps.appHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string appWidth {
                get {
                    try {
                        return ((string)(this[this.tablecaseapps.appWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appWidth\' in table \'caseapps\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseapps.appWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string appAdditionalStyle {
                get {
                    try {
                        return ((string)(this[this.tablecaseapps.appAdditionalStyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appAdditionalStyle\' in table \'caseapps\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseapps.appAdditionalStyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int appProcedureId {
                get {
                    try {
                        return ((int)(this[this.tablecaseapps.appProcedureIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appProcedureId\' in table \'caseapps\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseapps.appProcedureIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int appStageId {
                get {
                    try {
                        return ((int)(this[this.tablecaseapps.appStageIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appStageId\' in table \'caseapps\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseapps.appStageIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionRow proceduredefinitionRow {
                get {
                    return ((proceduredefinitionRow)(this.GetParentRow(this.Table.ParentRelations["appProcedureFK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["appProcedureFK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRow procedurestatusRow {
                get {
                    return ((procedurestatusRow)(this.GetParentRow(this.Table.ParentRelations["appStageFK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["appStageFK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappUrlNull() {
                return this.IsNull(this.tablecaseapps.appUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappUrlNull() {
                this[this.tablecaseapps.appUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappTypeNull() {
                return this.IsNull(this.tablecaseapps.appTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappTypeNull() {
                this[this.tablecaseapps.appTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappNameNull() {
                return this.IsNull(this.tablecaseapps.appNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappNameNull() {
                this[this.tablecaseapps.appNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappTitleNull() {
                return this.IsNull(this.tablecaseapps.appTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappTitleNull() {
                this[this.tablecaseapps.appTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappHeightNull() {
                return this.IsNull(this.tablecaseapps.appHeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappHeightNull() {
                this[this.tablecaseapps.appHeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappWidthNull() {
                return this.IsNull(this.tablecaseapps.appWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappWidthNull() {
                this[this.tablecaseapps.appWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappAdditionalStyleNull() {
                return this.IsNull(this.tablecaseapps.appAdditionalStyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappAdditionalStyleNull() {
                this[this.tablecaseapps.appAdditionalStyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappProcedureIdNull() {
                return this.IsNull(this.tablecaseapps.appProcedureIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappProcedureIdNull() {
                this[this.tablecaseapps.appProcedureIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappStageIdNull() {
                return this.IsNull(this.tablecaseapps.appStageIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappStageIdNull() {
                this[this.tablecaseapps.appStageIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class caseattachmentRow : global::System.Data.DataRow {
            
            private caseattachmentDataTable tablecaseattachment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal caseattachmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecaseattachment = ((caseattachmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attId {
                get {
                    return ((int)(this[this.tablecaseattachment.attIdColumn]));
                }
                set {
                    this[this.tablecaseattachment.attIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime attCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecaseattachment.attCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attCreated\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attCreatedById {
                get {
                    try {
                        return ((int)(this[this.tablecaseattachment.attCreatedByIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attCreatedById\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attCreatedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime attModified {
                get {
                    return ((global::System.DateTime)(this[this.tablecaseattachment.attModifiedColumn]));
                }
                set {
                    this[this.tablecaseattachment.attModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attModifiedById {
                get {
                    return ((int)(this[this.tablecaseattachment.attModifiedByIdColumn]));
                }
                set {
                    this[this.tablecaseattachment.attModifiedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string attName {
                get {
                    return ((string)(this[this.tablecaseattachment.attNameColumn]));
                }
                set {
                    this[this.tablecaseattachment.attNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string attTitle {
                get {
                    try {
                        return ((string)(this[this.tablecaseattachment.attTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attTitle\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string attDescription {
                get {
                    try {
                        return ((string)(this[this.tablecaseattachment.attDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attDescription\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] attValue {
                get {
                    try {
                        return ((byte[])(this[this.tablecaseattachment.attValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attValue\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong attIsExternal {
                get {
                    try {
                        return ((ulong)(this[this.tablecaseattachment.attIsExternalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attIsExternal\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attIsExternalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string attExternalLink {
                get {
                    try {
                        return ((string)(this[this.tablecaseattachment.attExternalLinkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attExternalLink\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attExternalLinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong attIsCurrentVersion {
                get {
                    try {
                        return ((ulong)(this[this.tablecaseattachment.attIsCurrentVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attIsCurrentVersion\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attIsCurrentVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attVersion {
                get {
                    try {
                        return ((int)(this[this.tablecaseattachment.attVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attVersion\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attCaseId {
                get {
                    try {
                        return ((int)(this[this.tablecaseattachment.attCaseIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attCaseId\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attCaseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long attSize {
                get {
                    try {
                        return ((long)(this[this.tablecaseattachment.attSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attSize\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] attThumbnail {
                get {
                    try {
                        return ((byte[])(this[this.tablecaseattachment.attThumbnailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attThumbnail\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attThumbnailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attLockedById {
                get {
                    try {
                        return ((int)(this[this.tablecaseattachment.attLockedByIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attLockedById\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attLockedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime attLocked {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecaseattachment.attLockedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attLocked\' in table \'caseattachment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachment.attLockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow casedefinitionRow {
                get {
                    return ((casedefinitionRow)(this.GetParentRow(this.Table.ParentRelations["AttCaseIdFK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AttCaseIdFK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByAttCreatedBy {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["AttCreatedBy"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AttCreatedBy"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByAttLockedBy {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["AttLockedBy"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AttLockedBy"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByAttModifiedBy {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["AttModifiedBy"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AttModifiedBy"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattCreatedNull() {
                return this.IsNull(this.tablecaseattachment.attCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattCreatedNull() {
                this[this.tablecaseattachment.attCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattCreatedByIdNull() {
                return this.IsNull(this.tablecaseattachment.attCreatedByIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattCreatedByIdNull() {
                this[this.tablecaseattachment.attCreatedByIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattTitleNull() {
                return this.IsNull(this.tablecaseattachment.attTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattTitleNull() {
                this[this.tablecaseattachment.attTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattDescriptionNull() {
                return this.IsNull(this.tablecaseattachment.attDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattDescriptionNull() {
                this[this.tablecaseattachment.attDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattValueNull() {
                return this.IsNull(this.tablecaseattachment.attValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattValueNull() {
                this[this.tablecaseattachment.attValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattIsExternalNull() {
                return this.IsNull(this.tablecaseattachment.attIsExternalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattIsExternalNull() {
                this[this.tablecaseattachment.attIsExternalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattExternalLinkNull() {
                return this.IsNull(this.tablecaseattachment.attExternalLinkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattExternalLinkNull() {
                this[this.tablecaseattachment.attExternalLinkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattIsCurrentVersionNull() {
                return this.IsNull(this.tablecaseattachment.attIsCurrentVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattIsCurrentVersionNull() {
                this[this.tablecaseattachment.attIsCurrentVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattVersionNull() {
                return this.IsNull(this.tablecaseattachment.attVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattVersionNull() {
                this[this.tablecaseattachment.attVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattCaseIdNull() {
                return this.IsNull(this.tablecaseattachment.attCaseIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattCaseIdNull() {
                this[this.tablecaseattachment.attCaseIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattSizeNull() {
                return this.IsNull(this.tablecaseattachment.attSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattSizeNull() {
                this[this.tablecaseattachment.attSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattThumbnailNull() {
                return this.IsNull(this.tablecaseattachment.attThumbnailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattThumbnailNull() {
                this[this.tablecaseattachment.attThumbnailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattLockedByIdNull() {
                return this.IsNull(this.tablecaseattachment.attLockedByIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattLockedByIdNull() {
                this[this.tablecaseattachment.attLockedByIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattLockedNull() {
                return this.IsNull(this.tablecaseattachment.attLockedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattLockedNull() {
                this[this.tablecaseattachment.attLockedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class caseattachmenthistoryRow : global::System.Data.DataRow {
            
            private caseattachmenthistoryDataTable tablecaseattachmenthistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal caseattachmenthistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecaseattachmenthistory = ((caseattachmenthistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attHistId {
                get {
                    return ((int)(this[this.tablecaseattachmenthistory.attHistIdColumn]));
                }
                set {
                    this[this.tablecaseattachmenthistory.attHistIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attId {
                get {
                    return ((int)(this[this.tablecaseattachmenthistory.attIdColumn]));
                }
                set {
                    this[this.tablecaseattachmenthistory.attIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attCaseId {
                get {
                    try {
                        return ((int)(this[this.tablecaseattachmenthistory.attCaseIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attCaseId\' in table \'caseattachmenthistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attCaseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime attCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecaseattachmenthistory.attCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attCreated\' in table \'caseattachmenthistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attCreatedById {
                get {
                    try {
                        return ((int)(this[this.tablecaseattachmenthistory.attCreatedByIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attCreatedById\' in table \'caseattachmenthistory\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attCreatedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime attModified {
                get {
                    return ((global::System.DateTime)(this[this.tablecaseattachmenthistory.attModifiedColumn]));
                }
                set {
                    this[this.tablecaseattachmenthistory.attModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attModifiedById {
                get {
                    return ((int)(this[this.tablecaseattachmenthistory.attModifiedByIdColumn]));
                }
                set {
                    this[this.tablecaseattachmenthistory.attModifiedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string attName {
                get {
                    return ((string)(this[this.tablecaseattachmenthistory.attNameColumn]));
                }
                set {
                    this[this.tablecaseattachmenthistory.attNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string attTitle {
                get {
                    try {
                        return ((string)(this[this.tablecaseattachmenthistory.attTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attTitle\' in table \'caseattachmenthistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string attDescription {
                get {
                    try {
                        return ((string)(this[this.tablecaseattachmenthistory.attDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attDescription\' in table \'caseattachmenthistory\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] attValue {
                get {
                    try {
                        return ((byte[])(this[this.tablecaseattachmenthistory.attValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attValue\' in table \'caseattachmenthistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong attIsExternal {
                get {
                    try {
                        return ((ulong)(this[this.tablecaseattachmenthistory.attIsExternalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attIsExternal\' in table \'caseattachmenthistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attIsExternalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string attExternalLink {
                get {
                    try {
                        return ((string)(this[this.tablecaseattachmenthistory.attExternalLinkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attExternalLink\' in table \'caseattachmenthistory\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attExternalLinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong attIsCurrentVersion {
                get {
                    try {
                        return ((ulong)(this[this.tablecaseattachmenthistory.attIsCurrentVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attIsCurrentVersion\' in table \'caseattachmenthistory\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attIsCurrentVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int attVersion {
                get {
                    try {
                        return ((int)(this[this.tablecaseattachmenthistory.attVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attVersion\' in table \'caseattachmenthistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] attThumbnail {
                get {
                    try {
                        return ((byte[])(this[this.tablecaseattachmenthistory.attThumbnailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attThumbnail\' in table \'caseattachmenthistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attThumbnailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong attIsDeleted {
                get {
                    try {
                        return ((ulong)(this[this.tablecaseattachmenthistory.attIsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attIsDeleted\' in table \'caseattachmenthistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseattachmenthistory.attIsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow casedefinitionRow {
                get {
                    return ((casedefinitionRow)(this.GetParentRow(this.Table.ParentRelations["AttCaseHistIdFK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AttCaseHistIdFK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByAttCreatedByH {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["AttCreatedByH"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AttCreatedByH"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByAttModifiedByH {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["AttModifiedByH"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AttModifiedByH"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattCaseIdNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attCaseIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattCaseIdNull() {
                this[this.tablecaseattachmenthistory.attCaseIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattCreatedNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattCreatedNull() {
                this[this.tablecaseattachmenthistory.attCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattCreatedByIdNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attCreatedByIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattCreatedByIdNull() {
                this[this.tablecaseattachmenthistory.attCreatedByIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattTitleNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattTitleNull() {
                this[this.tablecaseattachmenthistory.attTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattDescriptionNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattDescriptionNull() {
                this[this.tablecaseattachmenthistory.attDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattValueNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattValueNull() {
                this[this.tablecaseattachmenthistory.attValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattIsExternalNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attIsExternalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattIsExternalNull() {
                this[this.tablecaseattachmenthistory.attIsExternalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattExternalLinkNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attExternalLinkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattExternalLinkNull() {
                this[this.tablecaseattachmenthistory.attExternalLinkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattIsCurrentVersionNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attIsCurrentVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattIsCurrentVersionNull() {
                this[this.tablecaseattachmenthistory.attIsCurrentVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattVersionNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattVersionNull() {
                this[this.tablecaseattachmenthistory.attVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattThumbnailNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attThumbnailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattThumbnailNull() {
                this[this.tablecaseattachmenthistory.attThumbnailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsattIsDeletedNull() {
                return this.IsNull(this.tablecaseattachmenthistory.attIsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetattIsDeletedNull() {
                this[this.tablecaseattachmenthistory.attIsDeletedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class casecommentRow : global::System.Data.DataRow {
            
            private casecommentDataTable tablecasecomment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal casecommentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecasecomment = ((casecommentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int comId {
                get {
                    return ((int)(this[this.tablecasecomment.comIdColumn]));
                }
                set {
                    this[this.tablecasecomment.comIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string comText {
                get {
                    return ((string)(this[this.tablecasecomment.comTextColumn]));
                }
                set {
                    this[this.tablecasecomment.comTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime comDate {
                get {
                    return ((global::System.DateTime)(this[this.tablecasecomment.comDateColumn]));
                }
                set {
                    this[this.tablecasecomment.comDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int comCaseId {
                get {
                    try {
                        return ((int)(this[this.tablecasecomment.comCaseIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comCaseId\' in table \'casecomment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasecomment.comCaseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int comUserId {
                get {
                    try {
                        return ((int)(this[this.tablecasecomment.comUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comUserId\' in table \'casecomment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasecomment.comUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int comStatusId {
                get {
                    try {
                        return ((int)(this[this.tablecasecomment.comStatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comStatusId\' in table \'casecomment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasecomment.comStatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow casedefinitionRow {
                get {
                    return ((casedefinitionRow)(this.GetParentRow(this.Table.ParentRelations["CommentCaseId1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CommentCaseId1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRow {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["CommentUser"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CommentUser"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscomCaseIdNull() {
                return this.IsNull(this.tablecasecomment.comCaseIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcomCaseIdNull() {
                this[this.tablecasecomment.comCaseIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscomUserIdNull() {
                return this.IsNull(this.tablecasecomment.comUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcomUserIdNull() {
                this[this.tablecasecomment.comUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscomStatusIdNull() {
                return this.IsNull(this.tablecasecomment.comStatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcomStatusIdNull() {
                this[this.tablecasecomment.comStatusIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class casedefinitionRow : global::System.Data.DataRow {
            
            private casedefinitionDataTable tablecasedefinition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal casedefinitionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecasedefinition = ((casedefinitionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseId {
                get {
                    return ((int)(this[this.tablecasedefinition.caseIdColumn]));
                }
                set {
                    this[this.tablecasedefinition.caseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseTitle {
                get {
                    return ((string)(this[this.tablecasedefinition.caseTitleColumn]));
                }
                set {
                    this[this.tablecasedefinition.caseTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseOwnerId {
                get {
                    return ((int)(this[this.tablecasedefinition.caseOwnerIdColumn]));
                }
                set {
                    this[this.tablecasedefinition.caseOwnerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseCreated {
                get {
                    return ((global::System.DateTime)(this[this.tablecasedefinition.caseCreatedColumn]));
                }
                set {
                    this[this.tablecasedefinition.caseCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseCreatedById {
                get {
                    return ((int)(this[this.tablecasedefinition.caseCreatedByIdColumn]));
                }
                set {
                    this[this.tablecasedefinition.caseCreatedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseModified {
                get {
                    return ((global::System.DateTime)(this[this.tablecasedefinition.caseModifiedColumn]));
                }
                set {
                    this[this.tablecasedefinition.caseModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseModifiedById {
                get {
                    return ((int)(this[this.tablecasedefinition.caseModifiedByIdColumn]));
                }
                set {
                    this[this.tablecasedefinition.caseModifiedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseForwarded {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseForwardedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseForwarded\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseForwardedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseForwardedById {
                get {
                    try {
                        return ((int)(this[this.tablecasedefinition.caseForwardedByIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseForwardedById\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseForwardedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseProcedureId {
                get {
                    return ((int)(this[this.tablecasedefinition.caseProcedureIdColumn]));
                }
                set {
                    this[this.tablecasedefinition.caseProcedureIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseStatusId {
                get {
                    try {
                        return ((int)(this[this.tablecasedefinition.caseStatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseStatusId\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseStatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseVersion {
                get {
                    return ((int)(this[this.tablecasedefinition.caseVersionColumn]));
                }
                set {
                    this[this.tablecasedefinition.caseVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong caseIsCurrentVersion {
                get {
                    return ((ulong)(this[this.tablecasedefinition.caseIsCurrentVersionColumn]));
                }
                set {
                    this[this.tablecasedefinition.caseIsCurrentVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar1 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar1\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar2 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar2\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar3 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar3\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText1 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseText1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText1\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseText1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText2 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseText2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText2\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseText2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText3 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseText3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText3\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseText3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber1 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasedefinition.caseNumber1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber1\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseNumber1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber2 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasedefinition.caseNumber2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber2\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseNumber2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber3 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasedefinition.caseNumber3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber3\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseNumber3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseDateTime1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime1\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseDateTime1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseDateTime2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime2\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseDateTime2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseDateTime3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime3\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseDateTime3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseForwardedCC {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseForwardedCCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseForwardedCC\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseForwardedCCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong caseIsClosed {
                get {
                    try {
                        return ((ulong)(this[this.tablecasedefinition.caseIsClosedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseIsClosed\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseIsClosedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber4 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasedefinition.caseNumber4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber4\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseNumber4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber5 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasedefinition.caseNumber5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber5\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseNumber5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber6 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasedefinition.caseNumber6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber6\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseNumber6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber7 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasedefinition.caseNumber7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber7\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseNumber7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber8 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasedefinition.caseNumber8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber8\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseNumber8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber9 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasedefinition.caseNumber9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber9\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseNumber9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber10 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasedefinition.caseNumber10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber10\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseNumber10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar4 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar4\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar5 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar5\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar6 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar6\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar7 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar7\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar8 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar8\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar9 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar9\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar10 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar10\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar11 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar11\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar12 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar12\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar13 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar13\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar14 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar14\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar15 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar15\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar16 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar16\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar17 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar17\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar18 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar18\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar19 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar19\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar20 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseVarchar20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar20\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseVarchar20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime4 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseDateTime4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime4\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseDateTime4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime5 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseDateTime5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime5\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseDateTime5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime6 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseDateTime6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime6\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseDateTime6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime7 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseDateTime7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime7\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseDateTime7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime8 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseDateTime8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime8\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseDateTime8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime9 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseDateTime9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime9\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseDateTime9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime10 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasedefinition.caseDateTime10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime10\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseDateTime10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText4 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseText4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText4\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseText4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText5 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseText5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText5\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseText5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText6 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseText6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText6\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseText6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText7 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseText7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText7\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseText7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText8 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseText8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText8\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseText8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText9 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseText9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText9\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseText9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText10 {
                get {
                    try {
                        return ((string)(this[this.tablecasedefinition.caseText10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText10\' in table \'casedefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasedefinition.caseText10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowBycaseCreatedById {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["caseCreatedById"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["caseCreatedById"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowBycaseForwaredById {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["caseForwaredById"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["caseForwaredById"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowBycaseModifiedById {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["caseModifiedById"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["caseModifiedById"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowBycaseOwnerIdFK {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["caseOwnerIdFK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["caseOwnerIdFK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionRow proceduredefinitionRow {
                get {
                    return ((proceduredefinitionRow)(this.GetParentRow(this.Table.ParentRelations["caseProcedureIdFK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["caseProcedureIdFK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseForwardedNull() {
                return this.IsNull(this.tablecasedefinition.caseForwardedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseForwardedNull() {
                this[this.tablecasedefinition.caseForwardedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseForwardedByIdNull() {
                return this.IsNull(this.tablecasedefinition.caseForwardedByIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseForwardedByIdNull() {
                this[this.tablecasedefinition.caseForwardedByIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseStatusIdNull() {
                return this.IsNull(this.tablecasedefinition.caseStatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseStatusIdNull() {
                this[this.tablecasedefinition.caseStatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar1Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar1Null() {
                this[this.tablecasedefinition.caseVarchar1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar2Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar2Null() {
                this[this.tablecasedefinition.caseVarchar2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar3Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar3Null() {
                this[this.tablecasedefinition.caseVarchar3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText1Null() {
                return this.IsNull(this.tablecasedefinition.caseText1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText1Null() {
                this[this.tablecasedefinition.caseText1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText2Null() {
                return this.IsNull(this.tablecasedefinition.caseText2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText2Null() {
                this[this.tablecasedefinition.caseText2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText3Null() {
                return this.IsNull(this.tablecasedefinition.caseText3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText3Null() {
                this[this.tablecasedefinition.caseText3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber1Null() {
                return this.IsNull(this.tablecasedefinition.caseNumber1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber1Null() {
                this[this.tablecasedefinition.caseNumber1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber2Null() {
                return this.IsNull(this.tablecasedefinition.caseNumber2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber2Null() {
                this[this.tablecasedefinition.caseNumber2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber3Null() {
                return this.IsNull(this.tablecasedefinition.caseNumber3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber3Null() {
                this[this.tablecasedefinition.caseNumber3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime1Null() {
                return this.IsNull(this.tablecasedefinition.caseDateTime1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime1Null() {
                this[this.tablecasedefinition.caseDateTime1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime2Null() {
                return this.IsNull(this.tablecasedefinition.caseDateTime2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime2Null() {
                this[this.tablecasedefinition.caseDateTime2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime3Null() {
                return this.IsNull(this.tablecasedefinition.caseDateTime3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime3Null() {
                this[this.tablecasedefinition.caseDateTime3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseForwardedCCNull() {
                return this.IsNull(this.tablecasedefinition.caseForwardedCCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseForwardedCCNull() {
                this[this.tablecasedefinition.caseForwardedCCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseIsClosedNull() {
                return this.IsNull(this.tablecasedefinition.caseIsClosedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseIsClosedNull() {
                this[this.tablecasedefinition.caseIsClosedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber4Null() {
                return this.IsNull(this.tablecasedefinition.caseNumber4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber4Null() {
                this[this.tablecasedefinition.caseNumber4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber5Null() {
                return this.IsNull(this.tablecasedefinition.caseNumber5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber5Null() {
                this[this.tablecasedefinition.caseNumber5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber6Null() {
                return this.IsNull(this.tablecasedefinition.caseNumber6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber6Null() {
                this[this.tablecasedefinition.caseNumber6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber7Null() {
                return this.IsNull(this.tablecasedefinition.caseNumber7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber7Null() {
                this[this.tablecasedefinition.caseNumber7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber8Null() {
                return this.IsNull(this.tablecasedefinition.caseNumber8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber8Null() {
                this[this.tablecasedefinition.caseNumber8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber9Null() {
                return this.IsNull(this.tablecasedefinition.caseNumber9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber9Null() {
                this[this.tablecasedefinition.caseNumber9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber10Null() {
                return this.IsNull(this.tablecasedefinition.caseNumber10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber10Null() {
                this[this.tablecasedefinition.caseNumber10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar4Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar4Null() {
                this[this.tablecasedefinition.caseVarchar4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar5Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar5Null() {
                this[this.tablecasedefinition.caseVarchar5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar6Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar6Null() {
                this[this.tablecasedefinition.caseVarchar6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar7Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar7Null() {
                this[this.tablecasedefinition.caseVarchar7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar8Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar8Null() {
                this[this.tablecasedefinition.caseVarchar8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar9Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar9Null() {
                this[this.tablecasedefinition.caseVarchar9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar10Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar10Null() {
                this[this.tablecasedefinition.caseVarchar10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar11Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar11Null() {
                this[this.tablecasedefinition.caseVarchar11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar12Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar12Null() {
                this[this.tablecasedefinition.caseVarchar12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar13Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar13Null() {
                this[this.tablecasedefinition.caseVarchar13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar14Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar14Null() {
                this[this.tablecasedefinition.caseVarchar14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar15Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar15Null() {
                this[this.tablecasedefinition.caseVarchar15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar16Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar16Null() {
                this[this.tablecasedefinition.caseVarchar16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar17Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar17Null() {
                this[this.tablecasedefinition.caseVarchar17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar18Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar18Null() {
                this[this.tablecasedefinition.caseVarchar18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar19Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar19Null() {
                this[this.tablecasedefinition.caseVarchar19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar20Null() {
                return this.IsNull(this.tablecasedefinition.caseVarchar20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar20Null() {
                this[this.tablecasedefinition.caseVarchar20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime4Null() {
                return this.IsNull(this.tablecasedefinition.caseDateTime4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime4Null() {
                this[this.tablecasedefinition.caseDateTime4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime5Null() {
                return this.IsNull(this.tablecasedefinition.caseDateTime5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime5Null() {
                this[this.tablecasedefinition.caseDateTime5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime6Null() {
                return this.IsNull(this.tablecasedefinition.caseDateTime6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime6Null() {
                this[this.tablecasedefinition.caseDateTime6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime7Null() {
                return this.IsNull(this.tablecasedefinition.caseDateTime7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime7Null() {
                this[this.tablecasedefinition.caseDateTime7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime8Null() {
                return this.IsNull(this.tablecasedefinition.caseDateTime8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime8Null() {
                this[this.tablecasedefinition.caseDateTime8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime9Null() {
                return this.IsNull(this.tablecasedefinition.caseDateTime9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime9Null() {
                this[this.tablecasedefinition.caseDateTime9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime10Null() {
                return this.IsNull(this.tablecasedefinition.caseDateTime10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime10Null() {
                this[this.tablecasedefinition.caseDateTime10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText4Null() {
                return this.IsNull(this.tablecasedefinition.caseText4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText4Null() {
                this[this.tablecasedefinition.caseText4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText5Null() {
                return this.IsNull(this.tablecasedefinition.caseText5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText5Null() {
                this[this.tablecasedefinition.caseText5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText6Null() {
                return this.IsNull(this.tablecasedefinition.caseText6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText6Null() {
                this[this.tablecasedefinition.caseText6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText7Null() {
                return this.IsNull(this.tablecasedefinition.caseText7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText7Null() {
                this[this.tablecasedefinition.caseText7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText8Null() {
                return this.IsNull(this.tablecasedefinition.caseText8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText8Null() {
                this[this.tablecasedefinition.caseText8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText9Null() {
                return this.IsNull(this.tablecasedefinition.caseText9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText9Null() {
                this[this.tablecasedefinition.caseText9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText10Null() {
                return this.IsNull(this.tablecasedefinition.caseText10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText10Null() {
                this[this.tablecasedefinition.caseText10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentRow[] GetcaseattachmentRows() {
                if ((this.Table.ChildRelations["AttCaseIdFK"] == null)) {
                    return new caseattachmentRow[0];
                }
                else {
                    return ((caseattachmentRow[])(base.GetChildRows(this.Table.ChildRelations["AttCaseIdFK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmenthistoryRow[] GetcaseattachmenthistoryRows() {
                if ((this.Table.ChildRelations["AttCaseHistIdFK"] == null)) {
                    return new caseattachmenthistoryRow[0];
                }
                else {
                    return ((caseattachmenthistoryRow[])(base.GetChildRows(this.Table.ChildRelations["AttCaseHistIdFK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casecommentRow[] GetcasecommentRows() {
                if ((this.Table.ChildRelations["CommentCaseId1"] == null)) {
                    return new casecommentRow[0];
                }
                else {
                    return ((casecommentRow[])(base.GetChildRows(this.Table.ChildRelations["CommentCaseId1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRow[] GetcasehistoryRows() {
                if ((this.Table.ChildRelations["CaseHistCaseId"] == null)) {
                    return new casehistoryRow[0];
                }
                else {
                    return ((casehistoryRow[])(base.GetChildRows(this.Table.ChildRelations["CaseHistCaseId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsRow[] GetcasehistorydetailsRows() {
                if ((this.Table.ChildRelations["CaseHistDetCaseId"] == null)) {
                    return new casehistorydetailsRow[0];
                }
                else {
                    return ((casehistorydetailsRow[])(base.GetChildRows(this.Table.ChildRelations["CaseHistDetCaseId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casereadedRow[] GetcasereadedRows() {
                if ((this.Table.ChildRelations["ReadedCaseId"] == null)) {
                    return new casereadedRow[0];
                }
                else {
                    return ((casereadedRow[])(base.GetChildRows(this.Table.ChildRelations["ReadedCaseId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class casehistoryRow : global::System.Data.DataRow {
            
            private casehistoryDataTable tablecasehistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal casehistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecasehistory = ((casehistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseHistId {
                get {
                    return ((int)(this[this.tablecasehistory.caseHistIdColumn]));
                }
                set {
                    this[this.tablecasehistory.caseHistIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseId {
                get {
                    return ((int)(this[this.tablecasehistory.caseIdColumn]));
                }
                set {
                    this[this.tablecasehistory.caseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseTitle {
                get {
                    return ((string)(this[this.tablecasehistory.caseTitleColumn]));
                }
                set {
                    this[this.tablecasehistory.caseTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseOwnerId {
                get {
                    return ((int)(this[this.tablecasehistory.caseOwnerIdColumn]));
                }
                set {
                    this[this.tablecasehistory.caseOwnerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseCreated {
                get {
                    return ((global::System.DateTime)(this[this.tablecasehistory.caseCreatedColumn]));
                }
                set {
                    this[this.tablecasehistory.caseCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseCreatedById {
                get {
                    return ((int)(this[this.tablecasehistory.caseCreatedByIdColumn]));
                }
                set {
                    this[this.tablecasehistory.caseCreatedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseModified {
                get {
                    return ((global::System.DateTime)(this[this.tablecasehistory.caseModifiedColumn]));
                }
                set {
                    this[this.tablecasehistory.caseModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseModifiedById {
                get {
                    return ((int)(this[this.tablecasehistory.caseModifiedByIdColumn]));
                }
                set {
                    this[this.tablecasehistory.caseModifiedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseForwarded {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseForwardedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseForwarded\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseForwardedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseForwardedById {
                get {
                    try {
                        return ((int)(this[this.tablecasehistory.caseForwardedByIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseForwardedById\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseForwardedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseProcedureId {
                get {
                    return ((int)(this[this.tablecasehistory.caseProcedureIdColumn]));
                }
                set {
                    this[this.tablecasehistory.caseProcedureIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseStatusId {
                get {
                    try {
                        return ((int)(this[this.tablecasehistory.caseStatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseStatusId\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseStatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseVersion {
                get {
                    return ((int)(this[this.tablecasehistory.caseVersionColumn]));
                }
                set {
                    this[this.tablecasehistory.caseVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong caseIsCurrentVersion {
                get {
                    return ((ulong)(this[this.tablecasehistory.caseIsCurrentVersionColumn]));
                }
                set {
                    this[this.tablecasehistory.caseIsCurrentVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar1 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar1\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar2 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar2\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar3 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar3\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText1 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseText1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText1\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseText1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText2 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseText2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText2\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseText2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText3 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseText3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText3\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseText3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber1 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistory.caseNumber1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber1\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNumber1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber2 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistory.caseNumber2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber2\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNumber2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber3 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistory.caseNumber3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber3\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNumber3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseDateTime1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime1\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseDateTime1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseDateTime2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime2\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseDateTime2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseDateTime3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime3\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseDateTime3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseForwardedCC {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseForwardedCCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseForwardedCC\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseForwardedCCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int casePrevStatusId {
                get {
                    try {
                        return ((int)(this[this.tablecasehistory.casePrevStatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'casePrevStatusId\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.casePrevStatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int casePrevOwnerId {
                get {
                    try {
                        return ((int)(this[this.tablecasehistory.casePrevOwnerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'casePrevOwnerId\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.casePrevOwnerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseNextStatusId {
                get {
                    try {
                        return ((int)(this[this.tablecasehistory.caseNextStatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNextStatusId\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNextStatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseNextOwnerId {
                get {
                    try {
                        return ((int)(this[this.tablecasehistory.caseNextOwnerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNextOwnerId\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNextOwnerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong caseIsClosed {
                get {
                    try {
                        return ((ulong)(this[this.tablecasehistory.caseIsClosedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseIsClosed\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseIsClosedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber4 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistory.caseNumber4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber4\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNumber4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber5 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistory.caseNumber5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber5\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNumber5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber6 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistory.caseNumber6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber6\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNumber6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber7 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistory.caseNumber7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber7\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNumber7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber8 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistory.caseNumber8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber8\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNumber8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber9 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistory.caseNumber9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber9\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNumber9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber10 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistory.caseNumber10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber10\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseNumber10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar4 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar4\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar5 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar5\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar6 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar6\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar7 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar7\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar8 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar8\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar9 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar9\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar10 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar10\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar11 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar11\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar12 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar12\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar13 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar13\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar14 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar14\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar15 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar15\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar16 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar16\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar17 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar17\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar18 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar18\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar19 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar19\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar20 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseVarchar20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar20\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseVarchar20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime4 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseDateTime4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime4\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseDateTime4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime5 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseDateTime5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime5\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseDateTime5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime6 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseDateTime6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime6\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseDateTime6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime7 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseDateTime7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime7\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseDateTime7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime8 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseDateTime8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime8\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseDateTime8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime9 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseDateTime9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime9\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseDateTime9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime10 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseDateTime10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime10\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseDateTime10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText4 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseText4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText4\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseText4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText5 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseText5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText5\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseText5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText6 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseText6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText6\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseText6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText7 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseText7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText7\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseText7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText8 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseText8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText8\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseText8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText9 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseText9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText9\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseText9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText10 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistory.caseText10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText10\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseText10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseReceivedFromId {
                get {
                    try {
                        return ((int)(this[this.tablecasehistory.caseReceivedFromIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseReceivedFromId\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseReceivedFromIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseReceived {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistory.caseReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseReceived\' in table \'casehistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistory.caseReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByAuthorH {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["AuthorH"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AuthorH"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow casedefinitionRow {
                get {
                    return ((casedefinitionRow)(this.GetParentRow(this.Table.ParentRelations["CaseHistCaseId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CaseHistCaseId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByEditorH {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["EditorH"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EditorH"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByForwarderH {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["ForwarderH"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ForwarderH"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByOwnerH {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["OwnerH"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["OwnerH"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseForwardedNull() {
                return this.IsNull(this.tablecasehistory.caseForwardedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseForwardedNull() {
                this[this.tablecasehistory.caseForwardedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseForwardedByIdNull() {
                return this.IsNull(this.tablecasehistory.caseForwardedByIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseForwardedByIdNull() {
                this[this.tablecasehistory.caseForwardedByIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseStatusIdNull() {
                return this.IsNull(this.tablecasehistory.caseStatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseStatusIdNull() {
                this[this.tablecasehistory.caseStatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar1Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar1Null() {
                this[this.tablecasehistory.caseVarchar1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar2Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar2Null() {
                this[this.tablecasehistory.caseVarchar2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar3Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar3Null() {
                this[this.tablecasehistory.caseVarchar3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText1Null() {
                return this.IsNull(this.tablecasehistory.caseText1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText1Null() {
                this[this.tablecasehistory.caseText1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText2Null() {
                return this.IsNull(this.tablecasehistory.caseText2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText2Null() {
                this[this.tablecasehistory.caseText2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText3Null() {
                return this.IsNull(this.tablecasehistory.caseText3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText3Null() {
                this[this.tablecasehistory.caseText3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber1Null() {
                return this.IsNull(this.tablecasehistory.caseNumber1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber1Null() {
                this[this.tablecasehistory.caseNumber1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber2Null() {
                return this.IsNull(this.tablecasehistory.caseNumber2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber2Null() {
                this[this.tablecasehistory.caseNumber2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber3Null() {
                return this.IsNull(this.tablecasehistory.caseNumber3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber3Null() {
                this[this.tablecasehistory.caseNumber3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime1Null() {
                return this.IsNull(this.tablecasehistory.caseDateTime1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime1Null() {
                this[this.tablecasehistory.caseDateTime1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime2Null() {
                return this.IsNull(this.tablecasehistory.caseDateTime2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime2Null() {
                this[this.tablecasehistory.caseDateTime2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime3Null() {
                return this.IsNull(this.tablecasehistory.caseDateTime3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime3Null() {
                this[this.tablecasehistory.caseDateTime3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseForwardedCCNull() {
                return this.IsNull(this.tablecasehistory.caseForwardedCCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseForwardedCCNull() {
                this[this.tablecasehistory.caseForwardedCCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscasePrevStatusIdNull() {
                return this.IsNull(this.tablecasehistory.casePrevStatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcasePrevStatusIdNull() {
                this[this.tablecasehistory.casePrevStatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscasePrevOwnerIdNull() {
                return this.IsNull(this.tablecasehistory.casePrevOwnerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcasePrevOwnerIdNull() {
                this[this.tablecasehistory.casePrevOwnerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNextStatusIdNull() {
                return this.IsNull(this.tablecasehistory.caseNextStatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNextStatusIdNull() {
                this[this.tablecasehistory.caseNextStatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNextOwnerIdNull() {
                return this.IsNull(this.tablecasehistory.caseNextOwnerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNextOwnerIdNull() {
                this[this.tablecasehistory.caseNextOwnerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseIsClosedNull() {
                return this.IsNull(this.tablecasehistory.caseIsClosedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseIsClosedNull() {
                this[this.tablecasehistory.caseIsClosedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber4Null() {
                return this.IsNull(this.tablecasehistory.caseNumber4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber4Null() {
                this[this.tablecasehistory.caseNumber4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber5Null() {
                return this.IsNull(this.tablecasehistory.caseNumber5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber5Null() {
                this[this.tablecasehistory.caseNumber5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber6Null() {
                return this.IsNull(this.tablecasehistory.caseNumber6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber6Null() {
                this[this.tablecasehistory.caseNumber6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber7Null() {
                return this.IsNull(this.tablecasehistory.caseNumber7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber7Null() {
                this[this.tablecasehistory.caseNumber7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber8Null() {
                return this.IsNull(this.tablecasehistory.caseNumber8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber8Null() {
                this[this.tablecasehistory.caseNumber8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber9Null() {
                return this.IsNull(this.tablecasehistory.caseNumber9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber9Null() {
                this[this.tablecasehistory.caseNumber9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber10Null() {
                return this.IsNull(this.tablecasehistory.caseNumber10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber10Null() {
                this[this.tablecasehistory.caseNumber10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar4Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar4Null() {
                this[this.tablecasehistory.caseVarchar4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar5Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar5Null() {
                this[this.tablecasehistory.caseVarchar5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar6Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar6Null() {
                this[this.tablecasehistory.caseVarchar6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar7Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar7Null() {
                this[this.tablecasehistory.caseVarchar7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar8Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar8Null() {
                this[this.tablecasehistory.caseVarchar8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar9Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar9Null() {
                this[this.tablecasehistory.caseVarchar9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar10Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar10Null() {
                this[this.tablecasehistory.caseVarchar10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar11Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar11Null() {
                this[this.tablecasehistory.caseVarchar11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar12Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar12Null() {
                this[this.tablecasehistory.caseVarchar12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar13Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar13Null() {
                this[this.tablecasehistory.caseVarchar13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar14Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar14Null() {
                this[this.tablecasehistory.caseVarchar14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar15Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar15Null() {
                this[this.tablecasehistory.caseVarchar15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar16Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar16Null() {
                this[this.tablecasehistory.caseVarchar16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar17Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar17Null() {
                this[this.tablecasehistory.caseVarchar17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar18Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar18Null() {
                this[this.tablecasehistory.caseVarchar18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar19Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar19Null() {
                this[this.tablecasehistory.caseVarchar19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar20Null() {
                return this.IsNull(this.tablecasehistory.caseVarchar20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar20Null() {
                this[this.tablecasehistory.caseVarchar20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime4Null() {
                return this.IsNull(this.tablecasehistory.caseDateTime4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime4Null() {
                this[this.tablecasehistory.caseDateTime4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime5Null() {
                return this.IsNull(this.tablecasehistory.caseDateTime5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime5Null() {
                this[this.tablecasehistory.caseDateTime5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime6Null() {
                return this.IsNull(this.tablecasehistory.caseDateTime6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime6Null() {
                this[this.tablecasehistory.caseDateTime6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime7Null() {
                return this.IsNull(this.tablecasehistory.caseDateTime7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime7Null() {
                this[this.tablecasehistory.caseDateTime7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime8Null() {
                return this.IsNull(this.tablecasehistory.caseDateTime8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime8Null() {
                this[this.tablecasehistory.caseDateTime8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime9Null() {
                return this.IsNull(this.tablecasehistory.caseDateTime9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime9Null() {
                this[this.tablecasehistory.caseDateTime9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime10Null() {
                return this.IsNull(this.tablecasehistory.caseDateTime10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime10Null() {
                this[this.tablecasehistory.caseDateTime10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText4Null() {
                return this.IsNull(this.tablecasehistory.caseText4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText4Null() {
                this[this.tablecasehistory.caseText4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText5Null() {
                return this.IsNull(this.tablecasehistory.caseText5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText5Null() {
                this[this.tablecasehistory.caseText5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText6Null() {
                return this.IsNull(this.tablecasehistory.caseText6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText6Null() {
                this[this.tablecasehistory.caseText6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText7Null() {
                return this.IsNull(this.tablecasehistory.caseText7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText7Null() {
                this[this.tablecasehistory.caseText7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText8Null() {
                return this.IsNull(this.tablecasehistory.caseText8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText8Null() {
                this[this.tablecasehistory.caseText8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText9Null() {
                return this.IsNull(this.tablecasehistory.caseText9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText9Null() {
                this[this.tablecasehistory.caseText9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText10Null() {
                return this.IsNull(this.tablecasehistory.caseText10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText10Null() {
                this[this.tablecasehistory.caseText10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseReceivedFromIdNull() {
                return this.IsNull(this.tablecasehistory.caseReceivedFromIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseReceivedFromIdNull() {
                this[this.tablecasehistory.caseReceivedFromIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseReceivedNull() {
                return this.IsNull(this.tablecasehistory.caseReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseReceivedNull() {
                this[this.tablecasehistory.caseReceivedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class casehistorydetailsRow : global::System.Data.DataRow {
            
            private casehistorydetailsDataTable tablecasehistorydetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal casehistorydetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecasehistorydetails = ((casehistorydetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseId {
                get {
                    return ((int)(this[this.tablecasehistorydetails.caseIdColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseTitle {
                get {
                    return ((string)(this[this.tablecasehistorydetails.caseTitleColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseOwnerId {
                get {
                    return ((int)(this[this.tablecasehistorydetails.caseOwnerIdColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseOwnerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseCreated {
                get {
                    return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseCreatedColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseCreatedById {
                get {
                    return ((int)(this[this.tablecasehistorydetails.caseCreatedByIdColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseCreatedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseModified {
                get {
                    return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseModifiedColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseModifiedById {
                get {
                    return ((int)(this[this.tablecasehistorydetails.caseModifiedByIdColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseModifiedByIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseProcedureId {
                get {
                    return ((int)(this[this.tablecasehistorydetails.caseProcedureIdColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseProcedureIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseStatusId {
                get {
                    try {
                        return ((int)(this[this.tablecasehistorydetails.caseStatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseStatusId\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseStatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseSubversion {
                get {
                    return ((int)(this[this.tablecasehistorydetails.caseSubversionColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseSubversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseVersion {
                get {
                    return ((int)(this[this.tablecasehistorydetails.caseVersionColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar1 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar1\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar2 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar2\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar3 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar3\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText1 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseText1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText1\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseText1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText2 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseText2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText2\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseText2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText3 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseText3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText3\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseText3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber1 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistorydetails.caseNumber1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber1\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseNumber1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber2 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistorydetails.caseNumber2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber2\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseNumber2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber3 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistorydetails.caseNumber3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber3\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseNumber3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseDateTime1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime1\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseDateTime1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseDateTime2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime2\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseDateTime2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseDateTime3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime3\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseDateTime3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseForwardedCC {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseForwardedCCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseForwardedCC\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseForwardedCCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong caseIsClosed {
                get {
                    try {
                        return ((ulong)(this[this.tablecasehistorydetails.caseIsClosedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseIsClosed\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseIsClosedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber4 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistorydetails.caseNumber4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber4\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseNumber4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber5 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistorydetails.caseNumber5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber5\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseNumber5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber6 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistorydetails.caseNumber6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber6\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseNumber6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber7 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistorydetails.caseNumber7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber7\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseNumber7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber8 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistorydetails.caseNumber8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber8\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseNumber8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber9 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistorydetails.caseNumber9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber9\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseNumber9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal caseNumber10 {
                get {
                    try {
                        return ((decimal)(this[this.tablecasehistorydetails.caseNumber10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseNumber10\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseNumber10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar4 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar4\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar5 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar5\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar6 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar6\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar7 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar7\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar8 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar8\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar9 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar9\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar10 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar10\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar11 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar11\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar12 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar12\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar13 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar13\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar14 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar14\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar15 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar15\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar16 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar16\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar17 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar17\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar18 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar18\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar19 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar19\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseVarchar20 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseVarchar20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseVarchar20\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseVarchar20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime4 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseDateTime4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime4\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseDateTime4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime5 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseDateTime5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime5\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseDateTime5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime6 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseDateTime6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime6\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseDateTime6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime7 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseDateTime7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime7\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseDateTime7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime8 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseDateTime8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime8\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseDateTime8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime9 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseDateTime9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime9\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseDateTime9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime caseDateTime10 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecasehistorydetails.caseDateTime10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseDateTime10\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseDateTime10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText4 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseText4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText4\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseText4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText5 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseText5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText5\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseText5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText6 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseText6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText6\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseText6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText7 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseText7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText7\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseText7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText8 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseText8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText8\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseText8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText9 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseText9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText9\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseText9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string caseText10 {
                get {
                    try {
                        return ((string)(this[this.tablecasehistorydetails.caseText10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseText10\' in table \'casehistorydetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasehistorydetails.caseText10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseHistDetId {
                get {
                    return ((int)(this[this.tablecasehistorydetails.caseHistDetIdColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseHistDetIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseHistId {
                get {
                    return ((int)(this[this.tablecasehistorydetails.caseHistIdColumn]));
                }
                set {
                    this[this.tablecasehistorydetails.caseHistIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByAuthorHD {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["AuthorHD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["AuthorHD"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow casedefinitionRow {
                get {
                    return ((casedefinitionRow)(this.GetParentRow(this.Table.ParentRelations["CaseHistDetCaseId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CaseHistDetCaseId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByEditorHD {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["EditorHD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EditorHD"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowByOwnerHD {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["OwnerHD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["OwnerHD"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseStatusIdNull() {
                return this.IsNull(this.tablecasehistorydetails.caseStatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseStatusIdNull() {
                this[this.tablecasehistorydetails.caseStatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar1Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar1Null() {
                this[this.tablecasehistorydetails.caseVarchar1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar2Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar2Null() {
                this[this.tablecasehistorydetails.caseVarchar2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar3Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar3Null() {
                this[this.tablecasehistorydetails.caseVarchar3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText1Null() {
                return this.IsNull(this.tablecasehistorydetails.caseText1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText1Null() {
                this[this.tablecasehistorydetails.caseText1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText2Null() {
                return this.IsNull(this.tablecasehistorydetails.caseText2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText2Null() {
                this[this.tablecasehistorydetails.caseText2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText3Null() {
                return this.IsNull(this.tablecasehistorydetails.caseText3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText3Null() {
                this[this.tablecasehistorydetails.caseText3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber1Null() {
                return this.IsNull(this.tablecasehistorydetails.caseNumber1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber1Null() {
                this[this.tablecasehistorydetails.caseNumber1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber2Null() {
                return this.IsNull(this.tablecasehistorydetails.caseNumber2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber2Null() {
                this[this.tablecasehistorydetails.caseNumber2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber3Null() {
                return this.IsNull(this.tablecasehistorydetails.caseNumber3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber3Null() {
                this[this.tablecasehistorydetails.caseNumber3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime1Null() {
                return this.IsNull(this.tablecasehistorydetails.caseDateTime1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime1Null() {
                this[this.tablecasehistorydetails.caseDateTime1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime2Null() {
                return this.IsNull(this.tablecasehistorydetails.caseDateTime2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime2Null() {
                this[this.tablecasehistorydetails.caseDateTime2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime3Null() {
                return this.IsNull(this.tablecasehistorydetails.caseDateTime3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime3Null() {
                this[this.tablecasehistorydetails.caseDateTime3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseForwardedCCNull() {
                return this.IsNull(this.tablecasehistorydetails.caseForwardedCCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseForwardedCCNull() {
                this[this.tablecasehistorydetails.caseForwardedCCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseIsClosedNull() {
                return this.IsNull(this.tablecasehistorydetails.caseIsClosedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseIsClosedNull() {
                this[this.tablecasehistorydetails.caseIsClosedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber4Null() {
                return this.IsNull(this.tablecasehistorydetails.caseNumber4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber4Null() {
                this[this.tablecasehistorydetails.caseNumber4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber5Null() {
                return this.IsNull(this.tablecasehistorydetails.caseNumber5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber5Null() {
                this[this.tablecasehistorydetails.caseNumber5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber6Null() {
                return this.IsNull(this.tablecasehistorydetails.caseNumber6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber6Null() {
                this[this.tablecasehistorydetails.caseNumber6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber7Null() {
                return this.IsNull(this.tablecasehistorydetails.caseNumber7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber7Null() {
                this[this.tablecasehistorydetails.caseNumber7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber8Null() {
                return this.IsNull(this.tablecasehistorydetails.caseNumber8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber8Null() {
                this[this.tablecasehistorydetails.caseNumber8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber9Null() {
                return this.IsNull(this.tablecasehistorydetails.caseNumber9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber9Null() {
                this[this.tablecasehistorydetails.caseNumber9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseNumber10Null() {
                return this.IsNull(this.tablecasehistorydetails.caseNumber10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseNumber10Null() {
                this[this.tablecasehistorydetails.caseNumber10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar4Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar4Null() {
                this[this.tablecasehistorydetails.caseVarchar4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar5Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar5Null() {
                this[this.tablecasehistorydetails.caseVarchar5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar6Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar6Null() {
                this[this.tablecasehistorydetails.caseVarchar6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar7Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar7Null() {
                this[this.tablecasehistorydetails.caseVarchar7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar8Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar8Null() {
                this[this.tablecasehistorydetails.caseVarchar8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar9Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar9Null() {
                this[this.tablecasehistorydetails.caseVarchar9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar10Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar10Null() {
                this[this.tablecasehistorydetails.caseVarchar10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar11Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar11Null() {
                this[this.tablecasehistorydetails.caseVarchar11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar12Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar12Null() {
                this[this.tablecasehistorydetails.caseVarchar12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar13Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar13Null() {
                this[this.tablecasehistorydetails.caseVarchar13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar14Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar14Null() {
                this[this.tablecasehistorydetails.caseVarchar14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar15Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar15Null() {
                this[this.tablecasehistorydetails.caseVarchar15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar16Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar16Null() {
                this[this.tablecasehistorydetails.caseVarchar16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar17Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar17Null() {
                this[this.tablecasehistorydetails.caseVarchar17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar18Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar18Null() {
                this[this.tablecasehistorydetails.caseVarchar18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar19Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar19Null() {
                this[this.tablecasehistorydetails.caseVarchar19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseVarchar20Null() {
                return this.IsNull(this.tablecasehistorydetails.caseVarchar20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseVarchar20Null() {
                this[this.tablecasehistorydetails.caseVarchar20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime4Null() {
                return this.IsNull(this.tablecasehistorydetails.caseDateTime4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime4Null() {
                this[this.tablecasehistorydetails.caseDateTime4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime5Null() {
                return this.IsNull(this.tablecasehistorydetails.caseDateTime5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime5Null() {
                this[this.tablecasehistorydetails.caseDateTime5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime6Null() {
                return this.IsNull(this.tablecasehistorydetails.caseDateTime6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime6Null() {
                this[this.tablecasehistorydetails.caseDateTime6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime7Null() {
                return this.IsNull(this.tablecasehistorydetails.caseDateTime7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime7Null() {
                this[this.tablecasehistorydetails.caseDateTime7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime8Null() {
                return this.IsNull(this.tablecasehistorydetails.caseDateTime8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime8Null() {
                this[this.tablecasehistorydetails.caseDateTime8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime9Null() {
                return this.IsNull(this.tablecasehistorydetails.caseDateTime9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime9Null() {
                this[this.tablecasehistorydetails.caseDateTime9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseDateTime10Null() {
                return this.IsNull(this.tablecasehistorydetails.caseDateTime10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseDateTime10Null() {
                this[this.tablecasehistorydetails.caseDateTime10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText4Null() {
                return this.IsNull(this.tablecasehistorydetails.caseText4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText4Null() {
                this[this.tablecasehistorydetails.caseText4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText5Null() {
                return this.IsNull(this.tablecasehistorydetails.caseText5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText5Null() {
                this[this.tablecasehistorydetails.caseText5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText6Null() {
                return this.IsNull(this.tablecasehistorydetails.caseText6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText6Null() {
                this[this.tablecasehistorydetails.caseText6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText7Null() {
                return this.IsNull(this.tablecasehistorydetails.caseText7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText7Null() {
                this[this.tablecasehistorydetails.caseText7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText8Null() {
                return this.IsNull(this.tablecasehistorydetails.caseText8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText8Null() {
                this[this.tablecasehistorydetails.caseText8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText9Null() {
                return this.IsNull(this.tablecasehistorydetails.caseText9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText9Null() {
                this[this.tablecasehistorydetails.caseText9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseText10Null() {
                return this.IsNull(this.tablecasehistorydetails.caseText10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseText10Null() {
                this[this.tablecasehistorydetails.caseText10Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class caseparamRow : global::System.Data.DataRow {
            
            private caseparamDataTable tablecaseparam;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal caseparamRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecaseparam = ((caseparamDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int parId {
                get {
                    return ((int)(this[this.tablecaseparam.parIdColumn]));
                }
                set {
                    this[this.tablecaseparam.parIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string parTitle {
                get {
                    return ((string)(this[this.tablecaseparam.parTitleColumn]));
                }
                set {
                    this[this.tablecaseparam.parTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int parType {
                get {
                    try {
                        return ((int)(this[this.tablecaseparam.parTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parType\' in table \'caseparam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecaseparam.parTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsparTypeNull() {
                return this.IsNull(this.tablecaseparam.parTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetparTypeNull() {
                this[this.tablecaseparam.parTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class casereadedRow : global::System.Data.DataRow {
            
            private casereadedDataTable tablecasereaded;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal casereadedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecasereaded = ((casereadedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int crdUserId {
                get {
                    return ((int)(this[this.tablecasereaded.crdUserIdColumn]));
                }
                set {
                    this[this.tablecasereaded.crdUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int crdCaseId {
                get {
                    return ((int)(this[this.tablecasereaded.crdCaseIdColumn]));
                }
                set {
                    this[this.tablecasereaded.crdCaseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte crdReaded {
                get {
                    try {
                        return ((sbyte)(this[this.tablecasereaded.crdReadedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'crdReaded\' in table \'casereaded\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecasereaded.crdReadedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow casedefinitionRow {
                get {
                    return ((casedefinitionRow)(this.GetParentRow(this.Table.ParentRelations["ReadedCaseId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ReadedCaseId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscrdReadedNull() {
                return this.IsNull(this.tablecasereaded.crdReadedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcrdReadedNull() {
                this[this.tablecasereaded.crdReadedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class decisiontreeRow : global::System.Data.DataRow {
            
            private decisiontreeDataTable tabledecisiontree;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal decisiontreeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledecisiontree = ((decisiontreeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int treeUserId {
                get {
                    return ((int)(this[this.tabledecisiontree.treeUserIdColumn]));
                }
                set {
                    this[this.tabledecisiontree.treeUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int treeStageId {
                get {
                    return ((int)(this[this.tabledecisiontree.treeStageIdColumn]));
                }
                set {
                    this[this.tabledecisiontree.treeStageIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string treeSerialized {
                get {
                    try {
                        return ((string)(this[this.tabledecisiontree.treeSerializedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'treeSerialized\' in table \'decisiontree\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecisiontree.treeSerializedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int treeProcedureId {
                get {
                    return ((int)(this[this.tabledecisiontree.treeProcedureIdColumn]));
                }
                set {
                    this[this.tabledecisiontree.treeProcedureIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string treeType {
                get {
                    return ((string)(this[this.tabledecisiontree.treeTypeColumn]));
                }
                set {
                    this[this.tabledecisiontree.treeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstreeSerializedNull() {
                return this.IsNull(this.tabledecisiontree.treeSerializedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettreeSerializedNull() {
                this[this.tabledecisiontree.treeSerializedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class departmentRow : global::System.Data.DataRow {
            
            private departmentDataTable tabledepartment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal departmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledepartment = ((departmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int departId {
                get {
                    return ((int)(this[this.tabledepartment.departIdColumn]));
                }
                set {
                    this[this.tabledepartment.departIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string departName {
                get {
                    try {
                        return ((string)(this[this.tabledepartment.departNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'departName\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.departNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int departManagerId {
                get {
                    try {
                        return ((int)(this[this.tabledepartment.departManagerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'departManagerId\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.departManagerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int departParentId {
                get {
                    try {
                        return ((int)(this[this.tabledepartment.departParentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'departParentId\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.departParentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRow {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["departManagerId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["departManagerId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentRow departmentRowParent {
                get {
                    return ((departmentRow)(this.GetParentRow(this.Table.ParentRelations["departParentId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["departParentId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdepartNameNull() {
                return this.IsNull(this.tabledepartment.departNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdepartNameNull() {
                this[this.tabledepartment.departNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdepartManagerIdNull() {
                return this.IsNull(this.tabledepartment.departManagerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdepartManagerIdNull() {
                this[this.tabledepartment.departManagerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdepartParentIdNull() {
                return this.IsNull(this.tabledepartment.departParentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdepartParentIdNull() {
                this[this.tabledepartment.departParentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentRow[] GetdepartmentRows() {
                if ((this.Table.ChildRelations["departParentId"] == null)) {
                    return new departmentRow[0];
                }
                else {
                    return ((departmentRow[])(base.GetChildRows(this.Table.ChildRelations["departParentId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow[] GetworkflowuserRows() {
                if ((this.Table.ChildRelations["Department"] == null)) {
                    return new workflowuserRow[0];
                }
                else {
                    return ((workflowuserRow[])(base.GetChildRows(this.Table.ChildRelations["Department"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ftsearchdataRow : global::System.Data.DataRow {
            
            private ftsearchdataDataTable tableftsearchdata;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ftsearchdataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableftsearchdata = ((ftsearchdataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ftsText {
                get {
                    try {
                        return ((string)(this[this.tableftsearchdata.ftsTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ftsText\' in table \'ftsearchdata\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableftsearchdata.ftsTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ftsType {
                get {
                    return ((string)(this[this.tableftsearchdata.ftsTypeColumn]));
                }
                set {
                    this[this.tableftsearchdata.ftsTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ftsObjId {
                get {
                    return ((int)(this[this.tableftsearchdata.ftsObjIdColumn]));
                }
                set {
                    this[this.tableftsearchdata.ftsObjIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ftsCaseId {
                get {
                    try {
                        return ((int)(this[this.tableftsearchdata.ftsCaseIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ftsCaseId\' in table \'ftsearchdata\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableftsearchdata.ftsCaseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ftsProcTitle {
                get {
                    try {
                        return ((string)(this[this.tableftsearchdata.ftsProcTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ftsProcTitle\' in table \'ftsearchdata\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableftsearchdata.ftsProcTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ftsCaseTitle {
                get {
                    try {
                        return ((string)(this[this.tableftsearchdata.ftsCaseTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ftsCaseTitle\' in table \'ftsearchdata\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableftsearchdata.ftsCaseTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ftsAttTitle {
                get {
                    try {
                        return ((string)(this[this.tableftsearchdata.ftsAttTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ftsAttTitle\' in table \'ftsearchdata\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableftsearchdata.ftsAttTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ftsModified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableftsearchdata.ftsModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ftsModified\' in table \'ftsearchdata\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableftsearchdata.ftsModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ftsProcId {
                get {
                    try {
                        return ((int)(this[this.tableftsearchdata.ftsProcIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ftsProcId\' in table \'ftsearchdata\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableftsearchdata.ftsProcIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ftsCaseHistId {
                get {
                    try {
                        return ((int)(this[this.tableftsearchdata.ftsCaseHistIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ftsCaseHistId\' in table \'ftsearchdata\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableftsearchdata.ftsCaseHistIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsftsTextNull() {
                return this.IsNull(this.tableftsearchdata.ftsTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetftsTextNull() {
                this[this.tableftsearchdata.ftsTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsftsCaseIdNull() {
                return this.IsNull(this.tableftsearchdata.ftsCaseIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetftsCaseIdNull() {
                this[this.tableftsearchdata.ftsCaseIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsftsProcTitleNull() {
                return this.IsNull(this.tableftsearchdata.ftsProcTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetftsProcTitleNull() {
                this[this.tableftsearchdata.ftsProcTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsftsCaseTitleNull() {
                return this.IsNull(this.tableftsearchdata.ftsCaseTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetftsCaseTitleNull() {
                this[this.tableftsearchdata.ftsCaseTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsftsAttTitleNull() {
                return this.IsNull(this.tableftsearchdata.ftsAttTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetftsAttTitleNull() {
                this[this.tableftsearchdata.ftsAttTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsftsModifiedNull() {
                return this.IsNull(this.tableftsearchdata.ftsModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetftsModifiedNull() {
                this[this.tableftsearchdata.ftsModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsftsProcIdNull() {
                return this.IsNull(this.tableftsearchdata.ftsProcIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetftsProcIdNull() {
                this[this.tableftsearchdata.ftsProcIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsftsCaseHistIdNull() {
                return this.IsNull(this.tableftsearchdata.ftsCaseHistIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetftsCaseHistIdNull() {
                this[this.tableftsearchdata.ftsCaseHistIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class mailtemplatesRow : global::System.Data.DataRow {
            
            private mailtemplatesDataTable tablemailtemplates;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal mailtemplatesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemailtemplates = ((mailtemplatesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int mailId {
                get {
                    return ((int)(this[this.tablemailtemplates.mailIdColumn]));
                }
                set {
                    this[this.tablemailtemplates.mailIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mailTemplate {
                get {
                    try {
                        return ((string)(this[this.tablemailtemplates.mailTemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mailTemplate\' in table \'mailtemplates\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemailtemplates.mailTemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mailLanguage {
                get {
                    try {
                        return ((string)(this[this.tablemailtemplates.mailLanguageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mailLanguage\' in table \'mailtemplates\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemailtemplates.mailLanguageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mailSubject {
                get {
                    try {
                        return ((string)(this[this.tablemailtemplates.mailSubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mailSubject\' in table \'mailtemplates\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemailtemplates.mailSubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string mailMessage {
                get {
                    try {
                        return ((string)(this[this.tablemailtemplates.mailMessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mailMessage\' in table \'mailtemplates\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemailtemplates.mailMessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public sbyte mailHTML {
                get {
                    try {
                        return ((sbyte)(this[this.tablemailtemplates.mailHTMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mailHTML\' in table \'mailtemplates\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemailtemplates.mailHTMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmailTemplateNull() {
                return this.IsNull(this.tablemailtemplates.mailTemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmailTemplateNull() {
                this[this.tablemailtemplates.mailTemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmailLanguageNull() {
                return this.IsNull(this.tablemailtemplates.mailLanguageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmailLanguageNull() {
                this[this.tablemailtemplates.mailLanguageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmailSubjectNull() {
                return this.IsNull(this.tablemailtemplates.mailSubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmailSubjectNull() {
                this[this.tablemailtemplates.mailSubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmailMessageNull() {
                return this.IsNull(this.tablemailtemplates.mailMessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmailMessageNull() {
                this[this.tablemailtemplates.mailMessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmailHTMLNull() {
                return this.IsNull(this.tablemailtemplates.mailHTMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmailHTMLNull() {
                this[this.tablemailtemplates.mailHTMLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class nextprocedurestatusRow : global::System.Data.DataRow {
            
            private nextprocedurestatusDataTable tablenextprocedurestatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal nextprocedurestatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablenextprocedurestatus = ((nextprocedurestatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int npstToProcStatus {
                get {
                    return ((int)(this[this.tablenextprocedurestatus.npstToProcStatusColumn]));
                }
                set {
                    this[this.tablenextprocedurestatus.npstToProcStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int npstFromProcStatus {
                get {
                    return ((int)(this[this.tablenextprocedurestatus.npstFromProcStatusColumn]));
                }
                set {
                    this[this.tablenextprocedurestatus.npstFromProcStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRow procedurestatusRowByProcStatusFromId {
                get {
                    return ((procedurestatusRow)(this.GetParentRow(this.Table.ParentRelations["ProcStatusFromId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ProcStatusFromId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRow procedurestatusRowByProcStatusToId {
                get {
                    return ((procedurestatusRow)(this.GetParentRow(this.Table.ParentRelations["ProcStatusToId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ProcStatusToId"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class notificationRow : global::System.Data.DataRow {
            
            private notificationDataTable tablenotification;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal notificationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablenotification = ((notificationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int notId {
                get {
                    return ((int)(this[this.tablenotification.notIdColumn]));
                }
                set {
                    this[this.tablenotification.notIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notSubject {
                get {
                    try {
                        return ((string)(this[this.tablenotification.notSubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notSubject\' in table \'notification\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenotification.notSubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notBody {
                get {
                    try {
                        return ((string)(this[this.tablenotification.notBodyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notBody\' in table \'notification\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenotification.notBodyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notFrom {
                get {
                    try {
                        return ((string)(this[this.tablenotification.notFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notFrom\' in table \'notification\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenotification.notFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notTo {
                get {
                    try {
                        return ((string)(this[this.tablenotification.notToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notTo\' in table \'notification\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenotification.notToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool notBodyHtml {
                get {
                    try {
                        return ((bool)(this[this.tablenotification.notBodyHtmlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notBodyHtml\' in table \'notification\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenotification.notBodyHtmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notFromU {
                get {
                    try {
                        return ((string)(this[this.tablenotification.notFromUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notFromU\' in table \'notification\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenotification.notFromUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string notPassword {
                get {
                    try {
                        return ((string)(this[this.tablenotification.notPasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notPassword\' in table \'notification\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenotification.notPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int notPort {
                get {
                    try {
                        return ((int)(this[this.tablenotification.notPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notPort\' in table \'notification\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenotification.notPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime notAdded {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablenotification.notAddedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notAdded\' in table \'notification\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenotification.notAddedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime notSended {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablenotification.notSendedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notSended\' in table \'notification\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenotification.notSendedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotSubjectNull() {
                return this.IsNull(this.tablenotification.notSubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotSubjectNull() {
                this[this.tablenotification.notSubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotBodyNull() {
                return this.IsNull(this.tablenotification.notBodyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotBodyNull() {
                this[this.tablenotification.notBodyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotFromNull() {
                return this.IsNull(this.tablenotification.notFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotFromNull() {
                this[this.tablenotification.notFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotToNull() {
                return this.IsNull(this.tablenotification.notToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotToNull() {
                this[this.tablenotification.notToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotBodyHtmlNull() {
                return this.IsNull(this.tablenotification.notBodyHtmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotBodyHtmlNull() {
                this[this.tablenotification.notBodyHtmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotFromUNull() {
                return this.IsNull(this.tablenotification.notFromUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotFromUNull() {
                this[this.tablenotification.notFromUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotPasswordNull() {
                return this.IsNull(this.tablenotification.notPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotPasswordNull() {
                this[this.tablenotification.notPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotPortNull() {
                return this.IsNull(this.tablenotification.notPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotPortNull() {
                this[this.tablenotification.notPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotAddedNull() {
                return this.IsNull(this.tablenotification.notAddedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotAddedNull() {
                this[this.tablenotification.notAddedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnotSendedNull() {
                return this.IsNull(this.tablenotification.notSendedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnotSendedNull() {
                this[this.tablenotification.notSendedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class parametersRow : global::System.Data.DataRow {
            
            private parametersDataTable tableparameters;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal parametersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableparameters = ((parametersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int parId {
                get {
                    return ((int)(this[this.tableparameters.parIdColumn]));
                }
                set {
                    this[this.tableparameters.parIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string parName {
                get {
                    return ((string)(this[this.tableparameters.parNameColumn]));
                }
                set {
                    this[this.tableparameters.parNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string parValue {
                get {
                    try {
                        return ((string)(this[this.tableparameters.parValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parValue\' in table \'parameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableparameters.parValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string parDescription {
                get {
                    try {
                        return ((string)(this[this.tableparameters.parDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parDescription\' in table \'parameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableparameters.parDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsparValueNull() {
                return this.IsNull(this.tableparameters.parValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetparValueNull() {
                this[this.tableparameters.parValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsparDescriptionNull() {
                return this.IsNull(this.tableparameters.parDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetparDescriptionNull() {
                this[this.tableparameters.parDescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class proceduredefinitionRow : global::System.Data.DataRow {
            
            private proceduredefinitionDataTable tableproceduredefinition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proceduredefinitionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproceduredefinition = ((proceduredefinitionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int prcId {
                get {
                    return ((int)(this[this.tableproceduredefinition.prcIdColumn]));
                }
                set {
                    this[this.tableproceduredefinition.prcIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prcTitle {
                get {
                    return ((string)(this[this.tableproceduredefinition.prcTitleColumn]));
                }
                set {
                    this[this.tableproceduredefinition.prcTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string prcTitlePlural {
                get {
                    try {
                        return ((string)(this[this.tableproceduredefinition.prcTitlePluralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prcTitlePlural\' in table \'proceduredefinition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproceduredefinition.prcTitlePluralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int prcDefaultMode {
                get {
                    return ((int)(this[this.tableproceduredefinition.prcDefaultModeColumn]));
                }
                set {
                    this[this.tableproceduredefinition.prcDefaultModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int prcDynamicNewStages {
                get {
                    return ((int)(this[this.tableproceduredefinition.prcDynamicNewStagesColumn]));
                }
                set {
                    this[this.tableproceduredefinition.prcDynamicNewStagesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int prcNewParamsByUser {
                get {
                    return ((int)(this[this.tableproceduredefinition.prcNewParamsByUserColumn]));
                }
                set {
                    this[this.tableproceduredefinition.prcNewParamsByUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprcTitlePluralNull() {
                return this.IsNull(this.tableproceduredefinition.prcTitlePluralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprcTitlePluralNull() {
                this[this.tableproceduredefinition.prcTitlePluralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseappsRow[] GetcaseappsRows() {
                if ((this.Table.ChildRelations["appProcedureFK"] == null)) {
                    return new caseappsRow[0];
                }
                else {
                    return ((caseappsRow[])(base.GetChildRows(this.Table.ChildRelations["appProcedureFK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow[] GetcasedefinitionRows() {
                if ((this.Table.ChildRelations["caseProcedureIdFK"] == null)) {
                    return new casedefinitionRow[0];
                }
                else {
                    return ((casedefinitionRow[])(base.GetChildRows(this.Table.ChildRelations["caseProcedureIdFK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedureparamRow[] GetprocedureparamRows() {
                if ((this.Table.ChildRelations["ParamProcedureId"] == null)) {
                    return new procedureparamRow[0];
                }
                else {
                    return ((procedureparamRow[])(base.GetChildRows(this.Table.ChildRelations["ParamProcedureId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRow[] GetprocedurestatusRows() {
                if ((this.Table.ChildRelations["ProcStatusProcedureId"] == null)) {
                    return new procedurestatusRow[0];
                }
                else {
                    return ((procedurestatusRow[])(base.GetChildRows(this.Table.ChildRelations["ProcStatusProcedureId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class procedureparamRow : global::System.Data.DataRow {
            
            private procedureparamDataTable tableprocedureparam;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal procedureparamRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableprocedureparam = ((procedureparamDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ppaId {
                get {
                    return ((int)(this[this.tableprocedureparam.ppaIdColumn]));
                }
                set {
                    this[this.tableprocedureparam.ppaIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ppaIndex {
                get {
                    return ((int)(this[this.tableprocedureparam.ppaIndexColumn]));
                }
                set {
                    this[this.tableprocedureparam.ppaIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ppaProcedureId {
                get {
                    return ((int)(this[this.tableprocedureparam.ppaProcedureIdColumn]));
                }
                set {
                    this[this.tableprocedureparam.ppaProcedureIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ppaCaseParamId {
                get {
                    return ((int)(this[this.tableprocedureparam.ppaCaseParamIdColumn]));
                }
                set {
                    this[this.tableprocedureparam.ppaCaseParamIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong ppaIsImportant {
                get {
                    try {
                        return ((ulong)(this[this.tableprocedureparam.ppaIsImportantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppaIsImportant\' in table \'procedureparam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocedureparam.ppaIsImportantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ppaFieldName {
                get {
                    return ((string)(this[this.tableprocedureparam.ppaFieldNameColumn]));
                }
                set {
                    this[this.tableprocedureparam.ppaFieldNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ppaType {
                get {
                    return ((int)(this[this.tableprocedureparam.ppaTypeColumn]));
                }
                set {
                    this[this.tableprocedureparam.ppaTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ppaParamTitle {
                get {
                    try {
                        return ((string)(this[this.tableprocedureparam.ppaParamTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppaParamTitle\' in table \'procedureparam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocedureparam.ppaParamTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ppaSectionName {
                get {
                    try {
                        return ((string)(this[this.tableprocedureparam.ppaSectionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppaSectionName\' in table \'procedureparam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocedureparam.ppaSectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong ppaActive {
                get {
                    try {
                        return ((ulong)(this[this.tableprocedureparam.ppaActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppaActive\' in table \'procedureparam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocedureparam.ppaActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionRow proceduredefinitionRow {
                get {
                    return ((proceduredefinitionRow)(this.GetParentRow(this.Table.ParentRelations["ParamProcedureId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ParamProcedureId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsppaIsImportantNull() {
                return this.IsNull(this.tableprocedureparam.ppaIsImportantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetppaIsImportantNull() {
                this[this.tableprocedureparam.ppaIsImportantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsppaParamTitleNull() {
                return this.IsNull(this.tableprocedureparam.ppaParamTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetppaParamTitleNull() {
                this[this.tableprocedureparam.ppaParamTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsppaSectionNameNull() {
                return this.IsNull(this.tableprocedureparam.ppaSectionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetppaSectionNameNull() {
                this[this.tableprocedureparam.ppaSectionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsppaActiveNull() {
                return this.IsNull(this.tableprocedureparam.ppaActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetppaActiveNull() {
                this[this.tableprocedureparam.ppaActiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class procedurestatusRow : global::System.Data.DataRow {
            
            private procedurestatusDataTable tableprocedurestatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal procedurestatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableprocedurestatus = ((procedurestatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pstId {
                get {
                    return ((int)(this[this.tableprocedurestatus.pstIdColumn]));
                }
                set {
                    this[this.tableprocedurestatus.pstIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pstProcedureId {
                get {
                    return ((int)(this[this.tableprocedurestatus.pstProcedureIdColumn]));
                }
                set {
                    this[this.tableprocedurestatus.pstProcedureIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pstTitle {
                get {
                    return ((string)(this[this.tableprocedurestatus.pstTitleColumn]));
                }
                set {
                    this[this.tableprocedurestatus.pstTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pstIndex {
                get {
                    try {
                        return ((int)(this[this.tableprocedurestatus.pstIndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pstIndex\' in table \'procedurestatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocedurestatus.pstIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pstMode {
                get {
                    try {
                        return ((int)(this[this.tableprocedurestatus.pstModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pstMode\' in table \'procedurestatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocedurestatus.pstModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong pstAllUsersAllowed {
                get {
                    return ((ulong)(this[this.tableprocedurestatus.pstAllUsersAllowedColumn]));
                }
                set {
                    this[this.tableprocedurestatus.pstAllUsersAllowedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong pstCanStart {
                get {
                    return ((ulong)(this[this.tableprocedurestatus.pstCanStartColumn]));
                }
                set {
                    this[this.tableprocedurestatus.pstCanStartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong pstCanEnd {
                get {
                    return ((ulong)(this[this.tableprocedurestatus.pstCanEndColumn]));
                }
                set {
                    this[this.tableprocedurestatus.pstCanEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionRow proceduredefinitionRow {
                get {
                    return ((proceduredefinitionRow)(this.GetParentRow(this.Table.ParentRelations["ProcStatusProcedureId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ProcStatusProcedureId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspstIndexNull() {
                return this.IsNull(this.tableprocedurestatus.pstIndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpstIndexNull() {
                this[this.tableprocedurestatus.pstIndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspstModeNull() {
                return this.IsNull(this.tableprocedurestatus.pstModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpstModeNull() {
                this[this.tableprocedurestatus.pstModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseappsRow[] GetcaseappsRows() {
                if ((this.Table.ChildRelations["appStageFK"] == null)) {
                    return new caseappsRow[0];
                }
                else {
                    return ((caseappsRow[])(base.GetChildRows(this.Table.ChildRelations["appStageFK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nextprocedurestatusRow[] GetnextprocedurestatusRowsByProcStatusFromId() {
                if ((this.Table.ChildRelations["ProcStatusFromId"] == null)) {
                    return new nextprocedurestatusRow[0];
                }
                else {
                    return ((nextprocedurestatusRow[])(base.GetChildRows(this.Table.ChildRelations["ProcStatusFromId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nextprocedurestatusRow[] GetnextprocedurestatusRowsByProcStatusToId() {
                if ((this.Table.ChildRelations["ProcStatusToId"] == null)) {
                    return new nextprocedurestatusRow[0];
                }
                else {
                    return ((nextprocedurestatusRow[])(base.GetChildRows(this.Table.ChildRelations["ProcStatusToId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procstatususergroupRow[] GetprocstatususergroupRows() {
                if ((this.Table.ChildRelations["psguProcStatusId"] == null)) {
                    return new procstatususergroupRow[0];
                }
                else {
                    return ((procstatususergroupRow[])(base.GetChildRows(this.Table.ChildRelations["psguProcStatusId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class procstatususergroupRow : global::System.Data.DataRow {
            
            private procstatususergroupDataTable tableprocstatususergroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal procstatususergroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableprocstatususergroup = ((procstatususergroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int psguId {
                get {
                    return ((int)(this[this.tableprocstatususergroup.psguIdColumn]));
                }
                set {
                    this[this.tableprocstatususergroup.psguIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int psguUserId {
                get {
                    try {
                        return ((int)(this[this.tableprocstatususergroup.psguUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'psguUserId\' in table \'procstatususergroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocstatususergroup.psguUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int psguGroupId {
                get {
                    try {
                        return ((int)(this[this.tableprocstatususergroup.psguGroupIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'psguGroupId\' in table \'procstatususergroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocstatususergroup.psguGroupIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int psguProcStatusId {
                get {
                    return ((int)(this[this.tableprocstatususergroup.psguProcStatusIdColumn]));
                }
                set {
                    this[this.tableprocstatususergroup.psguProcStatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRow procedurestatusRow {
                get {
                    return ((procedurestatusRow)(this.GetParentRow(this.Table.ParentRelations["psguProcStatusId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["psguProcStatusId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspsguUserIdNull() {
                return this.IsNull(this.tableprocstatususergroup.psguUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpsguUserIdNull() {
                this[this.tableprocstatususergroup.psguUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspsguGroupIdNull() {
                return this.IsNull(this.tableprocstatususergroup.psguGroupIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpsguGroupIdNull() {
                this[this.tableprocstatususergroup.psguGroupIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class reminderRow : global::System.Data.DataRow {
            
            private reminderDataTable tablereminder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal reminderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereminder = ((reminderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int remId {
                get {
                    return ((int)(this[this.tablereminder.remIdColumn]));
                }
                set {
                    this[this.tablereminder.remIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int caseId {
                get {
                    try {
                        return ((int)(this[this.tablereminder.caseIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'caseId\' in table \'reminder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereminder.caseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int remOwnerId {
                get {
                    try {
                        return ((int)(this[this.tablereminder.remOwnerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remOwnerId\' in table \'reminder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereminder.remOwnerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int remReceiverId {
                get {
                    try {
                        return ((int)(this[this.tablereminder.remReceiverIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remReceiverId\' in table \'reminder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereminder.remReceiverIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime remDeadline {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablereminder.remDeadlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remDeadline\' in table \'reminder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereminder.remDeadlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime remCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablereminder.remCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remCreated\' in table \'reminder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereminder.remCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscaseIdNull() {
                return this.IsNull(this.tablereminder.caseIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcaseIdNull() {
                this[this.tablereminder.caseIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsremOwnerIdNull() {
                return this.IsNull(this.tablereminder.remOwnerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetremOwnerIdNull() {
                this[this.tablereminder.remOwnerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsremReceiverIdNull() {
                return this.IsNull(this.tablereminder.remReceiverIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetremReceiverIdNull() {
                this[this.tablereminder.remReceiverIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsremDeadlineNull() {
                return this.IsNull(this.tablereminder.remDeadlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetremDeadlineNull() {
                this[this.tablereminder.remDeadlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsremCreatedNull() {
                return this.IsNull(this.tablereminder.remCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetremCreatedNull() {
                this[this.tablereminder.remCreatedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class reportdefinitionRow : global::System.Data.DataRow {
            
            private reportdefinitionDataTable tablereportdefinition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal reportdefinitionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereportdefinition = ((reportdefinitionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int repId {
                get {
                    return ((int)(this[this.tablereportdefinition.repIdColumn]));
                }
                set {
                    this[this.tablereportdefinition.repIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string repName {
                get {
                    return ((string)(this[this.tablereportdefinition.repNameColumn]));
                }
                set {
                    this[this.tablereportdefinition.repNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string repType {
                get {
                    return ((string)(this[this.tablereportdefinition.repTypeColumn]));
                }
                set {
                    this[this.tablereportdefinition.repTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string repXdimensionName {
                get {
                    return ((string)(this[this.tablereportdefinition.repXdimensionNameColumn]));
                }
                set {
                    this[this.tablereportdefinition.repXdimensionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string repYdimensionName {
                get {
                    return ((string)(this[this.tablereportdefinition.repYdimensionNameColumn]));
                }
                set {
                    this[this.tablereportdefinition.repYdimensionNameColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class reportparamRow : global::System.Data.DataRow {
            
            private reportparamDataTable tablereportparam;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal reportparamRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereportparam = ((reportparamDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int repId {
                get {
                    return ((int)(this[this.tablereportparam.repIdColumn]));
                }
                set {
                    this[this.tablereportparam.repIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string repName {
                get {
                    try {
                        return ((string)(this[this.tablereportparam.repNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repName\' in table \'reportparam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereportparam.repNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string repType {
                get {
                    try {
                        return ((string)(this[this.tablereportparam.repTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repType\' in table \'reportparam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereportparam.repTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string repXdimensionName {
                get {
                    try {
                        return ((string)(this[this.tablereportparam.repXdimensionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repXdimensionName\' in table \'reportparam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereportparam.repXdimensionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string repYdimensionName {
                get {
                    try {
                        return ((string)(this[this.tablereportparam.repYdimensionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repYdimensionName\' in table \'reportparam\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereportparam.repYdimensionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrepNameNull() {
                return this.IsNull(this.tablereportparam.repNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrepNameNull() {
                this[this.tablereportparam.repNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrepTypeNull() {
                return this.IsNull(this.tablereportparam.repTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrepTypeNull() {
                this[this.tablereportparam.repTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrepXdimensionNameNull() {
                return this.IsNull(this.tablereportparam.repXdimensionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrepXdimensionNameNull() {
                this[this.tablereportparam.repXdimensionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrepYdimensionNameNull() {
                return this.IsNull(this.tablereportparam.repYdimensionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrepYdimensionNameNull() {
                this[this.tablereportparam.repYdimensionNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class systemlogRow : global::System.Data.DataRow {
            
            private systemlogDataTable tablesystemlog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal systemlogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesystemlog = ((systemlogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int logId {
                get {
                    return ((int)(this[this.tablesystemlog.logIdColumn]));
                }
                set {
                    this[this.tablesystemlog.logIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int logStatus {
                get {
                    return ((int)(this[this.tablesystemlog.logStatusColumn]));
                }
                set {
                    this[this.tablesystemlog.logStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime logDate {
                get {
                    return ((global::System.DateTime)(this[this.tablesystemlog.logDateColumn]));
                }
                set {
                    this[this.tablesystemlog.logDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string logMessage {
                get {
                    return ((string)(this[this.tablesystemlog.logMessageColumn]));
                }
                set {
                    this[this.tablesystemlog.logMessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string logUrl {
                get {
                    try {
                        return ((string)(this[this.tablesystemlog.logUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logUrl\' in table \'systemlog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystemlog.logUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string logCallStack {
                get {
                    try {
                        return ((string)(this[this.tablesystemlog.logCallStackColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logCallStack\' in table \'systemlog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystemlog.logCallStackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string logModule {
                get {
                    try {
                        return ((string)(this[this.tablesystemlog.logModuleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logModule\' in table \'systemlog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystemlog.logModuleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string logUser {
                get {
                    try {
                        return ((string)(this[this.tablesystemlog.logUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logUser\' in table \'systemlog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystemlog.logUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string logServer {
                get {
                    try {
                        return ((string)(this[this.tablesystemlog.logServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logServer\' in table \'systemlog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesystemlog.logServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslogUrlNull() {
                return this.IsNull(this.tablesystemlog.logUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlogUrlNull() {
                this[this.tablesystemlog.logUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslogCallStackNull() {
                return this.IsNull(this.tablesystemlog.logCallStackColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlogCallStackNull() {
                this[this.tablesystemlog.logCallStackColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslogModuleNull() {
                return this.IsNull(this.tablesystemlog.logModuleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlogModuleNull() {
                this[this.tablesystemlog.logModuleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslogUserNull() {
                return this.IsNull(this.tablesystemlog.logUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlogUserNull() {
                this[this.tablesystemlog.logUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslogServerNull() {
                return this.IsNull(this.tablesystemlog.logServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlogServerNull() {
                this[this.tablesystemlog.logServerColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class useractionRow : global::System.Data.DataRow {
            
            private useractionDataTable tableuseraction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal useractionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableuseraction = ((useractionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int actId {
                get {
                    return ((int)(this[this.tableuseraction.actIdColumn]));
                }
                set {
                    this[this.tableuseraction.actIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int actUserId {
                get {
                    try {
                        return ((int)(this[this.tableuseraction.actUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'actUserId\' in table \'useraction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuseraction.actUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string actObjectType {
                get {
                    try {
                        return ((string)(this[this.tableuseraction.actObjectTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'actObjectType\' in table \'useraction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuseraction.actObjectTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int actObjectId {
                get {
                    try {
                        return ((int)(this[this.tableuseraction.actObjectIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'actObjectId\' in table \'useraction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuseraction.actObjectIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string actActionType {
                get {
                    try {
                        return ((string)(this[this.tableuseraction.actActionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'actActionType\' in table \'useraction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuseraction.actActionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime actDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableuseraction.actDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'actDate\' in table \'useraction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableuseraction.actDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRow {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["ActionUser"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ActionUser"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsactUserIdNull() {
                return this.IsNull(this.tableuseraction.actUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetactUserIdNull() {
                this[this.tableuseraction.actUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsactObjectTypeNull() {
                return this.IsNull(this.tableuseraction.actObjectTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetactObjectTypeNull() {
                this[this.tableuseraction.actObjectTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsactObjectIdNull() {
                return this.IsNull(this.tableuseraction.actObjectIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetactObjectIdNull() {
                this[this.tableuseraction.actObjectIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsactActionTypeNull() {
                return this.IsNull(this.tableuseraction.actActionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetactActionTypeNull() {
                this[this.tableuseraction.actActionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsactDateNull() {
                return this.IsNull(this.tableuseraction.actDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetactDateNull() {
                this[this.tableuseraction.actDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class usergroupRow : global::System.Data.DataRow {
            
            private usergroupDataTable tableusergroup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal usergroupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusergroup = ((usergroupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ugrId {
                get {
                    return ((int)(this[this.tableusergroup.ugrIdColumn]));
                }
                set {
                    this[this.tableusergroup.ugrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ugrName {
                get {
                    return ((string)(this[this.tableusergroup.ugrNameColumn]));
                }
                set {
                    this[this.tableusergroup.ugrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupconnectionRow[] GetusergroupconnectionRows() {
                if ((this.Table.ChildRelations["Group"] == null)) {
                    return new usergroupconnectionRow[0];
                }
                else {
                    return ((usergroupconnectionRow[])(base.GetChildRows(this.Table.ChildRelations["Group"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class usergroupconnectionRow : global::System.Data.DataRow {
            
            private usergroupconnectionDataTable tableusergroupconnection;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal usergroupconnectionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableusergroupconnection = ((usergroupconnectionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ugcUserId {
                get {
                    return ((int)(this[this.tableusergroupconnection.ugcUserIdColumn]));
                }
                set {
                    this[this.tableusergroupconnection.ugcUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ugcGroupId {
                get {
                    return ((int)(this[this.tableusergroupconnection.ugcGroupIdColumn]));
                }
                set {
                    this[this.tableusergroupconnection.ugcGroupIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupRow usergroupRow {
                get {
                    return ((usergroupRow)(this.GetParentRow(this.Table.ParentRelations["Group"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Group"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRow {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["User"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class workflowuserRow : global::System.Data.DataRow {
            
            private workflowuserDataTable tableworkflowuser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal workflowuserRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableworkflowuser = ((workflowuserDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int userId {
                get {
                    return ((int)(this[this.tableworkflowuser.userIdColumn]));
                }
                set {
                    this[this.tableworkflowuser.userIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userLogin {
                get {
                    return ((string)(this[this.tableworkflowuser.userLoginColumn]));
                }
                set {
                    this[this.tableworkflowuser.userLoginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong userIsFromAD {
                get {
                    return ((ulong)(this[this.tableworkflowuser.userIsFromADColumn]));
                }
                set {
                    this[this.tableworkflowuser.userIsFromADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userPassword {
                get {
                    try {
                        return ((string)(this[this.tableworkflowuser.userPasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userPassword\' in table \'workflowuser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkflowuser.userPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userFirstName {
                get {
                    return ((string)(this[this.tableworkflowuser.userFirstNameColumn]));
                }
                set {
                    this[this.tableworkflowuser.userFirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userLastName {
                get {
                    return ((string)(this[this.tableworkflowuser.userLastNameColumn]));
                }
                set {
                    this[this.tableworkflowuser.userLastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int userManagerId {
                get {
                    try {
                        return ((int)(this[this.tableworkflowuser.userManagerIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userManagerId\' in table \'workflowuser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkflowuser.userManagerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ulong userIsAdmin {
                get {
                    try {
                        return ((ulong)(this[this.tableworkflowuser.userIsAdminColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userIsAdmin\' in table \'workflowuser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkflowuser.userIsAdminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userEmail {
                get {
                    try {
                        return ((string)(this[this.tableworkflowuser.userEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userEmail\' in table \'workflowuser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkflowuser.userEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userLanguage {
                get {
                    try {
                        return ((string)(this[this.tableworkflowuser.userLanguageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userLanguage\' in table \'workflowuser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkflowuser.userLanguageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userCode {
                get {
                    try {
                        return ((string)(this[this.tableworkflowuser.userCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userCode\' in table \'workflowuser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkflowuser.userCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int userDepartmentId {
                get {
                    try {
                        return ((int)(this[this.tableworkflowuser.userDepartmentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userDepartmentId\' in table \'workflowuser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkflowuser.userDepartmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userLocation {
                get {
                    try {
                        return ((string)(this[this.tableworkflowuser.userLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userLocation\' in table \'workflowuser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkflowuser.userLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string userPhoneNumbers {
                get {
                    try {
                        return ((string)(this[this.tableworkflowuser.userPhoneNumbersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userPhoneNumbers\' in table \'workflowuser\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkflowuser.userPhoneNumbersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentRow departmentRow {
                get {
                    return ((departmentRow)(this.GetParentRow(this.Table.ParentRelations["Department"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Department"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow workflowuserRowParent {
                get {
                    return ((workflowuserRow)(this.GetParentRow(this.Table.ParentRelations["Manager"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Manager"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserPasswordNull() {
                return this.IsNull(this.tableworkflowuser.userPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserPasswordNull() {
                this[this.tableworkflowuser.userPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserManagerIdNull() {
                return this.IsNull(this.tableworkflowuser.userManagerIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserManagerIdNull() {
                this[this.tableworkflowuser.userManagerIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserIsAdminNull() {
                return this.IsNull(this.tableworkflowuser.userIsAdminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserIsAdminNull() {
                this[this.tableworkflowuser.userIsAdminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserEmailNull() {
                return this.IsNull(this.tableworkflowuser.userEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserEmailNull() {
                this[this.tableworkflowuser.userEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserLanguageNull() {
                return this.IsNull(this.tableworkflowuser.userLanguageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserLanguageNull() {
                this[this.tableworkflowuser.userLanguageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserCodeNull() {
                return this.IsNull(this.tableworkflowuser.userCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserCodeNull() {
                this[this.tableworkflowuser.userCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserDepartmentIdNull() {
                return this.IsNull(this.tableworkflowuser.userDepartmentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserDepartmentIdNull() {
                this[this.tableworkflowuser.userDepartmentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserLocationNull() {
                return this.IsNull(this.tableworkflowuser.userLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserLocationNull() {
                this[this.tableworkflowuser.userLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsuserPhoneNumbersNull() {
                return this.IsNull(this.tableworkflowuser.userPhoneNumbersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetuserPhoneNumbersNull() {
                this[this.tableworkflowuser.userPhoneNumbersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentRow[] GetcaseattachmentRowsByAttCreatedBy() {
                if ((this.Table.ChildRelations["AttCreatedBy"] == null)) {
                    return new caseattachmentRow[0];
                }
                else {
                    return ((caseattachmentRow[])(base.GetChildRows(this.Table.ChildRelations["AttCreatedBy"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentRow[] GetcaseattachmentRowsByAttLockedBy() {
                if ((this.Table.ChildRelations["AttLockedBy"] == null)) {
                    return new caseattachmentRow[0];
                }
                else {
                    return ((caseattachmentRow[])(base.GetChildRows(this.Table.ChildRelations["AttLockedBy"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentRow[] GetcaseattachmentRowsByAttModifiedBy() {
                if ((this.Table.ChildRelations["AttModifiedBy"] == null)) {
                    return new caseattachmentRow[0];
                }
                else {
                    return ((caseattachmentRow[])(base.GetChildRows(this.Table.ChildRelations["AttModifiedBy"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmenthistoryRow[] GetcaseattachmenthistoryRowsByAttCreatedByH() {
                if ((this.Table.ChildRelations["AttCreatedByH"] == null)) {
                    return new caseattachmenthistoryRow[0];
                }
                else {
                    return ((caseattachmenthistoryRow[])(base.GetChildRows(this.Table.ChildRelations["AttCreatedByH"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmenthistoryRow[] GetcaseattachmenthistoryRowsByAttModifiedByH() {
                if ((this.Table.ChildRelations["AttModifiedByH"] == null)) {
                    return new caseattachmenthistoryRow[0];
                }
                else {
                    return ((caseattachmenthistoryRow[])(base.GetChildRows(this.Table.ChildRelations["AttModifiedByH"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casecommentRow[] GetcasecommentRows() {
                if ((this.Table.ChildRelations["CommentUser"] == null)) {
                    return new casecommentRow[0];
                }
                else {
                    return ((casecommentRow[])(base.GetChildRows(this.Table.ChildRelations["CommentUser"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow[] GetcasedefinitionRowsBycaseCreatedById() {
                if ((this.Table.ChildRelations["caseCreatedById"] == null)) {
                    return new casedefinitionRow[0];
                }
                else {
                    return ((casedefinitionRow[])(base.GetChildRows(this.Table.ChildRelations["caseCreatedById"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow[] GetcasedefinitionRowsBycaseForwaredById() {
                if ((this.Table.ChildRelations["caseForwaredById"] == null)) {
                    return new casedefinitionRow[0];
                }
                else {
                    return ((casedefinitionRow[])(base.GetChildRows(this.Table.ChildRelations["caseForwaredById"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow[] GetcasedefinitionRowsBycaseModifiedById() {
                if ((this.Table.ChildRelations["caseModifiedById"] == null)) {
                    return new casedefinitionRow[0];
                }
                else {
                    return ((casedefinitionRow[])(base.GetChildRows(this.Table.ChildRelations["caseModifiedById"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow[] GetcasedefinitionRowsBycaseOwnerIdFK() {
                if ((this.Table.ChildRelations["caseOwnerIdFK"] == null)) {
                    return new casedefinitionRow[0];
                }
                else {
                    return ((casedefinitionRow[])(base.GetChildRows(this.Table.ChildRelations["caseOwnerIdFK"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRow[] GetcasehistoryRowsByAuthorH() {
                if ((this.Table.ChildRelations["AuthorH"] == null)) {
                    return new casehistoryRow[0];
                }
                else {
                    return ((casehistoryRow[])(base.GetChildRows(this.Table.ChildRelations["AuthorH"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRow[] GetcasehistoryRowsByEditorH() {
                if ((this.Table.ChildRelations["EditorH"] == null)) {
                    return new casehistoryRow[0];
                }
                else {
                    return ((casehistoryRow[])(base.GetChildRows(this.Table.ChildRelations["EditorH"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRow[] GetcasehistoryRowsByForwarderH() {
                if ((this.Table.ChildRelations["ForwarderH"] == null)) {
                    return new casehistoryRow[0];
                }
                else {
                    return ((casehistoryRow[])(base.GetChildRows(this.Table.ChildRelations["ForwarderH"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRow[] GetcasehistoryRowsByOwnerH() {
                if ((this.Table.ChildRelations["OwnerH"] == null)) {
                    return new casehistoryRow[0];
                }
                else {
                    return ((casehistoryRow[])(base.GetChildRows(this.Table.ChildRelations["OwnerH"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsRow[] GetcasehistorydetailsRowsByAuthorHD() {
                if ((this.Table.ChildRelations["AuthorHD"] == null)) {
                    return new casehistorydetailsRow[0];
                }
                else {
                    return ((casehistorydetailsRow[])(base.GetChildRows(this.Table.ChildRelations["AuthorHD"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsRow[] GetcasehistorydetailsRowsByEditorHD() {
                if ((this.Table.ChildRelations["EditorHD"] == null)) {
                    return new casehistorydetailsRow[0];
                }
                else {
                    return ((casehistorydetailsRow[])(base.GetChildRows(this.Table.ChildRelations["EditorHD"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsRow[] GetcasehistorydetailsRowsByOwnerHD() {
                if ((this.Table.ChildRelations["OwnerHD"] == null)) {
                    return new casehistorydetailsRow[0];
                }
                else {
                    return ((casehistorydetailsRow[])(base.GetChildRows(this.Table.ChildRelations["OwnerHD"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentRow[] GetdepartmentRows() {
                if ((this.Table.ChildRelations["departManagerId"] == null)) {
                    return new departmentRow[0];
                }
                else {
                    return ((departmentRow[])(base.GetChildRows(this.Table.ChildRelations["departManagerId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public useractionRow[] GetuseractionRows() {
                if ((this.Table.ChildRelations["ActionUser"] == null)) {
                    return new useractionRow[0];
                }
                else {
                    return ((useractionRow[])(base.GetChildRows(this.Table.ChildRelations["ActionUser"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupconnectionRow[] GetusergroupconnectionRows() {
                if ((this.Table.ChildRelations["User"] == null)) {
                    return new usergroupconnectionRow[0];
                }
                else {
                    return ((usergroupconnectionRow[])(base.GetChildRows(this.Table.ChildRelations["User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow[] GetworkflowuserRows() {
                if ((this.Table.ChildRelations["Manager"] == null)) {
                    return new workflowuserRow[0];
                }
                else {
                    return ((workflowuserRow[])(base.GetChildRows(this.Table.ChildRelations["Manager"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class caseappsRowChangeEvent : global::System.EventArgs {
            
            private caseappsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseappsRowChangeEvent(caseappsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseappsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class caseattachmentRowChangeEvent : global::System.EventArgs {
            
            private caseattachmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentRowChangeEvent(caseattachmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class caseattachmenthistoryRowChangeEvent : global::System.EventArgs {
            
            private caseattachmenthistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmenthistoryRowChangeEvent(caseattachmenthistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseattachmenthistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class casecommentRowChangeEvent : global::System.EventArgs {
            
            private casecommentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casecommentRowChangeEvent(casecommentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casecommentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class casedefinitionRowChangeEvent : global::System.EventArgs {
            
            private casedefinitionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRowChangeEvent(casedefinitionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casedefinitionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class casehistoryRowChangeEvent : global::System.EventArgs {
            
            private casehistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRowChangeEvent(casehistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class casehistorydetailsRowChangeEvent : global::System.EventArgs {
            
            private casehistorydetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsRowChangeEvent(casehistorydetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casehistorydetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class caseparamRowChangeEvent : global::System.EventArgs {
            
            private caseparamRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseparamRowChangeEvent(caseparamRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public caseparamRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class casereadedRowChangeEvent : global::System.EventArgs {
            
            private casereadedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casereadedRowChangeEvent(casereadedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public casereadedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class decisiontreeRowChangeEvent : global::System.EventArgs {
            
            private decisiontreeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decisiontreeRowChangeEvent(decisiontreeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decisiontreeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class departmentRowChangeEvent : global::System.EventArgs {
            
            private departmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentRowChangeEvent(departmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public departmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ftsearchdataRowChangeEvent : global::System.EventArgs {
            
            private ftsearchdataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ftsearchdataRowChangeEvent(ftsearchdataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ftsearchdataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class mailtemplatesRowChangeEvent : global::System.EventArgs {
            
            private mailtemplatesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mailtemplatesRowChangeEvent(mailtemplatesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public mailtemplatesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class nextprocedurestatusRowChangeEvent : global::System.EventArgs {
            
            private nextprocedurestatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nextprocedurestatusRowChangeEvent(nextprocedurestatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public nextprocedurestatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class notificationRowChangeEvent : global::System.EventArgs {
            
            private notificationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public notificationRowChangeEvent(notificationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public notificationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class parametersRowChangeEvent : global::System.EventArgs {
            
            private parametersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public parametersRowChangeEvent(parametersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public parametersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class proceduredefinitionRowChangeEvent : global::System.EventArgs {
            
            private proceduredefinitionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionRowChangeEvent(proceduredefinitionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proceduredefinitionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class procedureparamRowChangeEvent : global::System.EventArgs {
            
            private procedureparamRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedureparamRowChangeEvent(procedureparamRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedureparamRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class procedurestatusRowChangeEvent : global::System.EventArgs {
            
            private procedurestatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRowChangeEvent(procedurestatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procedurestatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class procstatususergroupRowChangeEvent : global::System.EventArgs {
            
            private procstatususergroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procstatususergroupRowChangeEvent(procstatususergroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public procstatususergroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class reminderRowChangeEvent : global::System.EventArgs {
            
            private reminderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reminderRowChangeEvent(reminderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reminderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class reportdefinitionRowChangeEvent : global::System.EventArgs {
            
            private reportdefinitionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportdefinitionRowChangeEvent(reportdefinitionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportdefinitionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class reportparamRowChangeEvent : global::System.EventArgs {
            
            private reportparamRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportparamRowChangeEvent(reportparamRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public reportparamRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class systemlogRowChangeEvent : global::System.EventArgs {
            
            private systemlogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systemlogRowChangeEvent(systemlogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public systemlogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class useractionRowChangeEvent : global::System.EventArgs {
            
            private useractionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public useractionRowChangeEvent(useractionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public useractionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class usergroupRowChangeEvent : global::System.EventArgs {
            
            private usergroupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupRowChangeEvent(usergroupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class usergroupconnectionRowChangeEvent : global::System.EventArgs {
            
            private usergroupconnectionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupconnectionRowChangeEvent(usergroupconnectionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public usergroupconnectionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class workflowuserRowChangeEvent : global::System.EventArgs {
            
            private workflowuserRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRowChangeEvent(workflowuserRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public workflowuserRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DCUpdate.amodDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class caseappsTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public caseappsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "caseapps";
            tableMapping.ColumnMappings.Add("appId", "appId");
            tableMapping.ColumnMappings.Add("appUrl", "appUrl");
            tableMapping.ColumnMappings.Add("appType", "appType");
            tableMapping.ColumnMappings.Add("appName", "appName");
            tableMapping.ColumnMappings.Add("appTitle", "appTitle");
            tableMapping.ColumnMappings.Add("appHeight", "appHeight");
            tableMapping.ColumnMappings.Add("appWidth", "appWidth");
            tableMapping.ColumnMappings.Add("appAdditionalStyle", "appAdditionalStyle");
            tableMapping.ColumnMappings.Add("appProcedureId", "appProcedureId");
            tableMapping.ColumnMappings.Add("appStageId", "appStageId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `caseapps` WHERE ((`appId` = @Original_appId) AND ((@IsNull_appUrl = 1 AND `appUrl` IS NULL) OR (`appUrl` = @Original_appUrl)) AND ((@IsNull_appType = 1 AND `appType` IS NULL) OR (`appType` = @Original_appType)) AND ((@IsNull_appName = 1 AND `appName` IS NULL) OR (`appName` = @Original_appName)) AND ((@IsNull_appTitle = 1 AND `appTitle` IS NULL) OR (`appTitle` = @Original_appTitle)) AND ((@IsNull_appHeight = 1 AND `appHeight` IS NULL) OR (`appHeight` = @Original_appHeight)) AND ((@IsNull_appWidth = 1 AND `appWidth` IS NULL) OR (`appWidth` = @Original_appWidth)) AND ((@IsNull_appAdditionalStyle = 1 AND `appAdditionalStyle` IS NULL) OR (`appAdditionalStyle` = @Original_appAdditionalStyle)) AND ((@IsNull_appProcedureId = 1 AND `appProcedureId` IS NULL) OR (`appProcedureId` = @Original_appProcedureId)) AND ((@IsNull_appStageId = 1 AND `appStageId` IS NULL) OR (`appStageId` = @Original_appStageId)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appUrl";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appUrl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appUrl";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appUrl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appHeight";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appHeight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appHeight";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appHeight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appWidth";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appWidth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appWidth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appWidth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appAdditionalStyle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appAdditionalStyle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appAdditionalStyle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appAdditionalStyle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appStageId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appStageId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appStageId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appStageId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `caseapps` (`appUrl`, `appType`, `appName`, `appTitle`, `appHeight`, `appWidth`, `appAdditionalStyle`, `appProcedureId`, `appStageId`) VALUES (@appUrl, @appType, @appName, @appTitle, @appHeight, @appWidth, @appAdditionalStyle, @appProcedureId, @appStageId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appUrl";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appUrl";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appHeight";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appHeight";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appWidth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appWidth";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appAdditionalStyle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appAdditionalStyle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appProcedureId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appStageId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appStageId";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `caseapps` SET `appUrl` = @appUrl, `appType` = @appType, `appName` = @appName, `appTitle` = @appTitle, `appHeight` = @appHeight, `appWidth` = @appWidth, `appAdditionalStyle` = @appAdditionalStyle, `appProcedureId` = @appProcedureId, `appStageId` = @appStageId WHERE ((`appId` = @Original_appId) AND ((@IsNull_appUrl = 1 AND `appUrl` IS NULL) OR (`appUrl` = @Original_appUrl)) AND ((@IsNull_appType = 1 AND `appType` IS NULL) OR (`appType` = @Original_appType)) AND ((@IsNull_appName = 1 AND `appName` IS NULL) OR (`appName` = @Original_appName)) AND ((@IsNull_appTitle = 1 AND `appTitle` IS NULL) OR (`appTitle` = @Original_appTitle)) AND ((@IsNull_appHeight = 1 AND `appHeight` IS NULL) OR (`appHeight` = @Original_appHeight)) AND ((@IsNull_appWidth = 1 AND `appWidth` IS NULL) OR (`appWidth` = @Original_appWidth)) AND ((@IsNull_appAdditionalStyle = 1 AND `appAdditionalStyle` IS NULL) OR (`appAdditionalStyle` = @Original_appAdditionalStyle)) AND ((@IsNull_appProcedureId = 1 AND `appProcedureId` IS NULL) OR (`appProcedureId` = @Original_appProcedureId)) AND ((@IsNull_appStageId = 1 AND `appStageId` IS NULL) OR (`appStageId` = @Original_appStageId)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appUrl";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appUrl";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appHeight";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appHeight";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appWidth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appWidth";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appAdditionalStyle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appAdditionalStyle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appProcedureId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@appStageId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appStageId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appUrl";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appUrl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appUrl";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appUrl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appHeight";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appHeight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appHeight";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appHeight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appWidth";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appWidth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appWidth";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appWidth";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appAdditionalStyle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appAdditionalStyle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appAdditionalStyle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "appAdditionalStyle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_appStageId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appStageId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_appStageId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "appStageId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `appId`, `appUrl`, `appType`, `appName`, `appTitle`, `appHeight`, `appWidt" +
                "h`, `appAdditionalStyle`, `appProcedureId`, `appStageId` FROM `caseapps`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.caseappsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.caseappsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.caseappsDataTable dataTable = new amodDataSet.caseappsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.caseappsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "caseapps");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_appId, string Original_appUrl, global::System.Nullable<int> Original_appType, string Original_appName, string Original_appTitle, string Original_appHeight, string Original_appWidth, string Original_appAdditionalStyle, global::System.Nullable<int> Original_appProcedureId, global::System.Nullable<int> Original_appStageId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_appId));
            if ((Original_appUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_appUrl));
            }
            if ((Original_appType.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_appType.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_appName == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_appName));
            }
            if ((Original_appTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_appTitle));
            }
            if ((Original_appHeight == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_appHeight));
            }
            if ((Original_appWidth == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_appWidth));
            }
            if ((Original_appAdditionalStyle == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_appAdditionalStyle));
            }
            if ((Original_appProcedureId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_appProcedureId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_appStageId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_appStageId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string appUrl, global::System.Nullable<int> appType, string appName, string appTitle, string appHeight, string appWidth, string appAdditionalStyle, global::System.Nullable<int> appProcedureId, global::System.Nullable<int> appStageId) {
            if ((appUrl == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(appUrl));
            }
            if ((appType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(appType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((appName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(appName));
            }
            if ((appTitle == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(appTitle));
            }
            if ((appHeight == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(appHeight));
            }
            if ((appWidth == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(appWidth));
            }
            if ((appAdditionalStyle == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(appAdditionalStyle));
            }
            if ((appProcedureId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(appProcedureId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((appStageId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(appStageId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string appUrl, 
                    global::System.Nullable<int> appType, 
                    string appName, 
                    string appTitle, 
                    string appHeight, 
                    string appWidth, 
                    string appAdditionalStyle, 
                    global::System.Nullable<int> appProcedureId, 
                    global::System.Nullable<int> appStageId, 
                    int Original_appId, 
                    string Original_appUrl, 
                    global::System.Nullable<int> Original_appType, 
                    string Original_appName, 
                    string Original_appTitle, 
                    string Original_appHeight, 
                    string Original_appWidth, 
                    string Original_appAdditionalStyle, 
                    global::System.Nullable<int> Original_appProcedureId, 
                    global::System.Nullable<int> Original_appStageId) {
            if ((appUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(appUrl));
            }
            if ((appType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(appType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((appName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(appName));
            }
            if ((appTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(appTitle));
            }
            if ((appHeight == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(appHeight));
            }
            if ((appWidth == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(appWidth));
            }
            if ((appAdditionalStyle == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(appAdditionalStyle));
            }
            if ((appProcedureId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(appProcedureId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((appStageId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(appStageId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_appId));
            if ((Original_appUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_appUrl));
            }
            if ((Original_appType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_appType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_appName == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_appName));
            }
            if ((Original_appTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_appTitle));
            }
            if ((Original_appHeight == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_appHeight));
            }
            if ((Original_appWidth == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_appWidth));
            }
            if ((Original_appAdditionalStyle == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_appAdditionalStyle));
            }
            if ((Original_appProcedureId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_appProcedureId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_appStageId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_appStageId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class caseattachmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public caseattachmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "caseattachment";
            tableMapping.ColumnMappings.Add("attId", "attId");
            tableMapping.ColumnMappings.Add("attCreated", "attCreated");
            tableMapping.ColumnMappings.Add("attCreatedById", "attCreatedById");
            tableMapping.ColumnMappings.Add("attModified", "attModified");
            tableMapping.ColumnMappings.Add("attModifiedById", "attModifiedById");
            tableMapping.ColumnMappings.Add("attName", "attName");
            tableMapping.ColumnMappings.Add("attTitle", "attTitle");
            tableMapping.ColumnMappings.Add("attDescription", "attDescription");
            tableMapping.ColumnMappings.Add("attValue", "attValue");
            tableMapping.ColumnMappings.Add("attIsExternal", "attIsExternal");
            tableMapping.ColumnMappings.Add("attExternalLink", "attExternalLink");
            tableMapping.ColumnMappings.Add("attIsCurrentVersion", "attIsCurrentVersion");
            tableMapping.ColumnMappings.Add("attVersion", "attVersion");
            tableMapping.ColumnMappings.Add("attCaseId", "attCaseId");
            tableMapping.ColumnMappings.Add("attSize", "attSize");
            tableMapping.ColumnMappings.Add("attThumbnail", "attThumbnail");
            tableMapping.ColumnMappings.Add("attLockedById", "attLockedById");
            tableMapping.ColumnMappings.Add("attLocked", "attLocked");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `caseattachment` WHERE ((`attId` = @Original_attId) AND ((@IsNull_att" +
                "Created = 1 AND `attCreated` IS NULL) OR (`attCreated` = @Original_attCreated)) " +
                "AND ((@IsNull_attCreatedById = 1 AND `attCreatedById` IS NULL) OR (`attCreatedBy" +
                "Id` = @Original_attCreatedById)) AND (`attModified` = @Original_attModified) AND" +
                " (`attModifiedById` = @Original_attModifiedById) AND (`attName` = @Original_attN" +
                "ame) AND ((@IsNull_attTitle = 1 AND `attTitle` IS NULL) OR (`attTitle` = @Origin" +
                "al_attTitle)) AND ((@IsNull_attValue = 1 AND `attValue` IS NULL) OR (`attValue` " +
                "= @Original_attValue)) AND ((@IsNull_attIsExternal = 1 AND `attIsExternal` IS NU" +
                "LL) OR (`attIsExternal` = @Original_attIsExternal)) AND ((@IsNull_attExternalLin" +
                "k = 1 AND `attExternalLink` IS NULL) OR (`attExternalLink` = @Original_attExtern" +
                "alLink)) AND ((@IsNull_attIsCurrentVersion = 1 AND `attIsCurrentVersion` IS NULL" +
                ") OR (`attIsCurrentVersion` = @Original_attIsCurrentVersion)) AND ((@IsNull_attV" +
                "ersion = 1 AND `attVersion` IS NULL) OR (`attVersion` = @Original_attVersion)) A" +
                "ND ((@IsNull_attCaseId = 1 AND `attCaseId` IS NULL) OR (`attCaseId` = @Original_" +
                "attCaseId)) AND ((@IsNull_attSize = 1 AND `attSize` IS NULL) OR (`attSize` = @Or" +
                "iginal_attSize)) AND ((@IsNull_attThumbnail = 1 AND `attThumbnail` IS NULL) OR (" +
                "`attThumbnail` = @Original_attThumbnail)) AND ((@IsNull_attLockedById = 1 AND `a" +
                "ttLockedById` IS NULL) OR (`attLockedById` = @Original_attLockedById)) AND ((@Is" +
                "Null_attLocked = 1 AND `attLocked` IS NULL) OR (`attLocked` = @Original_attLocke" +
                "d)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCreated";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attModifiedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attValue";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attValue";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attIsExternal";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attIsExternal";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attExternalLink";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attExternalLink";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attSize";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attSize";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attSize";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "attSize";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attThumbnail";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attThumbnail";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attLockedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attLockedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attLockedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attLockedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attLocked";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attLocked";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attLocked";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attLocked";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `caseattachment` (`attCreated`, `attCreatedById`, `attModified`, `attModifiedById`, `attName`, `attTitle`, `attDescription`, `attValue`, `attIsExternal`, `attExternalLink`, `attIsCurrentVersion`, `attVersion`, `attCaseId`, `attSize`, `attThumbnail`, `attLockedById`, `attLocked`) VALUES (@attCreated, @attCreatedById, @attModified, @attModifiedById, @attName, @attTitle, @attDescription, @attValue, @attIsExternal, @attExternalLink, @attIsCurrentVersion, @attVersion, @attCaseId, @attSize, @attThumbnail, @attLockedById, @attLocked)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attModified";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attModifiedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attDescription";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "attDescription";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attValue";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attIsExternal";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attExternalLink";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attSize";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "attSize";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attThumbnail";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attLockedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attLockedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attLocked";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attLocked";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `caseattachment` SET `attCreated` = @attCreated, `attCreatedById` = @attCr" +
                "eatedById, `attModified` = @attModified, `attModifiedById` = @attModifiedById, `" +
                "attName` = @attName, `attTitle` = @attTitle, `attDescription` = @attDescription," +
                " `attValue` = @attValue, `attIsExternal` = @attIsExternal, `attExternalLink` = @" +
                "attExternalLink, `attIsCurrentVersion` = @attIsCurrentVersion, `attVersion` = @a" +
                "ttVersion, `attCaseId` = @attCaseId, `attSize` = @attSize, `attThumbnail` = @att" +
                "Thumbnail, `attLockedById` = @attLockedById, `attLocked` = @attLocked WHERE ((`a" +
                "ttId` = @Original_attId) AND ((@IsNull_attCreated = 1 AND `attCreated` IS NULL) " +
                "OR (`attCreated` = @Original_attCreated)) AND ((@IsNull_attCreatedById = 1 AND `" +
                "attCreatedById` IS NULL) OR (`attCreatedById` = @Original_attCreatedById)) AND (" +
                "`attModified` = @Original_attModified) AND (`attModifiedById` = @Original_attMod" +
                "ifiedById) AND (`attName` = @Original_attName) AND ((@IsNull_attTitle = 1 AND `a" +
                "ttTitle` IS NULL) OR (`attTitle` = @Original_attTitle)) AND ((@IsNull_attValue =" +
                " 1 AND `attValue` IS NULL) OR (`attValue` = @Original_attValue)) AND ((@IsNull_a" +
                "ttIsExternal = 1 AND `attIsExternal` IS NULL) OR (`attIsExternal` = @Original_at" +
                "tIsExternal)) AND ((@IsNull_attExternalLink = 1 AND `attExternalLink` IS NULL) O" +
                "R (`attExternalLink` = @Original_attExternalLink)) AND ((@IsNull_attIsCurrentVer" +
                "sion = 1 AND `attIsCurrentVersion` IS NULL) OR (`attIsCurrentVersion` = @Origina" +
                "l_attIsCurrentVersion)) AND ((@IsNull_attVersion = 1 AND `attVersion` IS NULL) O" +
                "R (`attVersion` = @Original_attVersion)) AND ((@IsNull_attCaseId = 1 AND `attCas" +
                "eId` IS NULL) OR (`attCaseId` = @Original_attCaseId)) AND ((@IsNull_attSize = 1 " +
                "AND `attSize` IS NULL) OR (`attSize` = @Original_attSize)) AND ((@IsNull_attThum" +
                "bnail = 1 AND `attThumbnail` IS NULL) OR (`attThumbnail` = @Original_attThumbnai" +
                "l)) AND ((@IsNull_attLockedById = 1 AND `attLockedById` IS NULL) OR (`attLockedB" +
                "yId` = @Original_attLockedById)) AND ((@IsNull_attLocked = 1 AND `attLocked` IS " +
                "NULL) OR (`attLocked` = @Original_attLocked)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attModified";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attModifiedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attDescription";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "attDescription";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attValue";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attIsExternal";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attExternalLink";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attSize";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "attSize";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attThumbnail";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attLockedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attLockedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attLocked";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attLocked";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCreated";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attModifiedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attValue";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attValue";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attIsExternal";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attIsExternal";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attExternalLink";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attExternalLink";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attSize";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attSize";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attSize";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "attSize";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attThumbnail";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attThumbnail";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attLockedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attLockedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attLockedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attLockedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attLocked";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attLocked";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attLocked";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attLocked";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `attId`, `attCreated`, `attCreatedById`, `attModified`, `attModifiedById`, `attName`, `attTitle`, `attDescription`, `attValue`, `attIsExternal`, `attExternalLink`, `attIsCurrentVersion`, `attVersion`, `attCaseId`, `attSize`, `attThumbnail`, `attLockedById`, `attLocked` FROM `caseattachment`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.caseattachmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.caseattachmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.caseattachmentDataTable dataTable = new amodDataSet.caseattachmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.caseattachmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "caseattachment");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_attId, 
                    global::System.Nullable<global::System.DateTime> Original_attCreated, 
                    global::System.Nullable<int> Original_attCreatedById, 
                    System.DateTime Original_attModified, 
                    int Original_attModifiedById, 
                    string Original_attName, 
                    string Original_attTitle, 
                    object Original_attValue, 
                    global::System.Nullable<ulong> Original_attIsExternal, 
                    string Original_attExternalLink, 
                    global::System.Nullable<ulong> Original_attIsCurrentVersion, 
                    global::System.Nullable<int> Original_attVersion, 
                    global::System.Nullable<int> Original_attCaseId, 
                    global::System.Nullable<long> Original_attSize, 
                    object Original_attThumbnail, 
                    global::System.Nullable<int> Original_attLockedById, 
                    global::System.Nullable<global::System.DateTime> Original_attLocked) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_attId));
            if ((Original_attCreated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_attCreated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_attCreatedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_attCreatedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_attModified));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_attModifiedById));
            if ((Original_attName == null)) {
                throw new global::System.ArgumentNullException("Original_attName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_attName));
            }
            if ((Original_attTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_attTitle));
            }
            if ((Original_attValue == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(Original_attValue));
            }
            if ((Original_attIsExternal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((ulong)(Original_attIsExternal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_attExternalLink == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_attExternalLink));
            }
            if ((Original_attIsCurrentVersion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((ulong)(Original_attIsCurrentVersion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_attVersion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_attVersion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_attCaseId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_attCaseId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_attSize.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((long)(Original_attSize.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_attThumbnail == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(Original_attThumbnail));
            }
            if ((Original_attLockedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((int)(Original_attLockedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_attLocked.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_attLocked.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<global::System.DateTime> attCreated, 
                    global::System.Nullable<int> attCreatedById, 
                    System.DateTime attModified, 
                    int attModifiedById, 
                    string attName, 
                    string attTitle, 
                    string attDescription, 
                    object attValue, 
                    global::System.Nullable<ulong> attIsExternal, 
                    string attExternalLink, 
                    global::System.Nullable<ulong> attIsCurrentVersion, 
                    global::System.Nullable<int> attVersion, 
                    global::System.Nullable<int> attCaseId, 
                    global::System.Nullable<long> attSize, 
                    object attThumbnail, 
                    global::System.Nullable<int> attLockedById, 
                    global::System.Nullable<global::System.DateTime> attLocked) {
            if ((attCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(attCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((attCreatedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(attCreatedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(attModified));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(attModifiedById));
            if ((attName == null)) {
                throw new global::System.ArgumentNullException("attName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(attName));
            }
            if ((attTitle == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(attTitle));
            }
            if ((attDescription == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(attDescription));
            }
            if ((attValue == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((object)(attValue));
            }
            if ((attIsExternal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((ulong)(attIsExternal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((attExternalLink == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(attExternalLink));
            }
            if ((attIsCurrentVersion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((ulong)(attIsCurrentVersion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((attVersion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(attVersion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((attCaseId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(attCaseId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((attSize.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((long)(attSize.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((attThumbnail == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((object)(attThumbnail));
            }
            if ((attLockedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(attLockedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((attLocked.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(attLocked.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> attCreated, 
                    global::System.Nullable<int> attCreatedById, 
                    System.DateTime attModified, 
                    int attModifiedById, 
                    string attName, 
                    string attTitle, 
                    string attDescription, 
                    object attValue, 
                    global::System.Nullable<ulong> attIsExternal, 
                    string attExternalLink, 
                    global::System.Nullable<ulong> attIsCurrentVersion, 
                    global::System.Nullable<int> attVersion, 
                    global::System.Nullable<int> attCaseId, 
                    global::System.Nullable<long> attSize, 
                    object attThumbnail, 
                    global::System.Nullable<int> attLockedById, 
                    global::System.Nullable<global::System.DateTime> attLocked, 
                    int Original_attId, 
                    global::System.Nullable<global::System.DateTime> Original_attCreated, 
                    global::System.Nullable<int> Original_attCreatedById, 
                    System.DateTime Original_attModified, 
                    int Original_attModifiedById, 
                    string Original_attName, 
                    string Original_attTitle, 
                    object Original_attValue, 
                    global::System.Nullable<ulong> Original_attIsExternal, 
                    string Original_attExternalLink, 
                    global::System.Nullable<ulong> Original_attIsCurrentVersion, 
                    global::System.Nullable<int> Original_attVersion, 
                    global::System.Nullable<int> Original_attCaseId, 
                    global::System.Nullable<long> Original_attSize, 
                    object Original_attThumbnail, 
                    global::System.Nullable<int> Original_attLockedById, 
                    global::System.Nullable<global::System.DateTime> Original_attLocked) {
            if ((attCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(attCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((attCreatedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(attCreatedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(attModified));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(attModifiedById));
            if ((attName == null)) {
                throw new global::System.ArgumentNullException("attName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(attName));
            }
            if ((attTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(attTitle));
            }
            if ((attDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(attDescription));
            }
            if ((attValue == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(attValue));
            }
            if ((attIsExternal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((ulong)(attIsExternal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((attExternalLink == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(attExternalLink));
            }
            if ((attIsCurrentVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((ulong)(attIsCurrentVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((attVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(attVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((attCaseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(attCaseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((attSize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(attSize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((attThumbnail == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(attThumbnail));
            }
            if ((attLockedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(attLockedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((attLocked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(attLocked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_attId));
            if ((Original_attCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_attCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_attCreatedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_attCreatedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_attModified));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_attModifiedById));
            if ((Original_attName == null)) {
                throw new global::System.ArgumentNullException("Original_attName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_attName));
            }
            if ((Original_attTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_attTitle));
            }
            if ((Original_attValue == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(Original_attValue));
            }
            if ((Original_attIsExternal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((ulong)(Original_attIsExternal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_attExternalLink == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_attExternalLink));
            }
            if ((Original_attIsCurrentVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((ulong)(Original_attIsCurrentVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_attVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_attVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_attCaseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_attCaseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_attSize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((long)(Original_attSize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_attThumbnail == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(Original_attThumbnail));
            }
            if ((Original_attLockedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_attLockedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_attLocked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((System.DateTime)(Original_attLocked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class caseattachmenthistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public caseattachmenthistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "caseattachmenthistory";
            tableMapping.ColumnMappings.Add("attHistId", "attHistId");
            tableMapping.ColumnMappings.Add("attId", "attId");
            tableMapping.ColumnMappings.Add("attCaseId", "attCaseId");
            tableMapping.ColumnMappings.Add("attCreated", "attCreated");
            tableMapping.ColumnMappings.Add("attCreatedById", "attCreatedById");
            tableMapping.ColumnMappings.Add("attModified", "attModified");
            tableMapping.ColumnMappings.Add("attModifiedById", "attModifiedById");
            tableMapping.ColumnMappings.Add("attName", "attName");
            tableMapping.ColumnMappings.Add("attTitle", "attTitle");
            tableMapping.ColumnMappings.Add("attDescription", "attDescription");
            tableMapping.ColumnMappings.Add("attValue", "attValue");
            tableMapping.ColumnMappings.Add("attIsExternal", "attIsExternal");
            tableMapping.ColumnMappings.Add("attExternalLink", "attExternalLink");
            tableMapping.ColumnMappings.Add("attIsCurrentVersion", "attIsCurrentVersion");
            tableMapping.ColumnMappings.Add("attVersion", "attVersion");
            tableMapping.ColumnMappings.Add("attThumbnail", "attThumbnail");
            tableMapping.ColumnMappings.Add("attIsDeleted", "attIsDeleted");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `caseattachmenthistory` WHERE ((`attHistId` = @Original_attHistId) AND (`attId` = @Original_attId) AND ((@IsNull_attCaseId = 1 AND `attCaseId` IS NULL) OR (`attCaseId` = @Original_attCaseId)) AND ((@IsNull_attCreated = 1 AND `attCreated` IS NULL) OR (`attCreated` = @Original_attCreated)) AND ((@IsNull_attCreatedById = 1 AND `attCreatedById` IS NULL) OR (`attCreatedById` = @Original_attCreatedById)) AND (`attModified` = @Original_attModified) AND (`attModifiedById` = @Original_attModifiedById) AND (`attName` = @Original_attName) AND ((@IsNull_attTitle = 1 AND `attTitle` IS NULL) OR (`attTitle` = @Original_attTitle)) AND ((@IsNull_attValue = 1 AND `attValue` IS NULL) OR (`attValue` = @Original_attValue)) AND ((@IsNull_attIsExternal = 1 AND `attIsExternal` IS NULL) OR (`attIsExternal` = @Original_attIsExternal)) AND ((@IsNull_attExternalLink = 1 AND `attExternalLink` IS NULL) OR (`attExternalLink` = @Original_attExternalLink)) AND ((@IsNull_attIsCurrentVersion = 1 AND `attIsCurrentVersion` IS NULL) OR (`attIsCurrentVersion` = @Original_attIsCurrentVersion)) AND ((@IsNull_attVersion = 1 AND `attVersion` IS NULL) OR (`attVersion` = @Original_attVersion)) AND ((@IsNull_attThumbnail = 1 AND `attThumbnail` IS NULL) OR (`attThumbnail` = @Original_attThumbnail)) AND ((@IsNull_attIsDeleted = 1 AND `attIsDeleted` IS NULL) OR (`attIsDeleted` = @Original_attIsDeleted)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attHistId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCreated";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attModifiedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attValue";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attValue";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attIsExternal";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attIsExternal";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attExternalLink";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attExternalLink";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attThumbnail";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attThumbnail";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attIsDeleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attIsDeleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attIsDeleted";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsDeleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `caseattachmenthistory` (`attId`, `attCaseId`, `attCreated`, `attCreatedById`, `attModified`, `attModifiedById`, `attName`, `attTitle`, `attDescription`, `attValue`, `attIsExternal`, `attExternalLink`, `attIsCurrentVersion`, `attVersion`, `attThumbnail`, `attIsDeleted`) VALUES (@attId, @attCaseId, @attCreated, @attCreatedById, @attModified, @attModifiedById, @attName, @attTitle, @attDescription, @attValue, @attIsExternal, @attExternalLink, @attIsCurrentVersion, @attVersion, @attThumbnail, @attIsDeleted)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attModified";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attModifiedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attDescription";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "attDescription";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attValue";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attIsExternal";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attExternalLink";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attThumbnail";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attIsDeleted";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsDeleted";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `caseattachmenthistory` SET `attId` = @attId, `attCaseId` = @attCaseId, `a" +
                "ttCreated` = @attCreated, `attCreatedById` = @attCreatedById, `attModified` = @a" +
                "ttModified, `attModifiedById` = @attModifiedById, `attName` = @attName, `attTitl" +
                "e` = @attTitle, `attDescription` = @attDescription, `attValue` = @attValue, `att" +
                "IsExternal` = @attIsExternal, `attExternalLink` = @attExternalLink, `attIsCurren" +
                "tVersion` = @attIsCurrentVersion, `attVersion` = @attVersion, `attThumbnail` = @" +
                "attThumbnail, `attIsDeleted` = @attIsDeleted WHERE ((`attHistId` = @Original_att" +
                "HistId) AND (`attId` = @Original_attId) AND ((@IsNull_attCaseId = 1 AND `attCase" +
                "Id` IS NULL) OR (`attCaseId` = @Original_attCaseId)) AND ((@IsNull_attCreated = " +
                "1 AND `attCreated` IS NULL) OR (`attCreated` = @Original_attCreated)) AND ((@IsN" +
                "ull_attCreatedById = 1 AND `attCreatedById` IS NULL) OR (`attCreatedById` = @Ori" +
                "ginal_attCreatedById)) AND (`attModified` = @Original_attModified) AND (`attModi" +
                "fiedById` = @Original_attModifiedById) AND (`attName` = @Original_attName) AND (" +
                "(@IsNull_attTitle = 1 AND `attTitle` IS NULL) OR (`attTitle` = @Original_attTitl" +
                "e)) AND ((@IsNull_attValue = 1 AND `attValue` IS NULL) OR (`attValue` = @Origina" +
                "l_attValue)) AND ((@IsNull_attIsExternal = 1 AND `attIsExternal` IS NULL) OR (`a" +
                "ttIsExternal` = @Original_attIsExternal)) AND ((@IsNull_attExternalLink = 1 AND " +
                "`attExternalLink` IS NULL) OR (`attExternalLink` = @Original_attExternalLink)) A" +
                "ND ((@IsNull_attIsCurrentVersion = 1 AND `attIsCurrentVersion` IS NULL) OR (`att" +
                "IsCurrentVersion` = @Original_attIsCurrentVersion)) AND ((@IsNull_attVersion = 1" +
                " AND `attVersion` IS NULL) OR (`attVersion` = @Original_attVersion)) AND ((@IsNu" +
                "ll_attThumbnail = 1 AND `attThumbnail` IS NULL) OR (`attThumbnail` = @Original_a" +
                "ttThumbnail)) AND ((@IsNull_attIsDeleted = 1 AND `attIsDeleted` IS NULL) OR (`at" +
                "tIsDeleted` = @Original_attIsDeleted)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attModified";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attModifiedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attDescription";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "attDescription";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attValue";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attIsExternal";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attExternalLink";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attThumbnail";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@attIsDeleted";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsDeleted";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attHistId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCreated";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "attModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attModifiedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attValue";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attValue";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attIsExternal";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attIsExternal";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsExternal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attExternalLink";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attExternalLink";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "attExternalLink";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attThumbnail";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attThumbnail";
            param.DbType = global::System.Data.DbType.Object;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Blob;
            param.IsNullable = true;
            param.SourceColumn = "attThumbnail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_attIsDeleted";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "attIsDeleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_attIsDeleted";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "attIsDeleted";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `attHistId`, `attId`, `attCaseId`, `attCreated`, `attCreatedById`, `attModified`, `attModifiedById`, `attName`, `attTitle`, `attDescription`, `attValue`, `attIsExternal`, `attExternalLink`, `attIsCurrentVersion`, `attVersion`, `attThumbnail`, `attIsDeleted` FROM `caseattachmenthistory`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.caseattachmenthistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.caseattachmenthistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.caseattachmenthistoryDataTable dataTable = new amodDataSet.caseattachmenthistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.caseattachmenthistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "caseattachmenthistory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_attHistId, 
                    int Original_attId, 
                    global::System.Nullable<int> Original_attCaseId, 
                    global::System.Nullable<global::System.DateTime> Original_attCreated, 
                    global::System.Nullable<int> Original_attCreatedById, 
                    System.DateTime Original_attModified, 
                    int Original_attModifiedById, 
                    string Original_attName, 
                    string Original_attTitle, 
                    object Original_attValue, 
                    global::System.Nullable<ulong> Original_attIsExternal, 
                    string Original_attExternalLink, 
                    global::System.Nullable<ulong> Original_attIsCurrentVersion, 
                    global::System.Nullable<int> Original_attVersion, 
                    object Original_attThumbnail, 
                    global::System.Nullable<ulong> Original_attIsDeleted) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_attHistId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_attId));
            if ((Original_attCaseId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_attCaseId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_attCreated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_attCreated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_attCreatedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_attCreatedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_attModified));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_attModifiedById));
            if ((Original_attName == null)) {
                throw new global::System.ArgumentNullException("Original_attName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_attName));
            }
            if ((Original_attTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_attTitle));
            }
            if ((Original_attValue == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(Original_attValue));
            }
            if ((Original_attIsExternal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((ulong)(Original_attIsExternal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_attExternalLink == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_attExternalLink));
            }
            if ((Original_attIsCurrentVersion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((ulong)(Original_attIsCurrentVersion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_attVersion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_attVersion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_attThumbnail == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(Original_attThumbnail));
            }
            if ((Original_attIsDeleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((ulong)(Original_attIsDeleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int attId, 
                    global::System.Nullable<int> attCaseId, 
                    global::System.Nullable<global::System.DateTime> attCreated, 
                    global::System.Nullable<int> attCreatedById, 
                    System.DateTime attModified, 
                    int attModifiedById, 
                    string attName, 
                    string attTitle, 
                    string attDescription, 
                    object attValue, 
                    global::System.Nullable<ulong> attIsExternal, 
                    string attExternalLink, 
                    global::System.Nullable<ulong> attIsCurrentVersion, 
                    global::System.Nullable<int> attVersion, 
                    object attThumbnail, 
                    global::System.Nullable<ulong> attIsDeleted) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(attId));
            if ((attCaseId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(attCaseId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((attCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(attCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((attCreatedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(attCreatedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(attModified));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(attModifiedById));
            if ((attName == null)) {
                throw new global::System.ArgumentNullException("attName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(attName));
            }
            if ((attTitle == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(attTitle));
            }
            if ((attDescription == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(attDescription));
            }
            if ((attValue == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((object)(attValue));
            }
            if ((attIsExternal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((ulong)(attIsExternal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((attExternalLink == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(attExternalLink));
            }
            if ((attIsCurrentVersion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((ulong)(attIsCurrentVersion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((attVersion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(attVersion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((attThumbnail == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((object)(attThumbnail));
            }
            if ((attIsDeleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((ulong)(attIsDeleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int attId, 
                    global::System.Nullable<int> attCaseId, 
                    global::System.Nullable<global::System.DateTime> attCreated, 
                    global::System.Nullable<int> attCreatedById, 
                    System.DateTime attModified, 
                    int attModifiedById, 
                    string attName, 
                    string attTitle, 
                    string attDescription, 
                    object attValue, 
                    global::System.Nullable<ulong> attIsExternal, 
                    string attExternalLink, 
                    global::System.Nullable<ulong> attIsCurrentVersion, 
                    global::System.Nullable<int> attVersion, 
                    object attThumbnail, 
                    global::System.Nullable<ulong> attIsDeleted, 
                    int Original_attHistId, 
                    int Original_attId, 
                    global::System.Nullable<int> Original_attCaseId, 
                    global::System.Nullable<global::System.DateTime> Original_attCreated, 
                    global::System.Nullable<int> Original_attCreatedById, 
                    System.DateTime Original_attModified, 
                    int Original_attModifiedById, 
                    string Original_attName, 
                    string Original_attTitle, 
                    object Original_attValue, 
                    global::System.Nullable<ulong> Original_attIsExternal, 
                    string Original_attExternalLink, 
                    global::System.Nullable<ulong> Original_attIsCurrentVersion, 
                    global::System.Nullable<int> Original_attVersion, 
                    object Original_attThumbnail, 
                    global::System.Nullable<ulong> Original_attIsDeleted) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(attId));
            if ((attCaseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(attCaseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((attCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(attCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((attCreatedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(attCreatedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(attModified));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(attModifiedById));
            if ((attName == null)) {
                throw new global::System.ArgumentNullException("attName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(attName));
            }
            if ((attTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(attTitle));
            }
            if ((attDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(attDescription));
            }
            if ((attValue == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(attValue));
            }
            if ((attIsExternal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((ulong)(attIsExternal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((attExternalLink == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(attExternalLink));
            }
            if ((attIsCurrentVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((ulong)(attIsCurrentVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((attVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(attVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((attThumbnail == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(attThumbnail));
            }
            if ((attIsDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((ulong)(attIsDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_attHistId));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_attId));
            if ((Original_attCaseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_attCaseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_attCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_attCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_attCreatedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_attCreatedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_attModified));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_attModifiedById));
            if ((Original_attName == null)) {
                throw new global::System.ArgumentNullException("Original_attName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_attName));
            }
            if ((Original_attTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_attTitle));
            }
            if ((Original_attValue == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(Original_attValue));
            }
            if ((Original_attIsExternal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((ulong)(Original_attIsExternal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_attExternalLink == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_attExternalLink));
            }
            if ((Original_attIsCurrentVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((ulong)(Original_attIsCurrentVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_attVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_attVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_attThumbnail == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(Original_attThumbnail));
            }
            if ((Original_attIsDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((ulong)(Original_attIsDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class casecommentTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public casecommentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "casecomment";
            tableMapping.ColumnMappings.Add("comId", "comId");
            tableMapping.ColumnMappings.Add("comText", "comText");
            tableMapping.ColumnMappings.Add("comDate", "comDate");
            tableMapping.ColumnMappings.Add("comCaseId", "comCaseId");
            tableMapping.ColumnMappings.Add("comUserId", "comUserId");
            tableMapping.ColumnMappings.Add("comStatusId", "comStatusId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `casecomment` WHERE ((`comId` = @Original_comId) AND (`comDate` = @Original_comDate) AND ((@IsNull_comCaseId = 1 AND `comCaseId` IS NULL) OR (`comCaseId` = @Original_comCaseId)) AND ((@IsNull_comUserId = 1 AND `comUserId` IS NULL) OR (`comUserId` = @Original_comUserId)) AND ((@IsNull_comStatusId = 1 AND `comStatusId` IS NULL) OR (`comStatusId` = @Original_comStatusId)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "comDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_comCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_comUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_comStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `casecomment` (`comText`, `comDate`, `comCaseId`, `comUserId`, `comSt" +
                "atusId`) VALUES (@comText, @comDate, @comCaseId, @comUserId, @comStatusId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comText";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "comText";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "comDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comCaseId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comUserId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comStatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `casecomment` SET `comText` = @comText, `comDate` = @comDate, `comCaseId` = @comCaseId, `comUserId` = @comUserId, `comStatusId` = @comStatusId WHERE ((`comId` = @Original_comId) AND (`comDate` = @Original_comDate) AND ((@IsNull_comCaseId = 1 AND `comCaseId` IS NULL) OR (`comCaseId` = @Original_comCaseId)) AND ((@IsNull_comUserId = 1 AND `comUserId` IS NULL) OR (`comUserId` = @Original_comUserId)) AND ((@IsNull_comStatusId = 1 AND `comStatusId` IS NULL) OR (`comStatusId` = @Original_comStatusId)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comText";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "comText";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "comDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comCaseId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comUserId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@comStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comStatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "comDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_comCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_comUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_comStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_comStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "comStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `comId`, `comText`, `comDate`, `comCaseId`, `comUserId`, `comStatusId` FRO" +
                "M `casecomment`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.casecommentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.casecommentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.casecommentDataTable dataTable = new amodDataSet.casecommentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.casecommentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "casecomment");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_comId, System.DateTime Original_comDate, global::System.Nullable<int> Original_comCaseId, global::System.Nullable<int> Original_comUserId, global::System.Nullable<int> Original_comStatusId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_comId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_comDate));
            if ((Original_comCaseId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_comCaseId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_comUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_comUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_comStatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_comStatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string comText, System.DateTime comDate, global::System.Nullable<int> comCaseId, global::System.Nullable<int> comUserId, global::System.Nullable<int> comStatusId) {
            if ((comText == null)) {
                throw new global::System.ArgumentNullException("comText");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(comText));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(comDate));
            if ((comCaseId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(comCaseId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((comUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(comUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((comStatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(comStatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string comText, System.DateTime comDate, global::System.Nullable<int> comCaseId, global::System.Nullable<int> comUserId, global::System.Nullable<int> comStatusId, int Original_comId, System.DateTime Original_comDate, global::System.Nullable<int> Original_comCaseId, global::System.Nullable<int> Original_comUserId, global::System.Nullable<int> Original_comStatusId) {
            if ((comText == null)) {
                throw new global::System.ArgumentNullException("comText");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(comText));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(comDate));
            if ((comCaseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(comCaseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((comUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(comUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((comStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(comStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_comId));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_comDate));
            if ((Original_comCaseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_comCaseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_comUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_comUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_comStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_comStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class casedefinitionTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public casedefinitionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "casedefinition";
            tableMapping.ColumnMappings.Add("caseId", "caseId");
            tableMapping.ColumnMappings.Add("caseTitle", "caseTitle");
            tableMapping.ColumnMappings.Add("caseOwnerId", "caseOwnerId");
            tableMapping.ColumnMappings.Add("caseCreated", "caseCreated");
            tableMapping.ColumnMappings.Add("caseCreatedById", "caseCreatedById");
            tableMapping.ColumnMappings.Add("caseModified", "caseModified");
            tableMapping.ColumnMappings.Add("caseModifiedById", "caseModifiedById");
            tableMapping.ColumnMappings.Add("caseForwarded", "caseForwarded");
            tableMapping.ColumnMappings.Add("caseForwardedById", "caseForwardedById");
            tableMapping.ColumnMappings.Add("caseProcedureId", "caseProcedureId");
            tableMapping.ColumnMappings.Add("caseStatusId", "caseStatusId");
            tableMapping.ColumnMappings.Add("caseVersion", "caseVersion");
            tableMapping.ColumnMappings.Add("caseIsCurrentVersion", "caseIsCurrentVersion");
            tableMapping.ColumnMappings.Add("caseVarchar1", "caseVarchar1");
            tableMapping.ColumnMappings.Add("caseVarchar2", "caseVarchar2");
            tableMapping.ColumnMappings.Add("caseVarchar3", "caseVarchar3");
            tableMapping.ColumnMappings.Add("caseText1", "caseText1");
            tableMapping.ColumnMappings.Add("caseText2", "caseText2");
            tableMapping.ColumnMappings.Add("caseText3", "caseText3");
            tableMapping.ColumnMappings.Add("caseNumber1", "caseNumber1");
            tableMapping.ColumnMappings.Add("caseNumber2", "caseNumber2");
            tableMapping.ColumnMappings.Add("caseNumber3", "caseNumber3");
            tableMapping.ColumnMappings.Add("caseDateTime1", "caseDateTime1");
            tableMapping.ColumnMappings.Add("caseDateTime2", "caseDateTime2");
            tableMapping.ColumnMappings.Add("caseDateTime3", "caseDateTime3");
            tableMapping.ColumnMappings.Add("caseForwardedCC", "caseForwardedCC");
            tableMapping.ColumnMappings.Add("caseIsClosed", "caseIsClosed");
            tableMapping.ColumnMappings.Add("caseNumber4", "caseNumber4");
            tableMapping.ColumnMappings.Add("caseNumber5", "caseNumber5");
            tableMapping.ColumnMappings.Add("caseNumber6", "caseNumber6");
            tableMapping.ColumnMappings.Add("caseNumber7", "caseNumber7");
            tableMapping.ColumnMappings.Add("caseNumber8", "caseNumber8");
            tableMapping.ColumnMappings.Add("caseNumber9", "caseNumber9");
            tableMapping.ColumnMappings.Add("caseNumber10", "caseNumber10");
            tableMapping.ColumnMappings.Add("caseVarchar4", "caseVarchar4");
            tableMapping.ColumnMappings.Add("caseVarchar5", "caseVarchar5");
            tableMapping.ColumnMappings.Add("caseVarchar6", "caseVarchar6");
            tableMapping.ColumnMappings.Add("caseVarchar7", "caseVarchar7");
            tableMapping.ColumnMappings.Add("caseVarchar8", "caseVarchar8");
            tableMapping.ColumnMappings.Add("caseVarchar9", "caseVarchar9");
            tableMapping.ColumnMappings.Add("caseVarchar10", "caseVarchar10");
            tableMapping.ColumnMappings.Add("caseVarchar11", "caseVarchar11");
            tableMapping.ColumnMappings.Add("caseVarchar12", "caseVarchar12");
            tableMapping.ColumnMappings.Add("caseVarchar13", "caseVarchar13");
            tableMapping.ColumnMappings.Add("caseVarchar14", "caseVarchar14");
            tableMapping.ColumnMappings.Add("caseVarchar15", "caseVarchar15");
            tableMapping.ColumnMappings.Add("caseVarchar16", "caseVarchar16");
            tableMapping.ColumnMappings.Add("caseVarchar17", "caseVarchar17");
            tableMapping.ColumnMappings.Add("caseVarchar18", "caseVarchar18");
            tableMapping.ColumnMappings.Add("caseVarchar19", "caseVarchar19");
            tableMapping.ColumnMappings.Add("caseVarchar20", "caseVarchar20");
            tableMapping.ColumnMappings.Add("caseDateTime4", "caseDateTime4");
            tableMapping.ColumnMappings.Add("caseDateTime5", "caseDateTime5");
            tableMapping.ColumnMappings.Add("caseDateTime6", "caseDateTime6");
            tableMapping.ColumnMappings.Add("caseDateTime7", "caseDateTime7");
            tableMapping.ColumnMappings.Add("caseDateTime8", "caseDateTime8");
            tableMapping.ColumnMappings.Add("caseDateTime9", "caseDateTime9");
            tableMapping.ColumnMappings.Add("caseDateTime10", "caseDateTime10");
            tableMapping.ColumnMappings.Add("caseText4", "caseText4");
            tableMapping.ColumnMappings.Add("caseText5", "caseText5");
            tableMapping.ColumnMappings.Add("caseText6", "caseText6");
            tableMapping.ColumnMappings.Add("caseText7", "caseText7");
            tableMapping.ColumnMappings.Add("caseText8", "caseText8");
            tableMapping.ColumnMappings.Add("caseText9", "caseText9");
            tableMapping.ColumnMappings.Add("caseText10", "caseText10");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `casedefinition` WHERE ((`caseId` = @Original_caseId) AND (`caseTitle" +
                "` = @Original_caseTitle) AND (`caseOwnerId` = @Original_caseOwnerId) AND (`caseC" +
                "reated` = @Original_caseCreated) AND (`caseCreatedById` = @Original_caseCreatedB" +
                "yId) AND (`caseModified` = @Original_caseModified) AND (`caseModifiedById` = @Or" +
                "iginal_caseModifiedById) AND ((@IsNull_caseForwarded = 1 AND `caseForwarded` IS " +
                "NULL) OR (`caseForwarded` = @Original_caseForwarded)) AND ((@IsNull_caseForwarde" +
                "dById = 1 AND `caseForwardedById` IS NULL) OR (`caseForwardedById` = @Original_c" +
                "aseForwardedById)) AND (`caseProcedureId` = @Original_caseProcedureId) AND ((@Is" +
                "Null_caseStatusId = 1 AND `caseStatusId` IS NULL) OR (`caseStatusId` = @Original" +
                "_caseStatusId)) AND (`caseVersion` = @Original_caseVersion) AND (`caseIsCurrentV" +
                "ersion` = @Original_caseIsCurrentVersion) AND ((@IsNull_caseVarchar1 = 1 AND `ca" +
                "seVarchar1` IS NULL) OR (`caseVarchar1` = @Original_caseVarchar1)) AND ((@IsNull" +
                "_caseVarchar2 = 1 AND `caseVarchar2` IS NULL) OR (`caseVarchar2` = @Original_cas" +
                "eVarchar2)) AND ((@IsNull_caseVarchar3 = 1 AND `caseVarchar3` IS NULL) OR (`case" +
                "Varchar3` = @Original_caseVarchar3)) AND ((@IsNull_caseNumber1 = 1 AND `caseNumb" +
                "er1` IS NULL) OR (`caseNumber1` = @Original_caseNumber1)) AND ((@IsNull_caseNumb" +
                "er2 = 1 AND `caseNumber2` IS NULL) OR (`caseNumber2` = @Original_caseNumber2)) A" +
                "ND ((@IsNull_caseNumber3 = 1 AND `caseNumber3` IS NULL) OR (`caseNumber3` = @Ori" +
                "ginal_caseNumber3)) AND ((@IsNull_caseDateTime1 = 1 AND `caseDateTime1` IS NULL)" +
                " OR (`caseDateTime1` = @Original_caseDateTime1)) AND ((@IsNull_caseDateTime2 = 1" +
                " AND `caseDateTime2` IS NULL) OR (`caseDateTime2` = @Original_caseDateTime2)) AN" +
                "D ((@IsNull_caseDateTime3 = 1 AND `caseDateTime3` IS NULL) OR (`caseDateTime3` =" +
                " @Original_caseDateTime3)) AND ((@IsNull_caseForwardedCC = 1 AND `caseForwardedC" +
                "C` IS NULL) OR (`caseForwardedCC` = @Original_caseForwardedCC)) AND ((@IsNull_ca" +
                "seIsClosed = 1 AND `caseIsClosed` IS NULL) OR (`caseIsClosed` = @Original_caseIs" +
                "Closed)) AND ((@IsNull_caseNumber4 = 1 AND `caseNumber4` IS NULL) OR (`caseNumbe" +
                "r4` = @Original_caseNumber4)) AND ((@IsNull_caseNumber5 = 1 AND `caseNumber5` IS" +
                " NULL) OR (`caseNumber5` = @Original_caseNumber5)) AND ((@IsNull_caseNumber6 = 1" +
                " AND `caseNumber6` IS NULL) OR (`caseNumber6` = @Original_caseNumber6)) AND ((@I" +
                "sNull_caseNumber7 = 1 AND `caseNumber7` IS NULL) OR (`caseNumber7` = @Original_c" +
                "aseNumber7)) AND ((@IsNull_caseNumber8 = 1 AND `caseNumber8` IS NULL) OR (`caseN" +
                "umber8` = @Original_caseNumber8)) AND ((@IsNull_caseNumber9 = 1 AND `caseNumber9" +
                "` IS NULL) OR (`caseNumber9` = @Original_caseNumber9)) AND ((@IsNull_caseNumber1" +
                "0 = 1 AND `caseNumber10` IS NULL) OR (`caseNumber10` = @Original_caseNumber10)) " +
                "AND ((@IsNull_caseVarchar4 = 1 AND `caseVarchar4` IS NULL) OR (`caseVarchar4` = " +
                "@Original_caseVarchar4)) AND ((@IsNull_caseVarchar5 = 1 AND `caseVarchar5` IS NU" +
                "LL) OR (`caseVarchar5` = @Original_caseVarchar5)) AND ((@IsNull_caseVarchar6 = 1" +
                " AND `caseVarchar6` IS NULL) OR (`caseVarchar6` = @Original_caseVarchar6)) AND (" +
                "(@IsNull_caseVarchar7 = 1 AND `caseVarchar7` IS NULL) OR (`caseVarchar7` = @Orig" +
                "inal_caseVarchar7)) AND ((@IsNull_caseVarchar8 = 1 AND `caseVarchar8` IS NULL) O" +
                "R (`caseVarchar8` = @Original_caseVarchar8)) AND ((@IsNull_caseVarchar9 = 1 AND " +
                "`caseVarchar9` IS NULL) OR (`caseVarchar9` = @Original_caseVarchar9)) AND ((@IsN" +
                "ull_caseVarchar10 = 1 AND `caseVarchar10` IS NULL) OR (`caseVarchar10` = @Origin" +
                "al_caseVarchar10)) AND ((@IsNull_caseVarchar11 = 1 AND `caseVarchar11` IS NULL) " +
                "OR (`caseVarchar11` = @Original_caseVarchar11)) AND ((@IsNull_caseVarchar12 = 1 " +
                "AND `caseVarchar12` IS NULL) OR (`caseVarchar12` = @Original_caseVarchar12)) AND" +
                " ((@IsNull_caseVarchar13 = 1 AND `caseVarchar13` IS NULL) OR (`caseVarchar13` = " +
                "@Original_caseVarchar13)) AND ((@IsNull_caseVarchar14 = 1 AND `caseVarchar14` IS" +
                " NULL) OR (`caseVarchar14` = @Original_caseVarchar14)) AND ((@IsNull_caseVarchar" +
                "15 = 1 AND `caseVarchar15` IS NULL) OR (`caseVarchar15` = @Original_caseVarchar1" +
                "5)) AND ((@IsNull_caseVarchar16 = 1 AND `caseVarchar16` IS NULL) OR (`caseVarcha" +
                "r16` = @Original_caseVarchar16)) AND ((@IsNull_caseVarchar17 = 1 AND `caseVarcha" +
                "r17` IS NULL) OR (`caseVarchar17` = @Original_caseVarchar17)) AND ((@IsNull_case" +
                "Varchar18 = 1 AND `caseVarchar18` IS NULL) OR (`caseVarchar18` = @Original_caseV" +
                "archar18)) AND ((@IsNull_caseVarchar19 = 1 AND `caseVarchar19` IS NULL) OR (`cas" +
                "eVarchar19` = @Original_caseVarchar19)) AND ((@IsNull_caseVarchar20 = 1 AND `cas" +
                "eVarchar20` IS NULL) OR (`caseVarchar20` = @Original_caseVarchar20)) AND ((@IsNu" +
                "ll_caseDateTime4 = 1 AND `caseDateTime4` IS NULL) OR (`caseDateTime4` = @Origina" +
                "l_caseDateTime4)) AND ((@IsNull_caseDateTime5 = 1 AND `caseDateTime5` IS NULL) O" +
                "R (`caseDateTime5` = @Original_caseDateTime5)) AND ((@IsNull_caseDateTime6 = 1 A" +
                "ND `caseDateTime6` IS NULL) OR (`caseDateTime6` = @Original_caseDateTime6)) AND " +
                "((@IsNull_caseDateTime7 = 1 AND `caseDateTime7` IS NULL) OR (`caseDateTime7` = @" +
                "Original_caseDateTime7)) AND ((@IsNull_caseDateTime8 = 1 AND `caseDateTime8` IS " +
                "NULL) OR (`caseDateTime8` = @Original_caseDateTime8)) AND ((@IsNull_caseDateTime" +
                "9 = 1 AND `caseDateTime9` IS NULL) OR (`caseDateTime9` = @Original_caseDateTime9" +
                ")) AND ((@IsNull_caseDateTime10 = 1 AND `caseDateTime10` IS NULL) OR (`caseDateT" +
                "ime10` = @Original_caseDateTime10)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwarded";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwarded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwardedCC";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseIsClosed";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar11";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar12";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar13";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar14";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar15";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar16";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar17";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar18";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar19";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar20";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `casedefinition` (`caseTitle`, `caseOwnerId`, `caseCreated`, `caseCre" +
                "atedById`, `caseModified`, `caseModifiedById`, `caseForwarded`, `caseForwardedBy" +
                "Id`, `caseProcedureId`, `caseStatusId`, `caseVersion`, `caseIsCurrentVersion`, `" +
                "caseVarchar1`, `caseVarchar2`, `caseVarchar3`, `caseText1`, `caseText2`, `caseTe" +
                "xt3`, `caseNumber1`, `caseNumber2`, `caseNumber3`, `caseDateTime1`, `caseDateTim" +
                "e2`, `caseDateTime3`, `caseForwardedCC`, `caseIsClosed`, `caseNumber4`, `caseNum" +
                "ber5`, `caseNumber6`, `caseNumber7`, `caseNumber8`, `caseNumber9`, `caseNumber10" +
                "`, `caseVarchar4`, `caseVarchar5`, `caseVarchar6`, `caseVarchar7`, `caseVarchar8" +
                "`, `caseVarchar9`, `caseVarchar10`, `caseVarchar11`, `caseVarchar12`, `caseVarch" +
                "ar13`, `caseVarchar14`, `caseVarchar15`, `caseVarchar16`, `caseVarchar17`, `case" +
                "Varchar18`, `caseVarchar19`, `caseVarchar20`, `caseDateTime4`, `caseDateTime5`, " +
                "`caseDateTime6`, `caseDateTime7`, `caseDateTime8`, `caseDateTime9`, `caseDateTim" +
                "e10`, `caseText4`, `caseText5`, `caseText6`, `caseText7`, `caseText8`, `caseText" +
                "9`, `caseText10`) VALUES (@caseTitle, @caseOwnerId, @caseCreated, @caseCreatedBy" +
                "Id, @caseModified, @caseModifiedById, @caseForwarded, @caseForwardedById, @caseP" +
                "rocedureId, @caseStatusId, @caseVersion, @caseIsCurrentVersion, @caseVarchar1, @" +
                "caseVarchar2, @caseVarchar3, @caseText1, @caseText2, @caseText3, @caseNumber1, @" +
                "caseNumber2, @caseNumber3, @caseDateTime1, @caseDateTime2, @caseDateTime3, @case" +
                "ForwardedCC, @caseIsClosed, @caseNumber4, @caseNumber5, @caseNumber6, @caseNumbe" +
                "r7, @caseNumber8, @caseNumber9, @caseNumber10, @caseVarchar4, @caseVarchar5, @ca" +
                "seVarchar6, @caseVarchar7, @caseVarchar8, @caseVarchar9, @caseVarchar10, @caseVa" +
                "rchar11, @caseVarchar12, @caseVarchar13, @caseVarchar14, @caseVarchar15, @caseVa" +
                "rchar16, @caseVarchar17, @caseVarchar18, @caseVarchar19, @caseVarchar20, @caseDa" +
                "teTime4, @caseDateTime5, @caseDateTime6, @caseDateTime7, @caseDateTime8, @caseDa" +
                "teTime9, @caseDateTime10, @caseText4, @caseText5, @caseText6, @caseText7, @caseT" +
                "ext8, @caseText9, @caseText10)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwarded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsCurrentVersion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText10";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `casedefinition` SET `caseTitle` = @caseTitle, `caseOwnerId` = @caseOwnerI" +
                "d, `caseCreated` = @caseCreated, `caseCreatedById` = @caseCreatedById, `caseModi" +
                "fied` = @caseModified, `caseModifiedById` = @caseModifiedById, `caseForwarded` =" +
                " @caseForwarded, `caseForwardedById` = @caseForwardedById, `caseProcedureId` = @" +
                "caseProcedureId, `caseStatusId` = @caseStatusId, `caseVersion` = @caseVersion, `" +
                "caseIsCurrentVersion` = @caseIsCurrentVersion, `caseVarchar1` = @caseVarchar1, `" +
                "caseVarchar2` = @caseVarchar2, `caseVarchar3` = @caseVarchar3, `caseText1` = @ca" +
                "seText1, `caseText2` = @caseText2, `caseText3` = @caseText3, `caseNumber1` = @ca" +
                "seNumber1, `caseNumber2` = @caseNumber2, `caseNumber3` = @caseNumber3, `caseDate" +
                "Time1` = @caseDateTime1, `caseDateTime2` = @caseDateTime2, `caseDateTime3` = @ca" +
                "seDateTime3, `caseForwardedCC` = @caseForwardedCC, `caseIsClosed` = @caseIsClose" +
                "d, `caseNumber4` = @caseNumber4, `caseNumber5` = @caseNumber5, `caseNumber6` = @" +
                "caseNumber6, `caseNumber7` = @caseNumber7, `caseNumber8` = @caseNumber8, `caseNu" +
                "mber9` = @caseNumber9, `caseNumber10` = @caseNumber10, `caseVarchar4` = @caseVar" +
                "char4, `caseVarchar5` = @caseVarchar5, `caseVarchar6` = @caseVarchar6, `caseVarc" +
                "har7` = @caseVarchar7, `caseVarchar8` = @caseVarchar8, `caseVarchar9` = @caseVar" +
                "char9, `caseVarchar10` = @caseVarchar10, `caseVarchar11` = @caseVarchar11, `case" +
                "Varchar12` = @caseVarchar12, `caseVarchar13` = @caseVarchar13, `caseVarchar14` =" +
                " @caseVarchar14, `caseVarchar15` = @caseVarchar15, `caseVarchar16` = @caseVarcha" +
                "r16, `caseVarchar17` = @caseVarchar17, `caseVarchar18` = @caseVarchar18, `caseVa" +
                "rchar19` = @caseVarchar19, `caseVarchar20` = @caseVarchar20, `caseDateTime4` = @" +
                "caseDateTime4, `caseDateTime5` = @caseDateTime5, `caseDateTime6` = @caseDateTime" +
                "6, `caseDateTime7` = @caseDateTime7, `caseDateTime8` = @caseDateTime8, `caseDate" +
                "Time9` = @caseDateTime9, `caseDateTime10` = @caseDateTime10, `caseText4` = @case" +
                "Text4, `caseText5` = @caseText5, `caseText6` = @caseText6, `caseText7` = @caseTe" +
                "xt7, `caseText8` = @caseText8, `caseText9` = @caseText9, `caseText10` = @caseTex" +
                "t10 WHERE ((`caseId` = @Original_caseId) AND (`caseTitle` = @Original_caseTitle)" +
                " AND (`caseOwnerId` = @Original_caseOwnerId) AND (`caseCreated` = @Original_case" +
                "Created) AND (`caseCreatedById` = @Original_caseCreatedById) AND (`caseModified`" +
                " = @Original_caseModified) AND (`caseModifiedById` = @Original_caseModifiedById)" +
                " AND ((@IsNull_caseForwarded = 1 AND `caseForwarded` IS NULL) OR (`caseForwarded" +
                "` = @Original_caseForwarded)) AND ((@IsNull_caseForwardedById = 1 AND `caseForwa" +
                "rdedById` IS NULL) OR (`caseForwardedById` = @Original_caseForwardedById)) AND (" +
                "`caseProcedureId` = @Original_caseProcedureId) AND ((@IsNull_caseStatusId = 1 AN" +
                "D `caseStatusId` IS NULL) OR (`caseStatusId` = @Original_caseStatusId)) AND (`ca" +
                "seVersion` = @Original_caseVersion) AND (`caseIsCurrentVersion` = @Original_case" +
                "IsCurrentVersion) AND ((@IsNull_caseVarchar1 = 1 AND `caseVarchar1` IS NULL) OR " +
                "(`caseVarchar1` = @Original_caseVarchar1)) AND ((@IsNull_caseVarchar2 = 1 AND `c" +
                "aseVarchar2` IS NULL) OR (`caseVarchar2` = @Original_caseVarchar2)) AND ((@IsNul" +
                "l_caseVarchar3 = 1 AND `caseVarchar3` IS NULL) OR (`caseVarchar3` = @Original_ca" +
                "seVarchar3)) AND ((@IsNull_caseNumber1 = 1 AND `caseNumber1` IS NULL) OR (`caseN" +
                "umber1` = @Original_caseNumber1)) AND ((@IsNull_caseNumber2 = 1 AND `caseNumber2" +
                "` IS NULL) OR (`caseNumber2` = @Original_caseNumber2)) AND ((@IsNull_caseNumber3" +
                " = 1 AND `caseNumber3` IS NULL) OR (`caseNumber3` = @Original_caseNumber3)) AND " +
                "((@IsNull_caseDateTime1 = 1 AND `caseDateTime1` IS NULL) OR (`caseDateTime1` = @" +
                "Original_caseDateTime1)) AND ((@IsNull_caseDateTime2 = 1 AND `caseDateTime2` IS " +
                "NULL) OR (`caseDateTime2` = @Original_caseDateTime2)) AND ((@IsNull_caseDateTime" +
                "3 = 1 AND `caseDateTime3` IS NULL) OR (`caseDateTime3` = @Original_caseDateTime3" +
                ")) AND ((@IsNull_caseForwardedCC = 1 AND `caseForwardedCC` IS NULL) OR (`caseFor" +
                "wardedCC` = @Original_caseForwardedCC)) AND ((@IsNull_caseIsClosed = 1 AND `case" +
                "IsClosed` IS NULL) OR (`caseIsClosed` = @Original_caseIsClosed)) AND ((@IsNull_c" +
                "aseNumber4 = 1 AND `caseNumber4` IS NULL) OR (`caseNumber4` = @Original_caseNumb" +
                "er4)) AND ((@IsNull_caseNumber5 = 1 AND `caseNumber5` IS NULL) OR (`caseNumber5`" +
                " = @Original_caseNumber5)) AND ((@IsNull_caseNumber6 = 1 AND `caseNumber6` IS NU" +
                "LL) OR (`caseNumber6` = @Original_caseNumber6)) AND ((@IsNull_caseNumber7 = 1 AN" +
                "D `caseNumber7` IS NULL) OR (`caseNumber7` = @Original_caseNumber7)) AND ((@IsNu" +
                "ll_caseNumber8 = 1 AND `caseNumber8` IS NULL) OR (`caseNumber8` = @Original_case" +
                "Number8)) AND ((@IsNull_caseNumber9 = 1 AND `caseNumber9` IS NULL) OR (`caseNumb" +
                "er9` = @Original_caseNumber9)) AND ((@IsNull_caseNumber10 = 1 AND `caseNumber10`" +
                " IS NULL) OR (`caseNumber10` = @Original_caseNumber10)) AND ((@IsNull_caseVarcha" +
                "r4 = 1 AND `caseVarchar4` IS NULL) OR (`caseVarchar4` = @Original_caseVarchar4))" +
                " AND ((@IsNull_caseVarchar5 = 1 AND `caseVarchar5` IS NULL) OR (`caseVarchar5` =" +
                " @Original_caseVarchar5)) AND ((@IsNull_caseVarchar6 = 1 AND `caseVarchar6` IS N" +
                "ULL) OR (`caseVarchar6` = @Original_caseVarchar6)) AND ((@IsNull_caseVarchar7 = " +
                "1 AND `caseVarchar7` IS NULL) OR (`caseVarchar7` = @Original_caseVarchar7)) AND " +
                "((@IsNull_caseVarchar8 = 1 AND `caseVarchar8` IS NULL) OR (`caseVarchar8` = @Ori" +
                "ginal_caseVarchar8)) AND ((@IsNull_caseVarchar9 = 1 AND `caseVarchar9` IS NULL) " +
                "OR (`caseVarchar9` = @Original_caseVarchar9)) AND ((@IsNull_caseVarchar10 = 1 AN" +
                "D `caseVarchar10` IS NULL) OR (`caseVarchar10` = @Original_caseVarchar10)) AND (" +
                "(@IsNull_caseVarchar11 = 1 AND `caseVarchar11` IS NULL) OR (`caseVarchar11` = @O" +
                "riginal_caseVarchar11)) AND ((@IsNull_caseVarchar12 = 1 AND `caseVarchar12` IS N" +
                "ULL) OR (`caseVarchar12` = @Original_caseVarchar12)) AND ((@IsNull_caseVarchar13" +
                " = 1 AND `caseVarchar13` IS NULL) OR (`caseVarchar13` = @Original_caseVarchar13)" +
                ") AND ((@IsNull_caseVarchar14 = 1 AND `caseVarchar14` IS NULL) OR (`caseVarchar1" +
                "4` = @Original_caseVarchar14)) AND ((@IsNull_caseVarchar15 = 1 AND `caseVarchar1" +
                "5` IS NULL) OR (`caseVarchar15` = @Original_caseVarchar15)) AND ((@IsNull_caseVa" +
                "rchar16 = 1 AND `caseVarchar16` IS NULL) OR (`caseVarchar16` = @Original_caseVar" +
                "char16)) AND ((@IsNull_caseVarchar17 = 1 AND `caseVarchar17` IS NULL) OR (`caseV" +
                "archar17` = @Original_caseVarchar17)) AND ((@IsNull_caseVarchar18 = 1 AND `caseV" +
                "archar18` IS NULL) OR (`caseVarchar18` = @Original_caseVarchar18)) AND ((@IsNull" +
                "_caseVarchar19 = 1 AND `caseVarchar19` IS NULL) OR (`caseVarchar19` = @Original_" +
                "caseVarchar19)) AND ((@IsNull_caseVarchar20 = 1 AND `caseVarchar20` IS NULL) OR " +
                "(`caseVarchar20` = @Original_caseVarchar20)) AND ((@IsNull_caseDateTime4 = 1 AND" +
                " `caseDateTime4` IS NULL) OR (`caseDateTime4` = @Original_caseDateTime4)) AND ((" +
                "@IsNull_caseDateTime5 = 1 AND `caseDateTime5` IS NULL) OR (`caseDateTime5` = @Or" +
                "iginal_caseDateTime5)) AND ((@IsNull_caseDateTime6 = 1 AND `caseDateTime6` IS NU" +
                "LL) OR (`caseDateTime6` = @Original_caseDateTime6)) AND ((@IsNull_caseDateTime7 " +
                "= 1 AND `caseDateTime7` IS NULL) OR (`caseDateTime7` = @Original_caseDateTime7))" +
                " AND ((@IsNull_caseDateTime8 = 1 AND `caseDateTime8` IS NULL) OR (`caseDateTime8" +
                "` = @Original_caseDateTime8)) AND ((@IsNull_caseDateTime9 = 1 AND `caseDateTime9" +
                "` IS NULL) OR (`caseDateTime9` = @Original_caseDateTime9)) AND ((@IsNull_caseDat" +
                "eTime10 = 1 AND `caseDateTime10` IS NULL) OR (`caseDateTime10` = @Original_caseD" +
                "ateTime10)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwarded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsCurrentVersion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwarded";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwarded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwardedCC";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseIsClosed";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar11";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar12";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar13";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar14";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar15";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar16";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar17";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar18";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar19";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar20";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `caseId`, `caseTitle`, `caseOwnerId`, `caseCreated`, `caseCreatedById`, `caseModified`, `caseModifiedById`, `caseForwarded`, `caseForwardedById`, `caseProcedureId`, `caseStatusId`, `caseVersion`, `caseIsCurrentVersion`, `caseVarchar1`, `caseVarchar2`, `caseVarchar3`, `caseText1`, `caseText2`, `caseText3`, `caseNumber1`, `caseNumber2`, `caseNumber3`, `caseDateTime1`, `caseDateTime2`, `caseDateTime3`, `caseForwardedCC`, `caseIsClosed`, `caseNumber4`, `caseNumber5`, `caseNumber6`, `caseNumber7`, `caseNumber8`, `caseNumber9`, `caseNumber10`, `caseVarchar4`, `caseVarchar5`, `caseVarchar6`, `caseVarchar7`, `caseVarchar8`, `caseVarchar9`, `caseVarchar10`, `caseVarchar11`, `caseVarchar12`, `caseVarchar13`, `caseVarchar14`, `caseVarchar15`, `caseVarchar16`, `caseVarchar17`, `caseVarchar18`, `caseVarchar19`, `caseVarchar20`, `caseDateTime4`, `caseDateTime5`, `caseDateTime6`, `caseDateTime7`, `caseDateTime8`, `caseDateTime9`, `caseDateTime10`, `caseText4`, `caseText5`, `caseText6`, `caseText7`, `caseText8`, `caseText9`, `caseText10` FROM `casedefinition`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.casedefinitionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.casedefinitionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.casedefinitionDataTable dataTable = new amodDataSet.casedefinitionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.casedefinitionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "casedefinition");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_caseId, 
                    string Original_caseTitle, 
                    int Original_caseOwnerId, 
                    System.DateTime Original_caseCreated, 
                    int Original_caseCreatedById, 
                    System.DateTime Original_caseModified, 
                    int Original_caseModifiedById, 
                    global::System.Nullable<global::System.DateTime> Original_caseForwarded, 
                    global::System.Nullable<int> Original_caseForwardedById, 
                    int Original_caseProcedureId, 
                    global::System.Nullable<int> Original_caseStatusId, 
                    int Original_caseVersion, 
                    ulong Original_caseIsCurrentVersion, 
                    string Original_caseVarchar1, 
                    string Original_caseVarchar2, 
                    string Original_caseVarchar3, 
                    string Original_caseNumber1, 
                    string Original_caseNumber2, 
                    string Original_caseNumber3, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime3, 
                    string Original_caseForwardedCC, 
                    global::System.Nullable<ulong> Original_caseIsClosed, 
                    string Original_caseNumber4, 
                    string Original_caseNumber5, 
                    string Original_caseNumber6, 
                    string Original_caseNumber7, 
                    string Original_caseNumber8, 
                    string Original_caseNumber9, 
                    string Original_caseNumber10, 
                    string Original_caseVarchar4, 
                    string Original_caseVarchar5, 
                    string Original_caseVarchar6, 
                    string Original_caseVarchar7, 
                    string Original_caseVarchar8, 
                    string Original_caseVarchar9, 
                    string Original_caseVarchar10, 
                    string Original_caseVarchar11, 
                    string Original_caseVarchar12, 
                    string Original_caseVarchar13, 
                    string Original_caseVarchar14, 
                    string Original_caseVarchar15, 
                    string Original_caseVarchar16, 
                    string Original_caseVarchar17, 
                    string Original_caseVarchar18, 
                    string Original_caseVarchar19, 
                    string Original_caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime10) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_caseId));
            if ((Original_caseTitle == null)) {
                throw new global::System.ArgumentNullException("Original_caseTitle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_caseTitle));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_caseOwnerId));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_caseCreated));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_caseCreatedById));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_caseModified));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_caseModifiedById));
            if ((Original_caseForwarded.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_caseForwarded.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_caseForwardedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_caseForwardedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_caseProcedureId));
            if ((Original_caseStatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_caseStatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_caseVersion));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((ulong)(Original_caseIsCurrentVersion));
            if ((Original_caseVarchar1 == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_caseVarchar1));
            }
            if ((Original_caseVarchar2 == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_caseVarchar2));
            }
            if ((Original_caseVarchar3 == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_caseVarchar3));
            }
            if ((Original_caseNumber1 == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_caseNumber1));
            }
            if ((Original_caseNumber2 == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_caseNumber2));
            }
            if ((Original_caseNumber3 == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_caseNumber3));
            }
            if ((Original_caseDateTime1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_caseDateTime1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTime)(Original_caseDateTime2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_caseDateTime3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_caseForwardedCC == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_caseForwardedCC));
            }
            if ((Original_caseIsClosed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((ulong)(Original_caseIsClosed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_caseNumber4 == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_caseNumber4));
            }
            if ((Original_caseNumber5 == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_caseNumber5));
            }
            if ((Original_caseNumber6 == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_caseNumber6));
            }
            if ((Original_caseNumber7 == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_caseNumber7));
            }
            if ((Original_caseNumber8 == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_caseNumber8));
            }
            if ((Original_caseNumber9 == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_caseNumber9));
            }
            if ((Original_caseNumber10 == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_caseNumber10));
            }
            if ((Original_caseVarchar4 == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_caseVarchar4));
            }
            if ((Original_caseVarchar5 == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_caseVarchar5));
            }
            if ((Original_caseVarchar6 == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_caseVarchar6));
            }
            if ((Original_caseVarchar7 == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_caseVarchar7));
            }
            if ((Original_caseVarchar8 == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_caseVarchar8));
            }
            if ((Original_caseVarchar9 == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_caseVarchar9));
            }
            if ((Original_caseVarchar10 == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_caseVarchar10));
            }
            if ((Original_caseVarchar11 == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_caseVarchar11));
            }
            if ((Original_caseVarchar12 == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_caseVarchar12));
            }
            if ((Original_caseVarchar13 == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_caseVarchar13));
            }
            if ((Original_caseVarchar14 == null)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((string)(Original_caseVarchar14));
            }
            if ((Original_caseVarchar15 == null)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((string)(Original_caseVarchar15));
            }
            if ((Original_caseVarchar16 == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_caseVarchar16));
            }
            if ((Original_caseVarchar17 == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_caseVarchar17));
            }
            if ((Original_caseVarchar18 == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_caseVarchar18));
            }
            if ((Original_caseVarchar19 == null)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_caseVarchar19));
            }
            if ((Original_caseVarchar20 == null)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((string)(Original_caseVarchar20));
            }
            if ((Original_caseDateTime4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((System.DateTime)(Original_caseDateTime4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((System.DateTime)(Original_caseDateTime5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((System.DateTime)(Original_caseDateTime6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((System.DateTime)(Original_caseDateTime7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((System.DateTime)(Original_caseDateTime8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[97].Value = ((System.DateTime)(Original_caseDateTime9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[99].Value = ((System.DateTime)(Original_caseDateTime10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string caseTitle, 
                    int caseOwnerId, 
                    System.DateTime caseCreated, 
                    int caseCreatedById, 
                    System.DateTime caseModified, 
                    int caseModifiedById, 
                    global::System.Nullable<global::System.DateTime> caseForwarded, 
                    global::System.Nullable<int> caseForwardedById, 
                    int caseProcedureId, 
                    global::System.Nullable<int> caseStatusId, 
                    int caseVersion, 
                    ulong caseIsCurrentVersion, 
                    string caseVarchar1, 
                    string caseVarchar2, 
                    string caseVarchar3, 
                    string caseText1, 
                    string caseText2, 
                    string caseText3, 
                    string caseNumber1, 
                    string caseNumber2, 
                    string caseNumber3, 
                    global::System.Nullable<global::System.DateTime> caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> caseDateTime3, 
                    string caseForwardedCC, 
                    global::System.Nullable<ulong> caseIsClosed, 
                    string caseNumber4, 
                    string caseNumber5, 
                    string caseNumber6, 
                    string caseNumber7, 
                    string caseNumber8, 
                    string caseNumber9, 
                    string caseNumber10, 
                    string caseVarchar4, 
                    string caseVarchar5, 
                    string caseVarchar6, 
                    string caseVarchar7, 
                    string caseVarchar8, 
                    string caseVarchar9, 
                    string caseVarchar10, 
                    string caseVarchar11, 
                    string caseVarchar12, 
                    string caseVarchar13, 
                    string caseVarchar14, 
                    string caseVarchar15, 
                    string caseVarchar16, 
                    string caseVarchar17, 
                    string caseVarchar18, 
                    string caseVarchar19, 
                    string caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> caseDateTime10, 
                    string caseText4, 
                    string caseText5, 
                    string caseText6, 
                    string caseText7, 
                    string caseText8, 
                    string caseText9, 
                    string caseText10) {
            if ((caseTitle == null)) {
                throw new global::System.ArgumentNullException("caseTitle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(caseTitle));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(caseOwnerId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(caseCreated));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(caseCreatedById));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(caseModified));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(caseModifiedById));
            if ((caseForwarded.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(caseForwarded.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((caseForwardedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(caseForwardedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(caseProcedureId));
            if ((caseStatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(caseStatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(caseVersion));
            this.Adapter.InsertCommand.Parameters[11].Value = ((ulong)(caseIsCurrentVersion));
            if ((caseVarchar1 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(caseVarchar1));
            }
            if ((caseVarchar2 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(caseVarchar2));
            }
            if ((caseVarchar3 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(caseVarchar3));
            }
            if ((caseText1 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(caseText1));
            }
            if ((caseText2 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(caseText2));
            }
            if ((caseText3 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(caseText3));
            }
            if ((caseNumber1 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(caseNumber1));
            }
            if ((caseNumber2 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(caseNumber2));
            }
            if ((caseNumber3 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(caseNumber3));
            }
            if ((caseDateTime1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(caseDateTime1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(caseDateTime2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(caseDateTime3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((caseForwardedCC == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(caseForwardedCC));
            }
            if ((caseIsClosed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((ulong)(caseIsClosed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((caseNumber4 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(caseNumber4));
            }
            if ((caseNumber5 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(caseNumber5));
            }
            if ((caseNumber6 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(caseNumber6));
            }
            if ((caseNumber7 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(caseNumber7));
            }
            if ((caseNumber8 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(caseNumber8));
            }
            if ((caseNumber9 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(caseNumber9));
            }
            if ((caseNumber10 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(caseNumber10));
            }
            if ((caseVarchar4 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(caseVarchar4));
            }
            if ((caseVarchar5 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(caseVarchar5));
            }
            if ((caseVarchar6 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(caseVarchar6));
            }
            if ((caseVarchar7 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(caseVarchar7));
            }
            if ((caseVarchar8 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(caseVarchar8));
            }
            if ((caseVarchar9 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(caseVarchar9));
            }
            if ((caseVarchar10 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(caseVarchar10));
            }
            if ((caseVarchar11 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(caseVarchar11));
            }
            if ((caseVarchar12 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(caseVarchar12));
            }
            if ((caseVarchar13 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(caseVarchar13));
            }
            if ((caseVarchar14 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(caseVarchar14));
            }
            if ((caseVarchar15 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(caseVarchar15));
            }
            if ((caseVarchar16 == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(caseVarchar16));
            }
            if ((caseVarchar17 == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(caseVarchar17));
            }
            if ((caseVarchar18 == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(caseVarchar18));
            }
            if ((caseVarchar19 == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(caseVarchar19));
            }
            if ((caseVarchar20 == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(caseVarchar20));
            }
            if ((caseDateTime4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((System.DateTime)(caseDateTime4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(caseDateTime5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((System.DateTime)(caseDateTime6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(caseDateTime7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(caseDateTime8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(caseDateTime9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((System.DateTime)(caseDateTime10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((caseText4 == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(caseText4));
            }
            if ((caseText5 == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(caseText5));
            }
            if ((caseText6 == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(caseText6));
            }
            if ((caseText7 == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(caseText7));
            }
            if ((caseText8 == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(caseText8));
            }
            if ((caseText9 == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(caseText9));
            }
            if ((caseText10 == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(caseText10));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string caseTitle, 
                    int caseOwnerId, 
                    System.DateTime caseCreated, 
                    int caseCreatedById, 
                    System.DateTime caseModified, 
                    int caseModifiedById, 
                    global::System.Nullable<global::System.DateTime> caseForwarded, 
                    global::System.Nullable<int> caseForwardedById, 
                    int caseProcedureId, 
                    global::System.Nullable<int> caseStatusId, 
                    int caseVersion, 
                    ulong caseIsCurrentVersion, 
                    string caseVarchar1, 
                    string caseVarchar2, 
                    string caseVarchar3, 
                    string caseText1, 
                    string caseText2, 
                    string caseText3, 
                    string caseNumber1, 
                    string caseNumber2, 
                    string caseNumber3, 
                    global::System.Nullable<global::System.DateTime> caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> caseDateTime3, 
                    string caseForwardedCC, 
                    global::System.Nullable<ulong> caseIsClosed, 
                    string caseNumber4, 
                    string caseNumber5, 
                    string caseNumber6, 
                    string caseNumber7, 
                    string caseNumber8, 
                    string caseNumber9, 
                    string caseNumber10, 
                    string caseVarchar4, 
                    string caseVarchar5, 
                    string caseVarchar6, 
                    string caseVarchar7, 
                    string caseVarchar8, 
                    string caseVarchar9, 
                    string caseVarchar10, 
                    string caseVarchar11, 
                    string caseVarchar12, 
                    string caseVarchar13, 
                    string caseVarchar14, 
                    string caseVarchar15, 
                    string caseVarchar16, 
                    string caseVarchar17, 
                    string caseVarchar18, 
                    string caseVarchar19, 
                    string caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> caseDateTime10, 
                    string caseText4, 
                    string caseText5, 
                    string caseText6, 
                    string caseText7, 
                    string caseText8, 
                    string caseText9, 
                    string caseText10, 
                    int Original_caseId, 
                    string Original_caseTitle, 
                    int Original_caseOwnerId, 
                    System.DateTime Original_caseCreated, 
                    int Original_caseCreatedById, 
                    System.DateTime Original_caseModified, 
                    int Original_caseModifiedById, 
                    global::System.Nullable<global::System.DateTime> Original_caseForwarded, 
                    global::System.Nullable<int> Original_caseForwardedById, 
                    int Original_caseProcedureId, 
                    global::System.Nullable<int> Original_caseStatusId, 
                    int Original_caseVersion, 
                    ulong Original_caseIsCurrentVersion, 
                    string Original_caseVarchar1, 
                    string Original_caseVarchar2, 
                    string Original_caseVarchar3, 
                    string Original_caseNumber1, 
                    string Original_caseNumber2, 
                    string Original_caseNumber3, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime3, 
                    string Original_caseForwardedCC, 
                    global::System.Nullable<ulong> Original_caseIsClosed, 
                    string Original_caseNumber4, 
                    string Original_caseNumber5, 
                    string Original_caseNumber6, 
                    string Original_caseNumber7, 
                    string Original_caseNumber8, 
                    string Original_caseNumber9, 
                    string Original_caseNumber10, 
                    string Original_caseVarchar4, 
                    string Original_caseVarchar5, 
                    string Original_caseVarchar6, 
                    string Original_caseVarchar7, 
                    string Original_caseVarchar8, 
                    string Original_caseVarchar9, 
                    string Original_caseVarchar10, 
                    string Original_caseVarchar11, 
                    string Original_caseVarchar12, 
                    string Original_caseVarchar13, 
                    string Original_caseVarchar14, 
                    string Original_caseVarchar15, 
                    string Original_caseVarchar16, 
                    string Original_caseVarchar17, 
                    string Original_caseVarchar18, 
                    string Original_caseVarchar19, 
                    string Original_caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime10) {
            if ((caseTitle == null)) {
                throw new global::System.ArgumentNullException("caseTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(caseTitle));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(caseOwnerId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(caseCreated));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(caseCreatedById));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(caseModified));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(caseModifiedById));
            if ((caseForwarded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(caseForwarded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((caseForwardedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(caseForwardedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(caseProcedureId));
            if ((caseStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(caseStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(caseVersion));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((ulong)(caseIsCurrentVersion));
            if ((caseVarchar1 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(caseVarchar1));
            }
            if ((caseVarchar2 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(caseVarchar2));
            }
            if ((caseVarchar3 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(caseVarchar3));
            }
            if ((caseText1 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(caseText1));
            }
            if ((caseText2 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(caseText2));
            }
            if ((caseText3 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(caseText3));
            }
            if ((caseNumber1 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(caseNumber1));
            }
            if ((caseNumber2 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(caseNumber2));
            }
            if ((caseNumber3 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(caseNumber3));
            }
            if ((caseDateTime1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(caseDateTime1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(caseDateTime2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(caseDateTime3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((caseForwardedCC == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(caseForwardedCC));
            }
            if ((caseIsClosed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((ulong)(caseIsClosed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((caseNumber4 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(caseNumber4));
            }
            if ((caseNumber5 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(caseNumber5));
            }
            if ((caseNumber6 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(caseNumber6));
            }
            if ((caseNumber7 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(caseNumber7));
            }
            if ((caseNumber8 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(caseNumber8));
            }
            if ((caseNumber9 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(caseNumber9));
            }
            if ((caseNumber10 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(caseNumber10));
            }
            if ((caseVarchar4 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(caseVarchar4));
            }
            if ((caseVarchar5 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(caseVarchar5));
            }
            if ((caseVarchar6 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(caseVarchar6));
            }
            if ((caseVarchar7 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(caseVarchar7));
            }
            if ((caseVarchar8 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(caseVarchar8));
            }
            if ((caseVarchar9 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(caseVarchar9));
            }
            if ((caseVarchar10 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(caseVarchar10));
            }
            if ((caseVarchar11 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(caseVarchar11));
            }
            if ((caseVarchar12 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(caseVarchar12));
            }
            if ((caseVarchar13 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(caseVarchar13));
            }
            if ((caseVarchar14 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(caseVarchar14));
            }
            if ((caseVarchar15 == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(caseVarchar15));
            }
            if ((caseVarchar16 == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(caseVarchar16));
            }
            if ((caseVarchar17 == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(caseVarchar17));
            }
            if ((caseVarchar18 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(caseVarchar18));
            }
            if ((caseVarchar19 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(caseVarchar19));
            }
            if ((caseVarchar20 == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(caseVarchar20));
            }
            if ((caseDateTime4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(caseDateTime4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(caseDateTime5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(caseDateTime6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(caseDateTime7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(caseDateTime8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(caseDateTime9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(caseDateTime10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((caseText4 == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(caseText4));
            }
            if ((caseText5 == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(caseText5));
            }
            if ((caseText6 == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(caseText6));
            }
            if ((caseText7 == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(caseText7));
            }
            if ((caseText8 == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(caseText8));
            }
            if ((caseText9 == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(caseText9));
            }
            if ((caseText10 == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(caseText10));
            }
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_caseId));
            if ((Original_caseTitle == null)) {
                throw new global::System.ArgumentNullException("Original_caseTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_caseTitle));
            }
            this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_caseOwnerId));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((System.DateTime)(Original_caseCreated));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_caseCreatedById));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((System.DateTime)(Original_caseModified));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(Original_caseModifiedById));
            if ((Original_caseForwarded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((System.DateTime)(Original_caseForwarded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_caseForwardedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_caseForwardedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_caseProcedureId));
            if ((Original_caseStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(Original_caseStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_caseVersion));
            this.Adapter.UpdateCommand.Parameters[79].Value = ((ulong)(Original_caseIsCurrentVersion));
            if ((Original_caseVarchar1 == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_caseVarchar1));
            }
            if ((Original_caseVarchar2 == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_caseVarchar2));
            }
            if ((Original_caseVarchar3 == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_caseVarchar3));
            }
            if ((Original_caseNumber1 == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_caseNumber1));
            }
            if ((Original_caseNumber2 == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_caseNumber2));
            }
            if ((Original_caseNumber3 == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_caseNumber3));
            }
            if ((Original_caseDateTime1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((System.DateTime)(Original_caseDateTime1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((System.DateTime)(Original_caseDateTime2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((System.DateTime)(Original_caseDateTime3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_caseForwardedCC == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_caseForwardedCC));
            }
            if ((Original_caseIsClosed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((ulong)(Original_caseIsClosed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_caseNumber4 == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_caseNumber4));
            }
            if ((Original_caseNumber5 == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_caseNumber5));
            }
            if ((Original_caseNumber6 == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_caseNumber6));
            }
            if ((Original_caseNumber7 == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_caseNumber7));
            }
            if ((Original_caseNumber8 == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_caseNumber8));
            }
            if ((Original_caseNumber9 == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_caseNumber9));
            }
            if ((Original_caseNumber10 == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_caseNumber10));
            }
            if ((Original_caseVarchar4 == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(Original_caseVarchar4));
            }
            if ((Original_caseVarchar5 == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_caseVarchar5));
            }
            if ((Original_caseVarchar6 == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_caseVarchar6));
            }
            if ((Original_caseVarchar7 == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_caseVarchar7));
            }
            if ((Original_caseVarchar8 == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_caseVarchar8));
            }
            if ((Original_caseVarchar9 == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_caseVarchar9));
            }
            if ((Original_caseVarchar10 == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_caseVarchar10));
            }
            if ((Original_caseVarchar11 == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_caseVarchar11));
            }
            if ((Original_caseVarchar12 == null)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((string)(Original_caseVarchar12));
            }
            if ((Original_caseVarchar13 == null)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_caseVarchar13));
            }
            if ((Original_caseVarchar14 == null)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(Original_caseVarchar14));
            }
            if ((Original_caseVarchar15 == null)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_caseVarchar15));
            }
            if ((Original_caseVarchar16 == null)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((string)(Original_caseVarchar16));
            }
            if ((Original_caseVarchar17 == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_caseVarchar17));
            }
            if ((Original_caseVarchar18 == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_caseVarchar18));
            }
            if ((Original_caseVarchar19 == null)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(Original_caseVarchar19));
            }
            if ((Original_caseVarchar20 == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(Original_caseVarchar20));
            }
            if ((Original_caseDateTime4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((System.DateTime)(Original_caseDateTime4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((System.DateTime)(Original_caseDateTime5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((System.DateTime)(Original_caseDateTime6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((System.DateTime)(Original_caseDateTime7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((System.DateTime)(Original_caseDateTime8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((System.DateTime)(Original_caseDateTime9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((System.DateTime)(Original_caseDateTime10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class casehistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public casehistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "casehistory";
            tableMapping.ColumnMappings.Add("caseHistId", "caseHistId");
            tableMapping.ColumnMappings.Add("caseId", "caseId");
            tableMapping.ColumnMappings.Add("caseTitle", "caseTitle");
            tableMapping.ColumnMappings.Add("caseOwnerId", "caseOwnerId");
            tableMapping.ColumnMappings.Add("caseCreated", "caseCreated");
            tableMapping.ColumnMappings.Add("caseCreatedById", "caseCreatedById");
            tableMapping.ColumnMappings.Add("caseModified", "caseModified");
            tableMapping.ColumnMappings.Add("caseModifiedById", "caseModifiedById");
            tableMapping.ColumnMappings.Add("caseForwarded", "caseForwarded");
            tableMapping.ColumnMappings.Add("caseForwardedById", "caseForwardedById");
            tableMapping.ColumnMappings.Add("caseProcedureId", "caseProcedureId");
            tableMapping.ColumnMappings.Add("caseStatusId", "caseStatusId");
            tableMapping.ColumnMappings.Add("caseVersion", "caseVersion");
            tableMapping.ColumnMappings.Add("caseIsCurrentVersion", "caseIsCurrentVersion");
            tableMapping.ColumnMappings.Add("caseVarchar1", "caseVarchar1");
            tableMapping.ColumnMappings.Add("caseVarchar2", "caseVarchar2");
            tableMapping.ColumnMappings.Add("caseVarchar3", "caseVarchar3");
            tableMapping.ColumnMappings.Add("caseText1", "caseText1");
            tableMapping.ColumnMappings.Add("caseText2", "caseText2");
            tableMapping.ColumnMappings.Add("caseText3", "caseText3");
            tableMapping.ColumnMappings.Add("caseNumber1", "caseNumber1");
            tableMapping.ColumnMappings.Add("caseNumber2", "caseNumber2");
            tableMapping.ColumnMappings.Add("caseNumber3", "caseNumber3");
            tableMapping.ColumnMappings.Add("caseDateTime1", "caseDateTime1");
            tableMapping.ColumnMappings.Add("caseDateTime2", "caseDateTime2");
            tableMapping.ColumnMappings.Add("caseDateTime3", "caseDateTime3");
            tableMapping.ColumnMappings.Add("caseForwardedCC", "caseForwardedCC");
            tableMapping.ColumnMappings.Add("casePrevStatusId", "casePrevStatusId");
            tableMapping.ColumnMappings.Add("casePrevOwnerId", "casePrevOwnerId");
            tableMapping.ColumnMappings.Add("caseNextStatusId", "caseNextStatusId");
            tableMapping.ColumnMappings.Add("caseNextOwnerId", "caseNextOwnerId");
            tableMapping.ColumnMappings.Add("caseIsClosed", "caseIsClosed");
            tableMapping.ColumnMappings.Add("caseNumber4", "caseNumber4");
            tableMapping.ColumnMappings.Add("caseNumber5", "caseNumber5");
            tableMapping.ColumnMappings.Add("caseNumber6", "caseNumber6");
            tableMapping.ColumnMappings.Add("caseNumber7", "caseNumber7");
            tableMapping.ColumnMappings.Add("caseNumber8", "caseNumber8");
            tableMapping.ColumnMappings.Add("caseNumber9", "caseNumber9");
            tableMapping.ColumnMappings.Add("caseNumber10", "caseNumber10");
            tableMapping.ColumnMappings.Add("caseVarchar4", "caseVarchar4");
            tableMapping.ColumnMappings.Add("caseVarchar5", "caseVarchar5");
            tableMapping.ColumnMappings.Add("caseVarchar6", "caseVarchar6");
            tableMapping.ColumnMappings.Add("caseVarchar7", "caseVarchar7");
            tableMapping.ColumnMappings.Add("caseVarchar8", "caseVarchar8");
            tableMapping.ColumnMappings.Add("caseVarchar9", "caseVarchar9");
            tableMapping.ColumnMappings.Add("caseVarchar10", "caseVarchar10");
            tableMapping.ColumnMappings.Add("caseVarchar11", "caseVarchar11");
            tableMapping.ColumnMappings.Add("caseVarchar12", "caseVarchar12");
            tableMapping.ColumnMappings.Add("caseVarchar13", "caseVarchar13");
            tableMapping.ColumnMappings.Add("caseVarchar14", "caseVarchar14");
            tableMapping.ColumnMappings.Add("caseVarchar15", "caseVarchar15");
            tableMapping.ColumnMappings.Add("caseVarchar16", "caseVarchar16");
            tableMapping.ColumnMappings.Add("caseVarchar17", "caseVarchar17");
            tableMapping.ColumnMappings.Add("caseVarchar18", "caseVarchar18");
            tableMapping.ColumnMappings.Add("caseVarchar19", "caseVarchar19");
            tableMapping.ColumnMappings.Add("caseVarchar20", "caseVarchar20");
            tableMapping.ColumnMappings.Add("caseDateTime4", "caseDateTime4");
            tableMapping.ColumnMappings.Add("caseDateTime5", "caseDateTime5");
            tableMapping.ColumnMappings.Add("caseDateTime6", "caseDateTime6");
            tableMapping.ColumnMappings.Add("caseDateTime7", "caseDateTime7");
            tableMapping.ColumnMappings.Add("caseDateTime8", "caseDateTime8");
            tableMapping.ColumnMappings.Add("caseDateTime9", "caseDateTime9");
            tableMapping.ColumnMappings.Add("caseDateTime10", "caseDateTime10");
            tableMapping.ColumnMappings.Add("caseText4", "caseText4");
            tableMapping.ColumnMappings.Add("caseText5", "caseText5");
            tableMapping.ColumnMappings.Add("caseText6", "caseText6");
            tableMapping.ColumnMappings.Add("caseText7", "caseText7");
            tableMapping.ColumnMappings.Add("caseText8", "caseText8");
            tableMapping.ColumnMappings.Add("caseText9", "caseText9");
            tableMapping.ColumnMappings.Add("caseText10", "caseText10");
            tableMapping.ColumnMappings.Add("caseReceivedFromId", "caseReceivedFromId");
            tableMapping.ColumnMappings.Add("caseReceived", "caseReceived");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `casehistory` WHERE ((`caseHistId` = @Original_caseHistId) AND (`case" +
                "Id` = @Original_caseId) AND (`caseTitle` = @Original_caseTitle) AND (`caseOwnerI" +
                "d` = @Original_caseOwnerId) AND (`caseCreated` = @Original_caseCreated) AND (`ca" +
                "seCreatedById` = @Original_caseCreatedById) AND (`caseModified` = @Original_case" +
                "Modified) AND (`caseModifiedById` = @Original_caseModifiedById) AND ((@IsNull_ca" +
                "seForwarded = 1 AND `caseForwarded` IS NULL) OR (`caseForwarded` = @Original_cas" +
                "eForwarded)) AND ((@IsNull_caseForwardedById = 1 AND `caseForwardedById` IS NULL" +
                ") OR (`caseForwardedById` = @Original_caseForwardedById)) AND (`caseProcedureId`" +
                " = @Original_caseProcedureId) AND ((@IsNull_caseStatusId = 1 AND `caseStatusId` " +
                "IS NULL) OR (`caseStatusId` = @Original_caseStatusId)) AND (`caseVersion` = @Ori" +
                "ginal_caseVersion) AND (`caseIsCurrentVersion` = @Original_caseIsCurrentVersion)" +
                " AND ((@IsNull_caseVarchar1 = 1 AND `caseVarchar1` IS NULL) OR (`caseVarchar1` =" +
                " @Original_caseVarchar1)) AND ((@IsNull_caseVarchar2 = 1 AND `caseVarchar2` IS N" +
                "ULL) OR (`caseVarchar2` = @Original_caseVarchar2)) AND ((@IsNull_caseVarchar3 = " +
                "1 AND `caseVarchar3` IS NULL) OR (`caseVarchar3` = @Original_caseVarchar3)) AND " +
                "((@IsNull_caseNumber1 = 1 AND `caseNumber1` IS NULL) OR (`caseNumber1` = @Origin" +
                "al_caseNumber1)) AND ((@IsNull_caseNumber2 = 1 AND `caseNumber2` IS NULL) OR (`c" +
                "aseNumber2` = @Original_caseNumber2)) AND ((@IsNull_caseNumber3 = 1 AND `caseNum" +
                "ber3` IS NULL) OR (`caseNumber3` = @Original_caseNumber3)) AND ((@IsNull_caseDat" +
                "eTime1 = 1 AND `caseDateTime1` IS NULL) OR (`caseDateTime1` = @Original_caseDate" +
                "Time1)) AND ((@IsNull_caseDateTime2 = 1 AND `caseDateTime2` IS NULL) OR (`caseDa" +
                "teTime2` = @Original_caseDateTime2)) AND ((@IsNull_caseDateTime3 = 1 AND `caseDa" +
                "teTime3` IS NULL) OR (`caseDateTime3` = @Original_caseDateTime3)) AND ((@IsNull_" +
                "caseForwardedCC = 1 AND `caseForwardedCC` IS NULL) OR (`caseForwardedCC` = @Orig" +
                "inal_caseForwardedCC)) AND ((@IsNull_casePrevStatusId = 1 AND `casePrevStatusId`" +
                " IS NULL) OR (`casePrevStatusId` = @Original_casePrevStatusId)) AND ((@IsNull_ca" +
                "sePrevOwnerId = 1 AND `casePrevOwnerId` IS NULL) OR (`casePrevOwnerId` = @Origin" +
                "al_casePrevOwnerId)) AND ((@IsNull_caseNextStatusId = 1 AND `caseNextStatusId` I" +
                "S NULL) OR (`caseNextStatusId` = @Original_caseNextStatusId)) AND ((@IsNull_case" +
                "NextOwnerId = 1 AND `caseNextOwnerId` IS NULL) OR (`caseNextOwnerId` = @Original" +
                "_caseNextOwnerId)) AND ((@IsNull_caseIsClosed = 1 AND `caseIsClosed` IS NULL) OR" +
                " (`caseIsClosed` = @Original_caseIsClosed)) AND ((@IsNull_caseNumber4 = 1 AND `c" +
                "aseNumber4` IS NULL) OR (`caseNumber4` = @Original_caseNumber4)) AND ((@IsNull_c" +
                "aseNumber5 = 1 AND `caseNumber5` IS NULL) OR (`caseNumber5` = @Original_caseNumb" +
                "er5)) AND ((@IsNull_caseNumber6 = 1 AND `caseNumber6` IS NULL) OR (`caseNumber6`" +
                " = @Original_caseNumber6)) AND ((@IsNull_caseNumber7 = 1 AND `caseNumber7` IS NU" +
                "LL) OR (`caseNumber7` = @Original_caseNumber7)) AND ((@IsNull_caseNumber8 = 1 AN" +
                "D `caseNumber8` IS NULL) OR (`caseNumber8` = @Original_caseNumber8)) AND ((@IsNu" +
                "ll_caseNumber9 = 1 AND `caseNumber9` IS NULL) OR (`caseNumber9` = @Original_case" +
                "Number9)) AND ((@IsNull_caseNumber10 = 1 AND `caseNumber10` IS NULL) OR (`caseNu" +
                "mber10` = @Original_caseNumber10)) AND ((@IsNull_caseVarchar4 = 1 AND `caseVarch" +
                "ar4` IS NULL) OR (`caseVarchar4` = @Original_caseVarchar4)) AND ((@IsNull_caseVa" +
                "rchar5 = 1 AND `caseVarchar5` IS NULL) OR (`caseVarchar5` = @Original_caseVarcha" +
                "r5)) AND ((@IsNull_caseVarchar6 = 1 AND `caseVarchar6` IS NULL) OR (`caseVarchar" +
                "6` = @Original_caseVarchar6)) AND ((@IsNull_caseVarchar7 = 1 AND `caseVarchar7` " +
                "IS NULL) OR (`caseVarchar7` = @Original_caseVarchar7)) AND ((@IsNull_caseVarchar" +
                "8 = 1 AND `caseVarchar8` IS NULL) OR (`caseVarchar8` = @Original_caseVarchar8)) " +
                "AND ((@IsNull_caseVarchar9 = 1 AND `caseVarchar9` IS NULL) OR (`caseVarchar9` = " +
                "@Original_caseVarchar9)) AND ((@IsNull_caseVarchar10 = 1 AND `caseVarchar10` IS " +
                "NULL) OR (`caseVarchar10` = @Original_caseVarchar10)) AND ((@IsNull_caseVarchar1" +
                "1 = 1 AND `caseVarchar11` IS NULL) OR (`caseVarchar11` = @Original_caseVarchar11" +
                ")) AND ((@IsNull_caseVarchar12 = 1 AND `caseVarchar12` IS NULL) OR (`caseVarchar" +
                "12` = @Original_caseVarchar12)) AND ((@IsNull_caseVarchar13 = 1 AND `caseVarchar" +
                "13` IS NULL) OR (`caseVarchar13` = @Original_caseVarchar13)) AND ((@IsNull_caseV" +
                "archar14 = 1 AND `caseVarchar14` IS NULL) OR (`caseVarchar14` = @Original_caseVa" +
                "rchar14)) AND ((@IsNull_caseVarchar15 = 1 AND `caseVarchar15` IS NULL) OR (`case" +
                "Varchar15` = @Original_caseVarchar15)) AND ((@IsNull_caseVarchar16 = 1 AND `case" +
                "Varchar16` IS NULL) OR (`caseVarchar16` = @Original_caseVarchar16)) AND ((@IsNul" +
                "l_caseVarchar17 = 1 AND `caseVarchar17` IS NULL) OR (`caseVarchar17` = @Original" +
                "_caseVarchar17)) AND ((@IsNull_caseVarchar18 = 1 AND `caseVarchar18` IS NULL) OR" +
                " (`caseVarchar18` = @Original_caseVarchar18)) AND ((@IsNull_caseVarchar19 = 1 AN" +
                "D `caseVarchar19` IS NULL) OR (`caseVarchar19` = @Original_caseVarchar19)) AND (" +
                "(@IsNull_caseVarchar20 = 1 AND `caseVarchar20` IS NULL) OR (`caseVarchar20` = @O" +
                "riginal_caseVarchar20)) AND ((@IsNull_caseDateTime4 = 1 AND `caseDateTime4` IS N" +
                "ULL) OR (`caseDateTime4` = @Original_caseDateTime4)) AND ((@IsNull_caseDateTime5" +
                " = 1 AND `caseDateTime5` IS NULL) OR (`caseDateTime5` = @Original_caseDateTime5)" +
                ") AND ((@IsNull_caseDateTime6 = 1 AND `caseDateTime6` IS NULL) OR (`caseDateTime" +
                "6` = @Original_caseDateTime6)) AND ((@IsNull_caseDateTime7 = 1 AND `caseDateTime" +
                "7` IS NULL) OR (`caseDateTime7` = @Original_caseDateTime7)) AND ((@IsNull_caseDa" +
                "teTime8 = 1 AND `caseDateTime8` IS NULL) OR (`caseDateTime8` = @Original_caseDat" +
                "eTime8)) AND ((@IsNull_caseDateTime9 = 1 AND `caseDateTime9` IS NULL) OR (`caseD" +
                "ateTime9` = @Original_caseDateTime9)) AND ((@IsNull_caseDateTime10 = 1 AND `case" +
                "DateTime10` IS NULL) OR (`caseDateTime10` = @Original_caseDateTime10)) AND ((@Is" +
                "Null_caseReceivedFromId = 1 AND `caseReceivedFromId` IS NULL) OR (`caseReceivedF" +
                "romId` = @Original_caseReceivedFromId)) AND ((@IsNull_caseReceived = 1 AND `case" +
                "Received` IS NULL) OR (`caseReceived` = @Original_caseReceived)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseHistId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwarded";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwarded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwardedCC";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_casePrevStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_casePrevStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_casePrevOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_casePrevOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNextStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNextStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNextOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNextOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseIsClosed";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar11";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar12";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar13";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar14";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar15";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar16";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar17";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar18";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar19";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar20";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseReceivedFromId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseReceivedFromId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseReceivedFromId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseReceivedFromId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseReceived";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseReceived";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseReceived";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseReceived";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `casehistory` (`caseId`, `caseTitle`, `caseOwnerId`, `caseCreated`, `" +
                "caseCreatedById`, `caseModified`, `caseModifiedById`, `caseForwarded`, `caseForw" +
                "ardedById`, `caseProcedureId`, `caseStatusId`, `caseVersion`, `caseIsCurrentVers" +
                "ion`, `caseVarchar1`, `caseVarchar2`, `caseVarchar3`, `caseText1`, `caseText2`, " +
                "`caseText3`, `caseNumber1`, `caseNumber2`, `caseNumber3`, `caseDateTime1`, `case" +
                "DateTime2`, `caseDateTime3`, `caseForwardedCC`, `casePrevStatusId`, `casePrevOwn" +
                "erId`, `caseNextStatusId`, `caseNextOwnerId`, `caseIsClosed`, `caseNumber4`, `ca" +
                "seNumber5`, `caseNumber6`, `caseNumber7`, `caseNumber8`, `caseNumber9`, `caseNum" +
                "ber10`, `caseVarchar4`, `caseVarchar5`, `caseVarchar6`, `caseVarchar7`, `caseVar" +
                "char8`, `caseVarchar9`, `caseVarchar10`, `caseVarchar11`, `caseVarchar12`, `case" +
                "Varchar13`, `caseVarchar14`, `caseVarchar15`, `caseVarchar16`, `caseVarchar17`, " +
                "`caseVarchar18`, `caseVarchar19`, `caseVarchar20`, `caseDateTime4`, `caseDateTim" +
                "e5`, `caseDateTime6`, `caseDateTime7`, `caseDateTime8`, `caseDateTime9`, `caseDa" +
                "teTime10`, `caseText4`, `caseText5`, `caseText6`, `caseText7`, `caseText8`, `cas" +
                "eText9`, `caseText10`, `caseReceivedFromId`, `caseReceived`) VALUES (@caseId, @c" +
                "aseTitle, @caseOwnerId, @caseCreated, @caseCreatedById, @caseModified, @caseModi" +
                "fiedById, @caseForwarded, @caseForwardedById, @caseProcedureId, @caseStatusId, @" +
                "caseVersion, @caseIsCurrentVersion, @caseVarchar1, @caseVarchar2, @caseVarchar3," +
                " @caseText1, @caseText2, @caseText3, @caseNumber1, @caseNumber2, @caseNumber3, @" +
                "caseDateTime1, @caseDateTime2, @caseDateTime3, @caseForwardedCC, @casePrevStatus" +
                "Id, @casePrevOwnerId, @caseNextStatusId, @caseNextOwnerId, @caseIsClosed, @caseN" +
                "umber4, @caseNumber5, @caseNumber6, @caseNumber7, @caseNumber8, @caseNumber9, @c" +
                "aseNumber10, @caseVarchar4, @caseVarchar5, @caseVarchar6, @caseVarchar7, @caseVa" +
                "rchar8, @caseVarchar9, @caseVarchar10, @caseVarchar11, @caseVarchar12, @caseVarc" +
                "har13, @caseVarchar14, @caseVarchar15, @caseVarchar16, @caseVarchar17, @caseVarc" +
                "har18, @caseVarchar19, @caseVarchar20, @caseDateTime4, @caseDateTime5, @caseDate" +
                "Time6, @caseDateTime7, @caseDateTime8, @caseDateTime9, @caseDateTime10, @caseTex" +
                "t4, @caseText5, @caseText6, @caseText7, @caseText8, @caseText9, @caseText10, @ca" +
                "seReceivedFromId, @caseReceived)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwarded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsCurrentVersion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@casePrevStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevStatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@casePrevOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevOwnerId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNextStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextStatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNextOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextOwnerId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseReceivedFromId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseReceivedFromId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseReceived";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseReceived";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `casehistory` SET `caseId` = @caseId, `caseTitle` = @caseTitle, `caseOwner" +
                "Id` = @caseOwnerId, `caseCreated` = @caseCreated, `caseCreatedById` = @caseCreat" +
                "edById, `caseModified` = @caseModified, `caseModifiedById` = @caseModifiedById, " +
                "`caseForwarded` = @caseForwarded, `caseForwardedById` = @caseForwardedById, `cas" +
                "eProcedureId` = @caseProcedureId, `caseStatusId` = @caseStatusId, `caseVersion` " +
                "= @caseVersion, `caseIsCurrentVersion` = @caseIsCurrentVersion, `caseVarchar1` =" +
                " @caseVarchar1, `caseVarchar2` = @caseVarchar2, `caseVarchar3` = @caseVarchar3, " +
                "`caseText1` = @caseText1, `caseText2` = @caseText2, `caseText3` = @caseText3, `c" +
                "aseNumber1` = @caseNumber1, `caseNumber2` = @caseNumber2, `caseNumber3` = @caseN" +
                "umber3, `caseDateTime1` = @caseDateTime1, `caseDateTime2` = @caseDateTime2, `cas" +
                "eDateTime3` = @caseDateTime3, `caseForwardedCC` = @caseForwardedCC, `casePrevSta" +
                "tusId` = @casePrevStatusId, `casePrevOwnerId` = @casePrevOwnerId, `caseNextStatu" +
                "sId` = @caseNextStatusId, `caseNextOwnerId` = @caseNextOwnerId, `caseIsClosed` =" +
                " @caseIsClosed, `caseNumber4` = @caseNumber4, `caseNumber5` = @caseNumber5, `cas" +
                "eNumber6` = @caseNumber6, `caseNumber7` = @caseNumber7, `caseNumber8` = @caseNum" +
                "ber8, `caseNumber9` = @caseNumber9, `caseNumber10` = @caseNumber10, `caseVarchar" +
                "4` = @caseVarchar4, `caseVarchar5` = @caseVarchar5, `caseVarchar6` = @caseVarcha" +
                "r6, `caseVarchar7` = @caseVarchar7, `caseVarchar8` = @caseVarchar8, `caseVarchar" +
                "9` = @caseVarchar9, `caseVarchar10` = @caseVarchar10, `caseVarchar11` = @caseVar" +
                "char11, `caseVarchar12` = @caseVarchar12, `caseVarchar13` = @caseVarchar13, `cas" +
                "eVarchar14` = @caseVarchar14, `caseVarchar15` = @caseVarchar15, `caseVarchar16` " +
                "= @caseVarchar16, `caseVarchar17` = @caseVarchar17, `caseVarchar18` = @caseVarch" +
                "ar18, `caseVarchar19` = @caseVarchar19, `caseVarchar20` = @caseVarchar20, `caseD" +
                "ateTime4` = @caseDateTime4, `caseDateTime5` = @caseDateTime5, `caseDateTime6` = " +
                "@caseDateTime6, `caseDateTime7` = @caseDateTime7, `caseDateTime8` = @caseDateTim" +
                "e8, `caseDateTime9` = @caseDateTime9, `caseDateTime10` = @caseDateTime10, `caseT" +
                "ext4` = @caseText4, `caseText5` = @caseText5, `caseText6` = @caseText6, `caseTex" +
                "t7` = @caseText7, `caseText8` = @caseText8, `caseText9` = @caseText9, `caseText1" +
                "0` = @caseText10, `caseReceivedFromId` = @caseReceivedFromId, `caseReceived` = @" +
                "caseReceived WHERE ((`caseHistId` = @Original_caseHistId) AND (`caseId` = @Origi" +
                "nal_caseId) AND (`caseTitle` = @Original_caseTitle) AND (`caseOwnerId` = @Origin" +
                "al_caseOwnerId) AND (`caseCreated` = @Original_caseCreated) AND (`caseCreatedByI" +
                "d` = @Original_caseCreatedById) AND (`caseModified` = @Original_caseModified) AN" +
                "D (`caseModifiedById` = @Original_caseModifiedById) AND ((@IsNull_caseForwarded " +
                "= 1 AND `caseForwarded` IS NULL) OR (`caseForwarded` = @Original_caseForwarded))" +
                " AND ((@IsNull_caseForwardedById = 1 AND `caseForwardedById` IS NULL) OR (`caseF" +
                "orwardedById` = @Original_caseForwardedById)) AND (`caseProcedureId` = @Original" +
                "_caseProcedureId) AND ((@IsNull_caseStatusId = 1 AND `caseStatusId` IS NULL) OR " +
                "(`caseStatusId` = @Original_caseStatusId)) AND (`caseVersion` = @Original_caseVe" +
                "rsion) AND (`caseIsCurrentVersion` = @Original_caseIsCurrentVersion) AND ((@IsNu" +
                "ll_caseVarchar1 = 1 AND `caseVarchar1` IS NULL) OR (`caseVarchar1` = @Original_c" +
                "aseVarchar1)) AND ((@IsNull_caseVarchar2 = 1 AND `caseVarchar2` IS NULL) OR (`ca" +
                "seVarchar2` = @Original_caseVarchar2)) AND ((@IsNull_caseVarchar3 = 1 AND `caseV" +
                "archar3` IS NULL) OR (`caseVarchar3` = @Original_caseVarchar3)) AND ((@IsNull_ca" +
                "seNumber1 = 1 AND `caseNumber1` IS NULL) OR (`caseNumber1` = @Original_caseNumbe" +
                "r1)) AND ((@IsNull_caseNumber2 = 1 AND `caseNumber2` IS NULL) OR (`caseNumber2` " +
                "= @Original_caseNumber2)) AND ((@IsNull_caseNumber3 = 1 AND `caseNumber3` IS NUL" +
                "L) OR (`caseNumber3` = @Original_caseNumber3)) AND ((@IsNull_caseDateTime1 = 1 A" +
                "ND `caseDateTime1` IS NULL) OR (`caseDateTime1` = @Original_caseDateTime1)) AND " +
                "((@IsNull_caseDateTime2 = 1 AND `caseDateTime2` IS NULL) OR (`caseDateTime2` = @" +
                "Original_caseDateTime2)) AND ((@IsNull_caseDateTime3 = 1 AND `caseDateTime3` IS " +
                "NULL) OR (`caseDateTime3` = @Original_caseDateTime3)) AND ((@IsNull_caseForwarde" +
                "dCC = 1 AND `caseForwardedCC` IS NULL) OR (`caseForwardedCC` = @Original_caseFor" +
                "wardedCC)) AND ((@IsNull_casePrevStatusId = 1 AND `casePrevStatusId` IS NULL) OR" +
                " (`casePrevStatusId` = @Original_casePrevStatusId)) AND ((@IsNull_casePrevOwnerI" +
                "d = 1 AND `casePrevOwnerId` IS NULL) OR (`casePrevOwnerId` = @Original_casePrevO" +
                "wnerId)) AND ((@IsNull_caseNextStatusId = 1 AND `caseNextStatusId` IS NULL) OR (" +
                "`caseNextStatusId` = @Original_caseNextStatusId)) AND ((@IsNull_caseNextOwnerId " +
                "= 1 AND `caseNextOwnerId` IS NULL) OR (`caseNextOwnerId` = @Original_caseNextOwn" +
                "erId)) AND ((@IsNull_caseIsClosed = 1 AND `caseIsClosed` IS NULL) OR (`caseIsClo" +
                "sed` = @Original_caseIsClosed)) AND ((@IsNull_caseNumber4 = 1 AND `caseNumber4` " +
                "IS NULL) OR (`caseNumber4` = @Original_caseNumber4)) AND ((@IsNull_caseNumber5 =" +
                " 1 AND `caseNumber5` IS NULL) OR (`caseNumber5` = @Original_caseNumber5)) AND ((" +
                "@IsNull_caseNumber6 = 1 AND `caseNumber6` IS NULL) OR (`caseNumber6` = @Original" +
                "_caseNumber6)) AND ((@IsNull_caseNumber7 = 1 AND `caseNumber7` IS NULL) OR (`cas" +
                "eNumber7` = @Original_caseNumber7)) AND ((@IsNull_caseNumber8 = 1 AND `caseNumbe" +
                "r8` IS NULL) OR (`caseNumber8` = @Original_caseNumber8)) AND ((@IsNull_caseNumbe" +
                "r9 = 1 AND `caseNumber9` IS NULL) OR (`caseNumber9` = @Original_caseNumber9)) AN" +
                "D ((@IsNull_caseNumber10 = 1 AND `caseNumber10` IS NULL) OR (`caseNumber10` = @O" +
                "riginal_caseNumber10)) AND ((@IsNull_caseVarchar4 = 1 AND `caseVarchar4` IS NULL" +
                ") OR (`caseVarchar4` = @Original_caseVarchar4)) AND ((@IsNull_caseVarchar5 = 1 A" +
                "ND `caseVarchar5` IS NULL) OR (`caseVarchar5` = @Original_caseVarchar5)) AND ((@" +
                "IsNull_caseVarchar6 = 1 AND `caseVarchar6` IS NULL) OR (`caseVarchar6` = @Origin" +
                "al_caseVarchar6)) AND ((@IsNull_caseVarchar7 = 1 AND `caseVarchar7` IS NULL) OR " +
                "(`caseVarchar7` = @Original_caseVarchar7)) AND ((@IsNull_caseVarchar8 = 1 AND `c" +
                "aseVarchar8` IS NULL) OR (`caseVarchar8` = @Original_caseVarchar8)) AND ((@IsNul" +
                "l_caseVarchar9 = 1 AND `caseVarchar9` IS NULL) OR (`caseVarchar9` = @Original_ca" +
                "seVarchar9)) AND ((@IsNull_caseVarchar10 = 1 AND `caseVarchar10` IS NULL) OR (`c" +
                "aseVarchar10` = @Original_caseVarchar10)) AND ((@IsNull_caseVarchar11 = 1 AND `c" +
                "aseVarchar11` IS NULL) OR (`caseVarchar11` = @Original_caseVarchar11)) AND ((@Is" +
                "Null_caseVarchar12 = 1 AND `caseVarchar12` IS NULL) OR (`caseVarchar12` = @Origi" +
                "nal_caseVarchar12)) AND ((@IsNull_caseVarchar13 = 1 AND `caseVarchar13` IS NULL)" +
                " OR (`caseVarchar13` = @Original_caseVarchar13)) AND ((@IsNull_caseVarchar14 = 1" +
                " AND `caseVarchar14` IS NULL) OR (`caseVarchar14` = @Original_caseVarchar14)) AN" +
                "D ((@IsNull_caseVarchar15 = 1 AND `caseVarchar15` IS NULL) OR (`caseVarchar15` =" +
                " @Original_caseVarchar15)) AND ((@IsNull_caseVarchar16 = 1 AND `caseVarchar16` I" +
                "S NULL) OR (`caseVarchar16` = @Original_caseVarchar16)) AND ((@IsNull_caseVarcha" +
                "r17 = 1 AND `caseVarchar17` IS NULL) OR (`caseVarchar17` = @Original_caseVarchar" +
                "17)) AND ((@IsNull_caseVarchar18 = 1 AND `caseVarchar18` IS NULL) OR (`caseVarch" +
                "ar18` = @Original_caseVarchar18)) AND ((@IsNull_caseVarchar19 = 1 AND `caseVarch" +
                "ar19` IS NULL) OR (`caseVarchar19` = @Original_caseVarchar19)) AND ((@IsNull_cas" +
                "eVarchar20 = 1 AND `caseVarchar20` IS NULL) OR (`caseVarchar20` = @Original_case" +
                "Varchar20)) AND ((@IsNull_caseDateTime4 = 1 AND `caseDateTime4` IS NULL) OR (`ca" +
                "seDateTime4` = @Original_caseDateTime4)) AND ((@IsNull_caseDateTime5 = 1 AND `ca" +
                "seDateTime5` IS NULL) OR (`caseDateTime5` = @Original_caseDateTime5)) AND ((@IsN" +
                "ull_caseDateTime6 = 1 AND `caseDateTime6` IS NULL) OR (`caseDateTime6` = @Origin" +
                "al_caseDateTime6)) AND ((@IsNull_caseDateTime7 = 1 AND `caseDateTime7` IS NULL) " +
                "OR (`caseDateTime7` = @Original_caseDateTime7)) AND ((@IsNull_caseDateTime8 = 1 " +
                "AND `caseDateTime8` IS NULL) OR (`caseDateTime8` = @Original_caseDateTime8)) AND" +
                " ((@IsNull_caseDateTime9 = 1 AND `caseDateTime9` IS NULL) OR (`caseDateTime9` = " +
                "@Original_caseDateTime9)) AND ((@IsNull_caseDateTime10 = 1 AND `caseDateTime10` " +
                "IS NULL) OR (`caseDateTime10` = @Original_caseDateTime10)) AND ((@IsNull_caseRec" +
                "eivedFromId = 1 AND `caseReceivedFromId` IS NULL) OR (`caseReceivedFromId` = @Or" +
                "iginal_caseReceivedFromId)) AND ((@IsNull_caseReceived = 1 AND `caseReceived` IS" +
                " NULL) OR (`caseReceived` = @Original_caseReceived)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwarded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsCurrentVersion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@casePrevStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevStatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@casePrevOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevOwnerId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNextStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextStatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNextOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextOwnerId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseReceivedFromId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseReceivedFromId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseReceived";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseReceived";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseHistId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwarded";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwarded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseForwarded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwardedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseIsCurrentVersion";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsCurrentVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwardedCC";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_casePrevStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_casePrevStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_casePrevOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_casePrevOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "casePrevOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNextStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNextStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNextOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNextOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNextOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseIsClosed";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar11";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar12";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar13";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar14";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar15";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar16";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar17";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar18";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar19";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar20";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseReceivedFromId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseReceivedFromId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseReceivedFromId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseReceivedFromId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseReceived";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseReceived";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseReceived";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseReceived";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `caseHistId`, `caseId`, `caseTitle`, `caseOwnerId`, `caseCreated`, `caseCreatedById`, `caseModified`, `caseModifiedById`, `caseForwarded`, `caseForwardedById`, `caseProcedureId`, `caseStatusId`, `caseVersion`, `caseIsCurrentVersion`, `caseVarchar1`, `caseVarchar2`, `caseVarchar3`, `caseText1`, `caseText2`, `caseText3`, `caseNumber1`, `caseNumber2`, `caseNumber3`, `caseDateTime1`, `caseDateTime2`, `caseDateTime3`, `caseForwardedCC`, `casePrevStatusId`, `casePrevOwnerId`, `caseNextStatusId`, `caseNextOwnerId`, `caseIsClosed`, `caseNumber4`, `caseNumber5`, `caseNumber6`, `caseNumber7`, `caseNumber8`, `caseNumber9`, `caseNumber10`, `caseVarchar4`, `caseVarchar5`, `caseVarchar6`, `caseVarchar7`, `caseVarchar8`, `caseVarchar9`, `caseVarchar10`, `caseVarchar11`, `caseVarchar12`, `caseVarchar13`, `caseVarchar14`, `caseVarchar15`, `caseVarchar16`, `caseVarchar17`, `caseVarchar18`, `caseVarchar19`, `caseVarchar20`, `caseDateTime4`, `caseDateTime5`, `caseDateTime6`, `caseDateTime7`, `caseDateTime8`, `caseDateTime9`, `caseDateTime10`, `caseText4`, `caseText5`, `caseText6`, `caseText7`, `caseText8`, `caseText9`, `caseText10`, `caseReceivedFromId`, `caseReceived` FROM `casehistory`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.casehistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.casehistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.casehistoryDataTable dataTable = new amodDataSet.casehistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.casehistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "casehistory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_caseHistId, 
                    int Original_caseId, 
                    string Original_caseTitle, 
                    int Original_caseOwnerId, 
                    System.DateTime Original_caseCreated, 
                    int Original_caseCreatedById, 
                    System.DateTime Original_caseModified, 
                    int Original_caseModifiedById, 
                    global::System.Nullable<global::System.DateTime> Original_caseForwarded, 
                    global::System.Nullable<int> Original_caseForwardedById, 
                    int Original_caseProcedureId, 
                    global::System.Nullable<int> Original_caseStatusId, 
                    int Original_caseVersion, 
                    ulong Original_caseIsCurrentVersion, 
                    string Original_caseVarchar1, 
                    string Original_caseVarchar2, 
                    string Original_caseVarchar3, 
                    string Original_caseNumber1, 
                    string Original_caseNumber2, 
                    string Original_caseNumber3, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime3, 
                    string Original_caseForwardedCC, 
                    global::System.Nullable<int> Original_casePrevStatusId, 
                    global::System.Nullable<int> Original_casePrevOwnerId, 
                    global::System.Nullable<int> Original_caseNextStatusId, 
                    global::System.Nullable<int> Original_caseNextOwnerId, 
                    global::System.Nullable<ulong> Original_caseIsClosed, 
                    string Original_caseNumber4, 
                    string Original_caseNumber5, 
                    string Original_caseNumber6, 
                    string Original_caseNumber7, 
                    string Original_caseNumber8, 
                    string Original_caseNumber9, 
                    string Original_caseNumber10, 
                    string Original_caseVarchar4, 
                    string Original_caseVarchar5, 
                    string Original_caseVarchar6, 
                    string Original_caseVarchar7, 
                    string Original_caseVarchar8, 
                    string Original_caseVarchar9, 
                    string Original_caseVarchar10, 
                    string Original_caseVarchar11, 
                    string Original_caseVarchar12, 
                    string Original_caseVarchar13, 
                    string Original_caseVarchar14, 
                    string Original_caseVarchar15, 
                    string Original_caseVarchar16, 
                    string Original_caseVarchar17, 
                    string Original_caseVarchar18, 
                    string Original_caseVarchar19, 
                    string Original_caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime10, 
                    global::System.Nullable<int> Original_caseReceivedFromId, 
                    global::System.Nullable<global::System.DateTime> Original_caseReceived) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_caseHistId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_caseId));
            if ((Original_caseTitle == null)) {
                throw new global::System.ArgumentNullException("Original_caseTitle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_caseTitle));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_caseOwnerId));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_caseCreated));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_caseCreatedById));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_caseModified));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_caseModifiedById));
            if ((Original_caseForwarded.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_caseForwarded.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_caseForwardedById.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_caseForwardedById.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_caseProcedureId));
            if ((Original_caseStatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_caseStatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_caseVersion));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((ulong)(Original_caseIsCurrentVersion));
            if ((Original_caseVarchar1 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_caseVarchar1));
            }
            if ((Original_caseVarchar2 == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_caseVarchar2));
            }
            if ((Original_caseVarchar3 == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_caseVarchar3));
            }
            if ((Original_caseNumber1 == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_caseNumber1));
            }
            if ((Original_caseNumber2 == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_caseNumber2));
            }
            if ((Original_caseNumber3 == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_caseNumber3));
            }
            if ((Original_caseDateTime1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_caseDateTime1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_caseDateTime2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_caseDateTime3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_caseForwardedCC == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_caseForwardedCC));
            }
            if ((Original_casePrevStatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_casePrevStatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_casePrevOwnerId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_casePrevOwnerId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_caseNextStatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_caseNextStatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_caseNextOwnerId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_caseNextOwnerId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_caseIsClosed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((ulong)(Original_caseIsClosed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_caseNumber4 == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_caseNumber4));
            }
            if ((Original_caseNumber5 == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_caseNumber5));
            }
            if ((Original_caseNumber6 == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_caseNumber6));
            }
            if ((Original_caseNumber7 == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_caseNumber7));
            }
            if ((Original_caseNumber8 == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_caseNumber8));
            }
            if ((Original_caseNumber9 == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_caseNumber9));
            }
            if ((Original_caseNumber10 == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_caseNumber10));
            }
            if ((Original_caseVarchar4 == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_caseVarchar4));
            }
            if ((Original_caseVarchar5 == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_caseVarchar5));
            }
            if ((Original_caseVarchar6 == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_caseVarchar6));
            }
            if ((Original_caseVarchar7 == null)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_caseVarchar7));
            }
            if ((Original_caseVarchar8 == null)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_caseVarchar8));
            }
            if ((Original_caseVarchar9 == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_caseVarchar9));
            }
            if ((Original_caseVarchar10 == null)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_caseVarchar10));
            }
            if ((Original_caseVarchar11 == null)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((string)(Original_caseVarchar11));
            }
            if ((Original_caseVarchar12 == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_caseVarchar12));
            }
            if ((Original_caseVarchar13 == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_caseVarchar13));
            }
            if ((Original_caseVarchar14 == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_caseVarchar14));
            }
            if ((Original_caseVarchar15 == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_caseVarchar15));
            }
            if ((Original_caseVarchar16 == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_caseVarchar16));
            }
            if ((Original_caseVarchar17 == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_caseVarchar17));
            }
            if ((Original_caseVarchar18 == null)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_caseVarchar18));
            }
            if ((Original_caseVarchar19 == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_caseVarchar19));
            }
            if ((Original_caseVarchar20 == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_caseVarchar20));
            }
            if ((Original_caseDateTime4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((System.DateTime)(Original_caseDateTime4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((System.DateTime)(Original_caseDateTime5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((System.DateTime)(Original_caseDateTime6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((System.DateTime)(Original_caseDateTime7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((System.DateTime)(Original_caseDateTime8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((System.DateTime)(Original_caseDateTime9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((System.DateTime)(Original_caseDateTime10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_caseReceivedFromId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((int)(Original_caseReceivedFromId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_caseReceived.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((System.DateTime)(Original_caseReceived.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int caseId, 
                    string caseTitle, 
                    int caseOwnerId, 
                    System.DateTime caseCreated, 
                    int caseCreatedById, 
                    System.DateTime caseModified, 
                    int caseModifiedById, 
                    global::System.Nullable<global::System.DateTime> caseForwarded, 
                    global::System.Nullable<int> caseForwardedById, 
                    int caseProcedureId, 
                    global::System.Nullable<int> caseStatusId, 
                    int caseVersion, 
                    ulong caseIsCurrentVersion, 
                    string caseVarchar1, 
                    string caseVarchar2, 
                    string caseVarchar3, 
                    string caseText1, 
                    string caseText2, 
                    string caseText3, 
                    string caseNumber1, 
                    string caseNumber2, 
                    string caseNumber3, 
                    global::System.Nullable<global::System.DateTime> caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> caseDateTime3, 
                    string caseForwardedCC, 
                    global::System.Nullable<int> casePrevStatusId, 
                    global::System.Nullable<int> casePrevOwnerId, 
                    global::System.Nullable<int> caseNextStatusId, 
                    global::System.Nullable<int> caseNextOwnerId, 
                    global::System.Nullable<ulong> caseIsClosed, 
                    string caseNumber4, 
                    string caseNumber5, 
                    string caseNumber6, 
                    string caseNumber7, 
                    string caseNumber8, 
                    string caseNumber9, 
                    string caseNumber10, 
                    string caseVarchar4, 
                    string caseVarchar5, 
                    string caseVarchar6, 
                    string caseVarchar7, 
                    string caseVarchar8, 
                    string caseVarchar9, 
                    string caseVarchar10, 
                    string caseVarchar11, 
                    string caseVarchar12, 
                    string caseVarchar13, 
                    string caseVarchar14, 
                    string caseVarchar15, 
                    string caseVarchar16, 
                    string caseVarchar17, 
                    string caseVarchar18, 
                    string caseVarchar19, 
                    string caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> caseDateTime10, 
                    string caseText4, 
                    string caseText5, 
                    string caseText6, 
                    string caseText7, 
                    string caseText8, 
                    string caseText9, 
                    string caseText10, 
                    global::System.Nullable<int> caseReceivedFromId, 
                    global::System.Nullable<global::System.DateTime> caseReceived) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(caseId));
            if ((caseTitle == null)) {
                throw new global::System.ArgumentNullException("caseTitle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(caseTitle));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(caseOwnerId));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(caseCreated));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(caseCreatedById));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(caseModified));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(caseModifiedById));
            if ((caseForwarded.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(caseForwarded.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((caseForwardedById.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(caseForwardedById.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(caseProcedureId));
            if ((caseStatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(caseStatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(caseVersion));
            this.Adapter.InsertCommand.Parameters[12].Value = ((ulong)(caseIsCurrentVersion));
            if ((caseVarchar1 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(caseVarchar1));
            }
            if ((caseVarchar2 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(caseVarchar2));
            }
            if ((caseVarchar3 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(caseVarchar3));
            }
            if ((caseText1 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(caseText1));
            }
            if ((caseText2 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(caseText2));
            }
            if ((caseText3 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(caseText3));
            }
            if ((caseNumber1 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(caseNumber1));
            }
            if ((caseNumber2 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(caseNumber2));
            }
            if ((caseNumber3 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(caseNumber3));
            }
            if ((caseDateTime1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(caseDateTime1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(caseDateTime2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(caseDateTime3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((caseForwardedCC == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(caseForwardedCC));
            }
            if ((casePrevStatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(casePrevStatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((casePrevOwnerId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(casePrevOwnerId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((caseNextStatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(caseNextStatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((caseNextOwnerId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(caseNextOwnerId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((caseIsClosed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((ulong)(caseIsClosed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((caseNumber4 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(caseNumber4));
            }
            if ((caseNumber5 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(caseNumber5));
            }
            if ((caseNumber6 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(caseNumber6));
            }
            if ((caseNumber7 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(caseNumber7));
            }
            if ((caseNumber8 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(caseNumber8));
            }
            if ((caseNumber9 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(caseNumber9));
            }
            if ((caseNumber10 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(caseNumber10));
            }
            if ((caseVarchar4 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(caseVarchar4));
            }
            if ((caseVarchar5 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(caseVarchar5));
            }
            if ((caseVarchar6 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(caseVarchar6));
            }
            if ((caseVarchar7 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(caseVarchar7));
            }
            if ((caseVarchar8 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(caseVarchar8));
            }
            if ((caseVarchar9 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(caseVarchar9));
            }
            if ((caseVarchar10 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(caseVarchar10));
            }
            if ((caseVarchar11 == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(caseVarchar11));
            }
            if ((caseVarchar12 == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(caseVarchar12));
            }
            if ((caseVarchar13 == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(caseVarchar13));
            }
            if ((caseVarchar14 == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(caseVarchar14));
            }
            if ((caseVarchar15 == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(caseVarchar15));
            }
            if ((caseVarchar16 == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(caseVarchar16));
            }
            if ((caseVarchar17 == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(caseVarchar17));
            }
            if ((caseVarchar18 == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(caseVarchar18));
            }
            if ((caseVarchar19 == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(caseVarchar19));
            }
            if ((caseVarchar20 == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(caseVarchar20));
            }
            if ((caseDateTime4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(caseDateTime4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((System.DateTime)(caseDateTime5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((System.DateTime)(caseDateTime6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((System.DateTime)(caseDateTime7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((System.DateTime)(caseDateTime8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((System.DateTime)(caseDateTime9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((System.DateTime)(caseDateTime10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((caseText4 == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(caseText4));
            }
            if ((caseText5 == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(caseText5));
            }
            if ((caseText6 == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(caseText6));
            }
            if ((caseText7 == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(caseText7));
            }
            if ((caseText8 == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(caseText8));
            }
            if ((caseText9 == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(caseText9));
            }
            if ((caseText10 == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(caseText10));
            }
            if ((caseReceivedFromId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((int)(caseReceivedFromId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((caseReceived.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((System.DateTime)(caseReceived.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int caseId, 
                    string caseTitle, 
                    int caseOwnerId, 
                    System.DateTime caseCreated, 
                    int caseCreatedById, 
                    System.DateTime caseModified, 
                    int caseModifiedById, 
                    global::System.Nullable<global::System.DateTime> caseForwarded, 
                    global::System.Nullable<int> caseForwardedById, 
                    int caseProcedureId, 
                    global::System.Nullable<int> caseStatusId, 
                    int caseVersion, 
                    ulong caseIsCurrentVersion, 
                    string caseVarchar1, 
                    string caseVarchar2, 
                    string caseVarchar3, 
                    string caseText1, 
                    string caseText2, 
                    string caseText3, 
                    string caseNumber1, 
                    string caseNumber2, 
                    string caseNumber3, 
                    global::System.Nullable<global::System.DateTime> caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> caseDateTime3, 
                    string caseForwardedCC, 
                    global::System.Nullable<int> casePrevStatusId, 
                    global::System.Nullable<int> casePrevOwnerId, 
                    global::System.Nullable<int> caseNextStatusId, 
                    global::System.Nullable<int> caseNextOwnerId, 
                    global::System.Nullable<ulong> caseIsClosed, 
                    string caseNumber4, 
                    string caseNumber5, 
                    string caseNumber6, 
                    string caseNumber7, 
                    string caseNumber8, 
                    string caseNumber9, 
                    string caseNumber10, 
                    string caseVarchar4, 
                    string caseVarchar5, 
                    string caseVarchar6, 
                    string caseVarchar7, 
                    string caseVarchar8, 
                    string caseVarchar9, 
                    string caseVarchar10, 
                    string caseVarchar11, 
                    string caseVarchar12, 
                    string caseVarchar13, 
                    string caseVarchar14, 
                    string caseVarchar15, 
                    string caseVarchar16, 
                    string caseVarchar17, 
                    string caseVarchar18, 
                    string caseVarchar19, 
                    string caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> caseDateTime10, 
                    string caseText4, 
                    string caseText5, 
                    string caseText6, 
                    string caseText7, 
                    string caseText8, 
                    string caseText9, 
                    string caseText10, 
                    global::System.Nullable<int> caseReceivedFromId, 
                    global::System.Nullable<global::System.DateTime> caseReceived, 
                    int Original_caseHistId, 
                    int Original_caseId, 
                    string Original_caseTitle, 
                    int Original_caseOwnerId, 
                    System.DateTime Original_caseCreated, 
                    int Original_caseCreatedById, 
                    System.DateTime Original_caseModified, 
                    int Original_caseModifiedById, 
                    global::System.Nullable<global::System.DateTime> Original_caseForwarded, 
                    global::System.Nullable<int> Original_caseForwardedById, 
                    int Original_caseProcedureId, 
                    global::System.Nullable<int> Original_caseStatusId, 
                    int Original_caseVersion, 
                    ulong Original_caseIsCurrentVersion, 
                    string Original_caseVarchar1, 
                    string Original_caseVarchar2, 
                    string Original_caseVarchar3, 
                    string Original_caseNumber1, 
                    string Original_caseNumber2, 
                    string Original_caseNumber3, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime3, 
                    string Original_caseForwardedCC, 
                    global::System.Nullable<int> Original_casePrevStatusId, 
                    global::System.Nullable<int> Original_casePrevOwnerId, 
                    global::System.Nullable<int> Original_caseNextStatusId, 
                    global::System.Nullable<int> Original_caseNextOwnerId, 
                    global::System.Nullable<ulong> Original_caseIsClosed, 
                    string Original_caseNumber4, 
                    string Original_caseNumber5, 
                    string Original_caseNumber6, 
                    string Original_caseNumber7, 
                    string Original_caseNumber8, 
                    string Original_caseNumber9, 
                    string Original_caseNumber10, 
                    string Original_caseVarchar4, 
                    string Original_caseVarchar5, 
                    string Original_caseVarchar6, 
                    string Original_caseVarchar7, 
                    string Original_caseVarchar8, 
                    string Original_caseVarchar9, 
                    string Original_caseVarchar10, 
                    string Original_caseVarchar11, 
                    string Original_caseVarchar12, 
                    string Original_caseVarchar13, 
                    string Original_caseVarchar14, 
                    string Original_caseVarchar15, 
                    string Original_caseVarchar16, 
                    string Original_caseVarchar17, 
                    string Original_caseVarchar18, 
                    string Original_caseVarchar19, 
                    string Original_caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime10, 
                    global::System.Nullable<int> Original_caseReceivedFromId, 
                    global::System.Nullable<global::System.DateTime> Original_caseReceived) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(caseId));
            if ((caseTitle == null)) {
                throw new global::System.ArgumentNullException("caseTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(caseTitle));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(caseOwnerId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(caseCreated));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(caseCreatedById));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(caseModified));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(caseModifiedById));
            if ((caseForwarded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(caseForwarded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((caseForwardedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(caseForwardedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(caseProcedureId));
            if ((caseStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(caseStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(caseVersion));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((ulong)(caseIsCurrentVersion));
            if ((caseVarchar1 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(caseVarchar1));
            }
            if ((caseVarchar2 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(caseVarchar2));
            }
            if ((caseVarchar3 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(caseVarchar3));
            }
            if ((caseText1 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(caseText1));
            }
            if ((caseText2 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(caseText2));
            }
            if ((caseText3 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(caseText3));
            }
            if ((caseNumber1 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(caseNumber1));
            }
            if ((caseNumber2 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(caseNumber2));
            }
            if ((caseNumber3 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(caseNumber3));
            }
            if ((caseDateTime1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(caseDateTime1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(caseDateTime2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(caseDateTime3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((caseForwardedCC == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(caseForwardedCC));
            }
            if ((casePrevStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(casePrevStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((casePrevOwnerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(casePrevOwnerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((caseNextStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(caseNextStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((caseNextOwnerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(caseNextOwnerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((caseIsClosed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((ulong)(caseIsClosed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((caseNumber4 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(caseNumber4));
            }
            if ((caseNumber5 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(caseNumber5));
            }
            if ((caseNumber6 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(caseNumber6));
            }
            if ((caseNumber7 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(caseNumber7));
            }
            if ((caseNumber8 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(caseNumber8));
            }
            if ((caseNumber9 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(caseNumber9));
            }
            if ((caseNumber10 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(caseNumber10));
            }
            if ((caseVarchar4 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(caseVarchar4));
            }
            if ((caseVarchar5 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(caseVarchar5));
            }
            if ((caseVarchar6 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(caseVarchar6));
            }
            if ((caseVarchar7 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(caseVarchar7));
            }
            if ((caseVarchar8 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(caseVarchar8));
            }
            if ((caseVarchar9 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(caseVarchar9));
            }
            if ((caseVarchar10 == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(caseVarchar10));
            }
            if ((caseVarchar11 == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(caseVarchar11));
            }
            if ((caseVarchar12 == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(caseVarchar12));
            }
            if ((caseVarchar13 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(caseVarchar13));
            }
            if ((caseVarchar14 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(caseVarchar14));
            }
            if ((caseVarchar15 == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(caseVarchar15));
            }
            if ((caseVarchar16 == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(caseVarchar16));
            }
            if ((caseVarchar17 == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(caseVarchar17));
            }
            if ((caseVarchar18 == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(caseVarchar18));
            }
            if ((caseVarchar19 == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(caseVarchar19));
            }
            if ((caseVarchar20 == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(caseVarchar20));
            }
            if ((caseDateTime4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(caseDateTime4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(caseDateTime5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(caseDateTime6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((System.DateTime)(caseDateTime7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(caseDateTime8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(caseDateTime9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(caseDateTime10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((caseText4 == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(caseText4));
            }
            if ((caseText5 == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(caseText5));
            }
            if ((caseText6 == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(caseText6));
            }
            if ((caseText7 == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(caseText7));
            }
            if ((caseText8 == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(caseText8));
            }
            if ((caseText9 == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(caseText9));
            }
            if ((caseText10 == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(caseText10));
            }
            if ((caseReceivedFromId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(caseReceivedFromId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((caseReceived.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((System.DateTime)(caseReceived.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_caseHistId));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(Original_caseId));
            if ((Original_caseTitle == null)) {
                throw new global::System.ArgumentNullException("Original_caseTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_caseTitle));
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_caseOwnerId));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(Original_caseCreated));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(Original_caseCreatedById));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_caseModified));
            this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_caseModifiedById));
            if ((Original_caseForwarded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((System.DateTime)(Original_caseForwarded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_caseForwardedById.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(Original_caseForwardedById.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[83].Value = ((int)(Original_caseProcedureId));
            if ((Original_caseStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(Original_caseStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_caseVersion));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((ulong)(Original_caseIsCurrentVersion));
            if ((Original_caseVarchar1 == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_caseVarchar1));
            }
            if ((Original_caseVarchar2 == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_caseVarchar2));
            }
            if ((Original_caseVarchar3 == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_caseVarchar3));
            }
            if ((Original_caseNumber1 == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_caseNumber1));
            }
            if ((Original_caseNumber2 == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_caseNumber2));
            }
            if ((Original_caseNumber3 == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_caseNumber3));
            }
            if ((Original_caseDateTime1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((System.DateTime)(Original_caseDateTime1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((System.DateTime)(Original_caseDateTime2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((System.DateTime)(Original_caseDateTime3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_caseForwardedCC == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_caseForwardedCC));
            }
            if ((Original_casePrevStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(Original_casePrevStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_casePrevOwnerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((int)(Original_casePrevOwnerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_caseNextStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(Original_caseNextStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_caseNextOwnerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((int)(Original_caseNextOwnerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_caseIsClosed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((ulong)(Original_caseIsClosed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_caseNumber4 == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_caseNumber4));
            }
            if ((Original_caseNumber5 == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_caseNumber5));
            }
            if ((Original_caseNumber6 == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_caseNumber6));
            }
            if ((Original_caseNumber7 == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_caseNumber7));
            }
            if ((Original_caseNumber8 == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_caseNumber8));
            }
            if ((Original_caseNumber9 == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_caseNumber9));
            }
            if ((Original_caseNumber10 == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_caseNumber10));
            }
            if ((Original_caseVarchar4 == null)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((string)(Original_caseVarchar4));
            }
            if ((Original_caseVarchar5 == null)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_caseVarchar5));
            }
            if ((Original_caseVarchar6 == null)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(Original_caseVarchar6));
            }
            if ((Original_caseVarchar7 == null)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_caseVarchar7));
            }
            if ((Original_caseVarchar8 == null)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((string)(Original_caseVarchar8));
            }
            if ((Original_caseVarchar9 == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_caseVarchar9));
            }
            if ((Original_caseVarchar10 == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_caseVarchar10));
            }
            if ((Original_caseVarchar11 == null)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(Original_caseVarchar11));
            }
            if ((Original_caseVarchar12 == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(Original_caseVarchar12));
            }
            if ((Original_caseVarchar13 == null)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(Original_caseVarchar13));
            }
            if ((Original_caseVarchar14 == null)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(Original_caseVarchar14));
            }
            if ((Original_caseVarchar15 == null)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((string)(Original_caseVarchar15));
            }
            if ((Original_caseVarchar16 == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_caseVarchar16));
            }
            if ((Original_caseVarchar17 == null)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((string)(Original_caseVarchar17));
            }
            if ((Original_caseVarchar18 == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(Original_caseVarchar18));
            }
            if ((Original_caseVarchar19 == null)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((string)(Original_caseVarchar19));
            }
            if ((Original_caseVarchar20 == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_caseVarchar20));
            }
            if ((Original_caseDateTime4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((System.DateTime)(Original_caseDateTime4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((System.DateTime)(Original_caseDateTime5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((System.DateTime)(Original_caseDateTime6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((System.DateTime)(Original_caseDateTime7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((System.DateTime)(Original_caseDateTime8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((System.DateTime)(Original_caseDateTime9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((System.DateTime)(Original_caseDateTime10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_caseReceivedFromId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((int)(Original_caseReceivedFromId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_caseReceived.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((System.DateTime)(Original_caseReceived.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class casehistorydetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public casehistorydetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "casehistorydetails";
            tableMapping.ColumnMappings.Add("caseId", "caseId");
            tableMapping.ColumnMappings.Add("caseTitle", "caseTitle");
            tableMapping.ColumnMappings.Add("caseOwnerId", "caseOwnerId");
            tableMapping.ColumnMappings.Add("caseCreated", "caseCreated");
            tableMapping.ColumnMappings.Add("caseCreatedById", "caseCreatedById");
            tableMapping.ColumnMappings.Add("caseModified", "caseModified");
            tableMapping.ColumnMappings.Add("caseModifiedById", "caseModifiedById");
            tableMapping.ColumnMappings.Add("caseProcedureId", "caseProcedureId");
            tableMapping.ColumnMappings.Add("caseStatusId", "caseStatusId");
            tableMapping.ColumnMappings.Add("caseSubversion", "caseSubversion");
            tableMapping.ColumnMappings.Add("caseVersion", "caseVersion");
            tableMapping.ColumnMappings.Add("caseVarchar1", "caseVarchar1");
            tableMapping.ColumnMappings.Add("caseVarchar2", "caseVarchar2");
            tableMapping.ColumnMappings.Add("caseVarchar3", "caseVarchar3");
            tableMapping.ColumnMappings.Add("caseText1", "caseText1");
            tableMapping.ColumnMappings.Add("caseText2", "caseText2");
            tableMapping.ColumnMappings.Add("caseText3", "caseText3");
            tableMapping.ColumnMappings.Add("caseNumber1", "caseNumber1");
            tableMapping.ColumnMappings.Add("caseNumber2", "caseNumber2");
            tableMapping.ColumnMappings.Add("caseNumber3", "caseNumber3");
            tableMapping.ColumnMappings.Add("caseDateTime1", "caseDateTime1");
            tableMapping.ColumnMappings.Add("caseDateTime2", "caseDateTime2");
            tableMapping.ColumnMappings.Add("caseDateTime3", "caseDateTime3");
            tableMapping.ColumnMappings.Add("caseForwardedCC", "caseForwardedCC");
            tableMapping.ColumnMappings.Add("caseIsClosed", "caseIsClosed");
            tableMapping.ColumnMappings.Add("caseNumber4", "caseNumber4");
            tableMapping.ColumnMappings.Add("caseNumber5", "caseNumber5");
            tableMapping.ColumnMappings.Add("caseNumber6", "caseNumber6");
            tableMapping.ColumnMappings.Add("caseNumber7", "caseNumber7");
            tableMapping.ColumnMappings.Add("caseNumber8", "caseNumber8");
            tableMapping.ColumnMappings.Add("caseNumber9", "caseNumber9");
            tableMapping.ColumnMappings.Add("caseNumber10", "caseNumber10");
            tableMapping.ColumnMappings.Add("caseVarchar4", "caseVarchar4");
            tableMapping.ColumnMappings.Add("caseVarchar5", "caseVarchar5");
            tableMapping.ColumnMappings.Add("caseVarchar6", "caseVarchar6");
            tableMapping.ColumnMappings.Add("caseVarchar7", "caseVarchar7");
            tableMapping.ColumnMappings.Add("caseVarchar8", "caseVarchar8");
            tableMapping.ColumnMappings.Add("caseVarchar9", "caseVarchar9");
            tableMapping.ColumnMappings.Add("caseVarchar10", "caseVarchar10");
            tableMapping.ColumnMappings.Add("caseVarchar11", "caseVarchar11");
            tableMapping.ColumnMappings.Add("caseVarchar12", "caseVarchar12");
            tableMapping.ColumnMappings.Add("caseVarchar13", "caseVarchar13");
            tableMapping.ColumnMappings.Add("caseVarchar14", "caseVarchar14");
            tableMapping.ColumnMappings.Add("caseVarchar15", "caseVarchar15");
            tableMapping.ColumnMappings.Add("caseVarchar16", "caseVarchar16");
            tableMapping.ColumnMappings.Add("caseVarchar17", "caseVarchar17");
            tableMapping.ColumnMappings.Add("caseVarchar18", "caseVarchar18");
            tableMapping.ColumnMappings.Add("caseVarchar19", "caseVarchar19");
            tableMapping.ColumnMappings.Add("caseVarchar20", "caseVarchar20");
            tableMapping.ColumnMappings.Add("caseDateTime4", "caseDateTime4");
            tableMapping.ColumnMappings.Add("caseDateTime5", "caseDateTime5");
            tableMapping.ColumnMappings.Add("caseDateTime6", "caseDateTime6");
            tableMapping.ColumnMappings.Add("caseDateTime7", "caseDateTime7");
            tableMapping.ColumnMappings.Add("caseDateTime8", "caseDateTime8");
            tableMapping.ColumnMappings.Add("caseDateTime9", "caseDateTime9");
            tableMapping.ColumnMappings.Add("caseDateTime10", "caseDateTime10");
            tableMapping.ColumnMappings.Add("caseText4", "caseText4");
            tableMapping.ColumnMappings.Add("caseText5", "caseText5");
            tableMapping.ColumnMappings.Add("caseText6", "caseText6");
            tableMapping.ColumnMappings.Add("caseText7", "caseText7");
            tableMapping.ColumnMappings.Add("caseText8", "caseText8");
            tableMapping.ColumnMappings.Add("caseText9", "caseText9");
            tableMapping.ColumnMappings.Add("caseText10", "caseText10");
            tableMapping.ColumnMappings.Add("caseHistDetId", "caseHistDetId");
            tableMapping.ColumnMappings.Add("caseHistId", "caseHistId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `casehistorydetails` WHERE ((`caseId` = @Original_caseId) AND (`caseT" +
                "itle` = @Original_caseTitle) AND (`caseOwnerId` = @Original_caseOwnerId) AND (`c" +
                "aseCreated` = @Original_caseCreated) AND (`caseCreatedById` = @Original_caseCrea" +
                "tedById) AND (`caseModified` = @Original_caseModified) AND (`caseModifiedById` =" +
                " @Original_caseModifiedById) AND (`caseProcedureId` = @Original_caseProcedureId)" +
                " AND ((@IsNull_caseStatusId = 1 AND `caseStatusId` IS NULL) OR (`caseStatusId` =" +
                " @Original_caseStatusId)) AND (`caseSubversion` = @Original_caseSubversion) AND " +
                "(`caseVersion` = @Original_caseVersion) AND ((@IsNull_caseVarchar1 = 1 AND `case" +
                "Varchar1` IS NULL) OR (`caseVarchar1` = @Original_caseVarchar1)) AND ((@IsNull_c" +
                "aseVarchar2 = 1 AND `caseVarchar2` IS NULL) OR (`caseVarchar2` = @Original_caseV" +
                "archar2)) AND ((@IsNull_caseVarchar3 = 1 AND `caseVarchar3` IS NULL) OR (`caseVa" +
                "rchar3` = @Original_caseVarchar3)) AND ((@IsNull_caseNumber1 = 1 AND `caseNumber" +
                "1` IS NULL) OR (`caseNumber1` = @Original_caseNumber1)) AND ((@IsNull_caseNumber" +
                "2 = 1 AND `caseNumber2` IS NULL) OR (`caseNumber2` = @Original_caseNumber2)) AND" +
                " ((@IsNull_caseNumber3 = 1 AND `caseNumber3` IS NULL) OR (`caseNumber3` = @Origi" +
                "nal_caseNumber3)) AND ((@IsNull_caseDateTime1 = 1 AND `caseDateTime1` IS NULL) O" +
                "R (`caseDateTime1` = @Original_caseDateTime1)) AND ((@IsNull_caseDateTime2 = 1 A" +
                "ND `caseDateTime2` IS NULL) OR (`caseDateTime2` = @Original_caseDateTime2)) AND " +
                "((@IsNull_caseDateTime3 = 1 AND `caseDateTime3` IS NULL) OR (`caseDateTime3` = @" +
                "Original_caseDateTime3)) AND ((@IsNull_caseForwardedCC = 1 AND `caseForwardedCC`" +
                " IS NULL) OR (`caseForwardedCC` = @Original_caseForwardedCC)) AND ((@IsNull_case" +
                "IsClosed = 1 AND `caseIsClosed` IS NULL) OR (`caseIsClosed` = @Original_caseIsCl" +
                "osed)) AND ((@IsNull_caseNumber4 = 1 AND `caseNumber4` IS NULL) OR (`caseNumber4" +
                "` = @Original_caseNumber4)) AND ((@IsNull_caseNumber5 = 1 AND `caseNumber5` IS N" +
                "ULL) OR (`caseNumber5` = @Original_caseNumber5)) AND ((@IsNull_caseNumber6 = 1 A" +
                "ND `caseNumber6` IS NULL) OR (`caseNumber6` = @Original_caseNumber6)) AND ((@IsN" +
                "ull_caseNumber7 = 1 AND `caseNumber7` IS NULL) OR (`caseNumber7` = @Original_cas" +
                "eNumber7)) AND ((@IsNull_caseNumber8 = 1 AND `caseNumber8` IS NULL) OR (`caseNum" +
                "ber8` = @Original_caseNumber8)) AND ((@IsNull_caseNumber9 = 1 AND `caseNumber9` " +
                "IS NULL) OR (`caseNumber9` = @Original_caseNumber9)) AND ((@IsNull_caseNumber10 " +
                "= 1 AND `caseNumber10` IS NULL) OR (`caseNumber10` = @Original_caseNumber10)) AN" +
                "D ((@IsNull_caseVarchar4 = 1 AND `caseVarchar4` IS NULL) OR (`caseVarchar4` = @O" +
                "riginal_caseVarchar4)) AND ((@IsNull_caseVarchar5 = 1 AND `caseVarchar5` IS NULL" +
                ") OR (`caseVarchar5` = @Original_caseVarchar5)) AND ((@IsNull_caseVarchar6 = 1 A" +
                "ND `caseVarchar6` IS NULL) OR (`caseVarchar6` = @Original_caseVarchar6)) AND ((@" +
                "IsNull_caseVarchar7 = 1 AND `caseVarchar7` IS NULL) OR (`caseVarchar7` = @Origin" +
                "al_caseVarchar7)) AND ((@IsNull_caseVarchar8 = 1 AND `caseVarchar8` IS NULL) OR " +
                "(`caseVarchar8` = @Original_caseVarchar8)) AND ((@IsNull_caseVarchar9 = 1 AND `c" +
                "aseVarchar9` IS NULL) OR (`caseVarchar9` = @Original_caseVarchar9)) AND ((@IsNul" +
                "l_caseVarchar10 = 1 AND `caseVarchar10` IS NULL) OR (`caseVarchar10` = @Original" +
                "_caseVarchar10)) AND ((@IsNull_caseVarchar11 = 1 AND `caseVarchar11` IS NULL) OR" +
                " (`caseVarchar11` = @Original_caseVarchar11)) AND ((@IsNull_caseVarchar12 = 1 AN" +
                "D `caseVarchar12` IS NULL) OR (`caseVarchar12` = @Original_caseVarchar12)) AND (" +
                "(@IsNull_caseVarchar13 = 1 AND `caseVarchar13` IS NULL) OR (`caseVarchar13` = @O" +
                "riginal_caseVarchar13)) AND ((@IsNull_caseVarchar14 = 1 AND `caseVarchar14` IS N" +
                "ULL) OR (`caseVarchar14` = @Original_caseVarchar14)) AND ((@IsNull_caseVarchar15" +
                " = 1 AND `caseVarchar15` IS NULL) OR (`caseVarchar15` = @Original_caseVarchar15)" +
                ") AND ((@IsNull_caseVarchar16 = 1 AND `caseVarchar16` IS NULL) OR (`caseVarchar1" +
                "6` = @Original_caseVarchar16)) AND ((@IsNull_caseVarchar17 = 1 AND `caseVarchar1" +
                "7` IS NULL) OR (`caseVarchar17` = @Original_caseVarchar17)) AND ((@IsNull_caseVa" +
                "rchar18 = 1 AND `caseVarchar18` IS NULL) OR (`caseVarchar18` = @Original_caseVar" +
                "char18)) AND ((@IsNull_caseVarchar19 = 1 AND `caseVarchar19` IS NULL) OR (`caseV" +
                "archar19` = @Original_caseVarchar19)) AND ((@IsNull_caseVarchar20 = 1 AND `caseV" +
                "archar20` IS NULL) OR (`caseVarchar20` = @Original_caseVarchar20)) AND ((@IsNull" +
                "_caseDateTime4 = 1 AND `caseDateTime4` IS NULL) OR (`caseDateTime4` = @Original_" +
                "caseDateTime4)) AND ((@IsNull_caseDateTime5 = 1 AND `caseDateTime5` IS NULL) OR " +
                "(`caseDateTime5` = @Original_caseDateTime5)) AND ((@IsNull_caseDateTime6 = 1 AND" +
                " `caseDateTime6` IS NULL) OR (`caseDateTime6` = @Original_caseDateTime6)) AND ((" +
                "@IsNull_caseDateTime7 = 1 AND `caseDateTime7` IS NULL) OR (`caseDateTime7` = @Or" +
                "iginal_caseDateTime7)) AND ((@IsNull_caseDateTime8 = 1 AND `caseDateTime8` IS NU" +
                "LL) OR (`caseDateTime8` = @Original_caseDateTime8)) AND ((@IsNull_caseDateTime9 " +
                "= 1 AND `caseDateTime9` IS NULL) OR (`caseDateTime9` = @Original_caseDateTime9))" +
                " AND ((@IsNull_caseDateTime10 = 1 AND `caseDateTime10` IS NULL) OR (`caseDateTim" +
                "e10` = @Original_caseDateTime10)) AND (`caseHistDetId` = @Original_caseHistDetId" +
                ") AND (`caseHistId` = @Original_caseHistId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseSubversion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseSubversion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwardedCC";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseIsClosed";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar11";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar12";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar13";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar14";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar15";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar16";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar17";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar18";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar19";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar20";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseHistDetId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseHistDetId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseHistId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `casehistorydetails` (`caseId`, `caseTitle`, `caseOwnerId`, `caseCrea" +
                "ted`, `caseCreatedById`, `caseModified`, `caseModifiedById`, `caseProcedureId`, " +
                "`caseStatusId`, `caseSubversion`, `caseVersion`, `caseVarchar1`, `caseVarchar2`," +
                " `caseVarchar3`, `caseText1`, `caseText2`, `caseText3`, `caseNumber1`, `caseNumb" +
                "er2`, `caseNumber3`, `caseDateTime1`, `caseDateTime2`, `caseDateTime3`, `caseFor" +
                "wardedCC`, `caseIsClosed`, `caseNumber4`, `caseNumber5`, `caseNumber6`, `caseNum" +
                "ber7`, `caseNumber8`, `caseNumber9`, `caseNumber10`, `caseVarchar4`, `caseVarcha" +
                "r5`, `caseVarchar6`, `caseVarchar7`, `caseVarchar8`, `caseVarchar9`, `caseVarcha" +
                "r10`, `caseVarchar11`, `caseVarchar12`, `caseVarchar13`, `caseVarchar14`, `caseV" +
                "archar15`, `caseVarchar16`, `caseVarchar17`, `caseVarchar18`, `caseVarchar19`, `" +
                "caseVarchar20`, `caseDateTime4`, `caseDateTime5`, `caseDateTime6`, `caseDateTime" +
                "7`, `caseDateTime8`, `caseDateTime9`, `caseDateTime10`, `caseText4`, `caseText5`" +
                ", `caseText6`, `caseText7`, `caseText8`, `caseText9`, `caseText10`, `caseHistId`" +
                ") VALUES (@caseId, @caseTitle, @caseOwnerId, @caseCreated, @caseCreatedById, @ca" +
                "seModified, @caseModifiedById, @caseProcedureId, @caseStatusId, @caseSubversion," +
                " @caseVersion, @caseVarchar1, @caseVarchar2, @caseVarchar3, @caseText1, @caseTex" +
                "t2, @caseText3, @caseNumber1, @caseNumber2, @caseNumber3, @caseDateTime1, @caseD" +
                "ateTime2, @caseDateTime3, @caseForwardedCC, @caseIsClosed, @caseNumber4, @caseNu" +
                "mber5, @caseNumber6, @caseNumber7, @caseNumber8, @caseNumber9, @caseNumber10, @c" +
                "aseVarchar4, @caseVarchar5, @caseVarchar6, @caseVarchar7, @caseVarchar8, @caseVa" +
                "rchar9, @caseVarchar10, @caseVarchar11, @caseVarchar12, @caseVarchar13, @caseVar" +
                "char14, @caseVarchar15, @caseVarchar16, @caseVarchar17, @caseVarchar18, @caseVar" +
                "char19, @caseVarchar20, @caseDateTime4, @caseDateTime5, @caseDateTime6, @caseDat" +
                "eTime7, @caseDateTime8, @caseDateTime9, @caseDateTime10, @caseText4, @caseText5," +
                " @caseText6, @caseText7, @caseText8, @caseText9, @caseText10, @caseHistId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseSubversion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseSubversion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText5";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText7";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText8";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText9";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText10";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseHistId";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `casehistorydetails` SET `caseId` = @caseId, `caseTitle` = @caseTitle, `ca" +
                "seOwnerId` = @caseOwnerId, `caseCreated` = @caseCreated, `caseCreatedById` = @ca" +
                "seCreatedById, `caseModified` = @caseModified, `caseModifiedById` = @caseModifie" +
                "dById, `caseProcedureId` = @caseProcedureId, `caseStatusId` = @caseStatusId, `ca" +
                "seSubversion` = @caseSubversion, `caseVersion` = @caseVersion, `caseVarchar1` = " +
                "@caseVarchar1, `caseVarchar2` = @caseVarchar2, `caseVarchar3` = @caseVarchar3, `" +
                "caseText1` = @caseText1, `caseText2` = @caseText2, `caseText3` = @caseText3, `ca" +
                "seNumber1` = @caseNumber1, `caseNumber2` = @caseNumber2, `caseNumber3` = @caseNu" +
                "mber3, `caseDateTime1` = @caseDateTime1, `caseDateTime2` = @caseDateTime2, `case" +
                "DateTime3` = @caseDateTime3, `caseForwardedCC` = @caseForwardedCC, `caseIsClosed" +
                "` = @caseIsClosed, `caseNumber4` = @caseNumber4, `caseNumber5` = @caseNumber5, `" +
                "caseNumber6` = @caseNumber6, `caseNumber7` = @caseNumber7, `caseNumber8` = @case" +
                "Number8, `caseNumber9` = @caseNumber9, `caseNumber10` = @caseNumber10, `caseVarc" +
                "har4` = @caseVarchar4, `caseVarchar5` = @caseVarchar5, `caseVarchar6` = @caseVar" +
                "char6, `caseVarchar7` = @caseVarchar7, `caseVarchar8` = @caseVarchar8, `caseVarc" +
                "har9` = @caseVarchar9, `caseVarchar10` = @caseVarchar10, `caseVarchar11` = @case" +
                "Varchar11, `caseVarchar12` = @caseVarchar12, `caseVarchar13` = @caseVarchar13, `" +
                "caseVarchar14` = @caseVarchar14, `caseVarchar15` = @caseVarchar15, `caseVarchar1" +
                "6` = @caseVarchar16, `caseVarchar17` = @caseVarchar17, `caseVarchar18` = @caseVa" +
                "rchar18, `caseVarchar19` = @caseVarchar19, `caseVarchar20` = @caseVarchar20, `ca" +
                "seDateTime4` = @caseDateTime4, `caseDateTime5` = @caseDateTime5, `caseDateTime6`" +
                " = @caseDateTime6, `caseDateTime7` = @caseDateTime7, `caseDateTime8` = @caseDate" +
                "Time8, `caseDateTime9` = @caseDateTime9, `caseDateTime10` = @caseDateTime10, `ca" +
                "seText4` = @caseText4, `caseText5` = @caseText5, `caseText6` = @caseText6, `case" +
                "Text7` = @caseText7, `caseText8` = @caseText8, `caseText9` = @caseText9, `caseTe" +
                "xt10` = @caseText10, `caseHistId` = @caseHistId WHERE ((`caseId` = @Original_cas" +
                "eId) AND (`caseTitle` = @Original_caseTitle) AND (`caseOwnerId` = @Original_case" +
                "OwnerId) AND (`caseCreated` = @Original_caseCreated) AND (`caseCreatedById` = @O" +
                "riginal_caseCreatedById) AND (`caseModified` = @Original_caseModified) AND (`cas" +
                "eModifiedById` = @Original_caseModifiedById) AND (`caseProcedureId` = @Original_" +
                "caseProcedureId) AND ((@IsNull_caseStatusId = 1 AND `caseStatusId` IS NULL) OR (" +
                "`caseStatusId` = @Original_caseStatusId)) AND (`caseSubversion` = @Original_case" +
                "Subversion) AND (`caseVersion` = @Original_caseVersion) AND ((@IsNull_caseVarcha" +
                "r1 = 1 AND `caseVarchar1` IS NULL) OR (`caseVarchar1` = @Original_caseVarchar1))" +
                " AND ((@IsNull_caseVarchar2 = 1 AND `caseVarchar2` IS NULL) OR (`caseVarchar2` =" +
                " @Original_caseVarchar2)) AND ((@IsNull_caseVarchar3 = 1 AND `caseVarchar3` IS N" +
                "ULL) OR (`caseVarchar3` = @Original_caseVarchar3)) AND ((@IsNull_caseNumber1 = 1" +
                " AND `caseNumber1` IS NULL) OR (`caseNumber1` = @Original_caseNumber1)) AND ((@I" +
                "sNull_caseNumber2 = 1 AND `caseNumber2` IS NULL) OR (`caseNumber2` = @Original_c" +
                "aseNumber2)) AND ((@IsNull_caseNumber3 = 1 AND `caseNumber3` IS NULL) OR (`caseN" +
                "umber3` = @Original_caseNumber3)) AND ((@IsNull_caseDateTime1 = 1 AND `caseDateT" +
                "ime1` IS NULL) OR (`caseDateTime1` = @Original_caseDateTime1)) AND ((@IsNull_cas" +
                "eDateTime2 = 1 AND `caseDateTime2` IS NULL) OR (`caseDateTime2` = @Original_case" +
                "DateTime2)) AND ((@IsNull_caseDateTime3 = 1 AND `caseDateTime3` IS NULL) OR (`ca" +
                "seDateTime3` = @Original_caseDateTime3)) AND ((@IsNull_caseForwardedCC = 1 AND `" +
                "caseForwardedCC` IS NULL) OR (`caseForwardedCC` = @Original_caseForwardedCC)) AN" +
                "D ((@IsNull_caseIsClosed = 1 AND `caseIsClosed` IS NULL) OR (`caseIsClosed` = @O" +
                "riginal_caseIsClosed)) AND ((@IsNull_caseNumber4 = 1 AND `caseNumber4` IS NULL) " +
                "OR (`caseNumber4` = @Original_caseNumber4)) AND ((@IsNull_caseNumber5 = 1 AND `c" +
                "aseNumber5` IS NULL) OR (`caseNumber5` = @Original_caseNumber5)) AND ((@IsNull_c" +
                "aseNumber6 = 1 AND `caseNumber6` IS NULL) OR (`caseNumber6` = @Original_caseNumb" +
                "er6)) AND ((@IsNull_caseNumber7 = 1 AND `caseNumber7` IS NULL) OR (`caseNumber7`" +
                " = @Original_caseNumber7)) AND ((@IsNull_caseNumber8 = 1 AND `caseNumber8` IS NU" +
                "LL) OR (`caseNumber8` = @Original_caseNumber8)) AND ((@IsNull_caseNumber9 = 1 AN" +
                "D `caseNumber9` IS NULL) OR (`caseNumber9` = @Original_caseNumber9)) AND ((@IsNu" +
                "ll_caseNumber10 = 1 AND `caseNumber10` IS NULL) OR (`caseNumber10` = @Original_c" +
                "aseNumber10)) AND ((@IsNull_caseVarchar4 = 1 AND `caseVarchar4` IS NULL) OR (`ca" +
                "seVarchar4` = @Original_caseVarchar4)) AND ((@IsNull_caseVarchar5 = 1 AND `caseV" +
                "archar5` IS NULL) OR (`caseVarchar5` = @Original_caseVarchar5)) AND ((@IsNull_ca" +
                "seVarchar6 = 1 AND `caseVarchar6` IS NULL) OR (`caseVarchar6` = @Original_caseVa" +
                "rchar6)) AND ((@IsNull_caseVarchar7 = 1 AND `caseVarchar7` IS NULL) OR (`caseVar" +
                "char7` = @Original_caseVarchar7)) AND ((@IsNull_caseVarchar8 = 1 AND `caseVarcha" +
                "r8` IS NULL) OR (`caseVarchar8` = @Original_caseVarchar8)) AND ((@IsNull_caseVar" +
                "char9 = 1 AND `caseVarchar9` IS NULL) OR (`caseVarchar9` = @Original_caseVarchar" +
                "9)) AND ((@IsNull_caseVarchar10 = 1 AND `caseVarchar10` IS NULL) OR (`caseVarcha" +
                "r10` = @Original_caseVarchar10)) AND ((@IsNull_caseVarchar11 = 1 AND `caseVarcha" +
                "r11` IS NULL) OR (`caseVarchar11` = @Original_caseVarchar11)) AND ((@IsNull_case" +
                "Varchar12 = 1 AND `caseVarchar12` IS NULL) OR (`caseVarchar12` = @Original_caseV" +
                "archar12)) AND ((@IsNull_caseVarchar13 = 1 AND `caseVarchar13` IS NULL) OR (`cas" +
                "eVarchar13` = @Original_caseVarchar13)) AND ((@IsNull_caseVarchar14 = 1 AND `cas" +
                "eVarchar14` IS NULL) OR (`caseVarchar14` = @Original_caseVarchar14)) AND ((@IsNu" +
                "ll_caseVarchar15 = 1 AND `caseVarchar15` IS NULL) OR (`caseVarchar15` = @Origina" +
                "l_caseVarchar15)) AND ((@IsNull_caseVarchar16 = 1 AND `caseVarchar16` IS NULL) O" +
                "R (`caseVarchar16` = @Original_caseVarchar16)) AND ((@IsNull_caseVarchar17 = 1 A" +
                "ND `caseVarchar17` IS NULL) OR (`caseVarchar17` = @Original_caseVarchar17)) AND " +
                "((@IsNull_caseVarchar18 = 1 AND `caseVarchar18` IS NULL) OR (`caseVarchar18` = @" +
                "Original_caseVarchar18)) AND ((@IsNull_caseVarchar19 = 1 AND `caseVarchar19` IS " +
                "NULL) OR (`caseVarchar19` = @Original_caseVarchar19)) AND ((@IsNull_caseVarchar2" +
                "0 = 1 AND `caseVarchar20` IS NULL) OR (`caseVarchar20` = @Original_caseVarchar20" +
                ")) AND ((@IsNull_caseDateTime4 = 1 AND `caseDateTime4` IS NULL) OR (`caseDateTim" +
                "e4` = @Original_caseDateTime4)) AND ((@IsNull_caseDateTime5 = 1 AND `caseDateTim" +
                "e5` IS NULL) OR (`caseDateTime5` = @Original_caseDateTime5)) AND ((@IsNull_caseD" +
                "ateTime6 = 1 AND `caseDateTime6` IS NULL) OR (`caseDateTime6` = @Original_caseDa" +
                "teTime6)) AND ((@IsNull_caseDateTime7 = 1 AND `caseDateTime7` IS NULL) OR (`case" +
                "DateTime7` = @Original_caseDateTime7)) AND ((@IsNull_caseDateTime8 = 1 AND `case" +
                "DateTime8` IS NULL) OR (`caseDateTime8` = @Original_caseDateTime8)) AND ((@IsNul" +
                "l_caseDateTime9 = 1 AND `caseDateTime9` IS NULL) OR (`caseDateTime9` = @Original" +
                "_caseDateTime9)) AND ((@IsNull_caseDateTime10 = 1 AND `caseDateTime10` IS NULL) " +
                "OR (`caseDateTime10` = @Original_caseDateTime10)) AND (`caseHistDetId` = @Origin" +
                "al_caseHistDetId) AND (`caseHistId` = @Original_caseHistId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseSubversion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseSubversion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText5";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText7";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText8";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText9";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseText10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "caseText10";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseHistId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseCreatedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseCreatedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseModifiedById";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseModifiedById";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseSubversion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseSubversion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVersion";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVersion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber1";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber2";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber3";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime1";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime3";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseForwardedCC";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseForwardedCC";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseForwardedCC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseIsClosed";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseIsClosed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "caseIsClosed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber4";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber5";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber6";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber7";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber8";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber9";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseNumber10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseNumber10";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.NewDecimal;
            param.IsNullable = true;
            param.SourceColumn = "caseNumber10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar10";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar11";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar11";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar12";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar12";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar12";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar13";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar13";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar13";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar14";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar14";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar14";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar15";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar15";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar16";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar16";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar16";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar17";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar17";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar17";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar18";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar18";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar18";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar19";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar19";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar19";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseVarchar20";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseVarchar20";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "caseVarchar20";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime5";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime6";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime7";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime8";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime8";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime9";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime9";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseDateTime10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseDateTime10";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "caseDateTime10";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseHistDetId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseHistDetId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseHistId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `caseId`, `caseTitle`, `caseOwnerId`, `caseCreated`, `caseCreatedById`, `caseModified`, `caseModifiedById`, `caseProcedureId`, `caseStatusId`, `caseSubversion`, `caseVersion`, `caseVarchar1`, `caseVarchar2`, `caseVarchar3`, `caseText1`, `caseText2`, `caseText3`, `caseNumber1`, `caseNumber2`, `caseNumber3`, `caseDateTime1`, `caseDateTime2`, `caseDateTime3`, `caseForwardedCC`, `caseIsClosed`, `caseNumber4`, `caseNumber5`, `caseNumber6`, `caseNumber7`, `caseNumber8`, `caseNumber9`, `caseNumber10`, `caseVarchar4`, `caseVarchar5`, `caseVarchar6`, `caseVarchar7`, `caseVarchar8`, `caseVarchar9`, `caseVarchar10`, `caseVarchar11`, `caseVarchar12`, `caseVarchar13`, `caseVarchar14`, `caseVarchar15`, `caseVarchar16`, `caseVarchar17`, `caseVarchar18`, `caseVarchar19`, `caseVarchar20`, `caseDateTime4`, `caseDateTime5`, `caseDateTime6`, `caseDateTime7`, `caseDateTime8`, `caseDateTime9`, `caseDateTime10`, `caseText4`, `caseText5`, `caseText6`, `caseText7`, `caseText8`, `caseText9`, `caseText10`, `caseHistDetId`, `caseHistId` FROM `casehistorydetails`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.casehistorydetailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.casehistorydetailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.casehistorydetailsDataTable dataTable = new amodDataSet.casehistorydetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.casehistorydetailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "casehistorydetails");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_caseId, 
                    string Original_caseTitle, 
                    int Original_caseOwnerId, 
                    System.DateTime Original_caseCreated, 
                    int Original_caseCreatedById, 
                    System.DateTime Original_caseModified, 
                    int Original_caseModifiedById, 
                    int Original_caseProcedureId, 
                    global::System.Nullable<int> Original_caseStatusId, 
                    int Original_caseSubversion, 
                    int Original_caseVersion, 
                    string Original_caseVarchar1, 
                    string Original_caseVarchar2, 
                    string Original_caseVarchar3, 
                    string Original_caseNumber1, 
                    string Original_caseNumber2, 
                    string Original_caseNumber3, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime3, 
                    string Original_caseForwardedCC, 
                    global::System.Nullable<ulong> Original_caseIsClosed, 
                    string Original_caseNumber4, 
                    string Original_caseNumber5, 
                    string Original_caseNumber6, 
                    string Original_caseNumber7, 
                    string Original_caseNumber8, 
                    string Original_caseNumber9, 
                    string Original_caseNumber10, 
                    string Original_caseVarchar4, 
                    string Original_caseVarchar5, 
                    string Original_caseVarchar6, 
                    string Original_caseVarchar7, 
                    string Original_caseVarchar8, 
                    string Original_caseVarchar9, 
                    string Original_caseVarchar10, 
                    string Original_caseVarchar11, 
                    string Original_caseVarchar12, 
                    string Original_caseVarchar13, 
                    string Original_caseVarchar14, 
                    string Original_caseVarchar15, 
                    string Original_caseVarchar16, 
                    string Original_caseVarchar17, 
                    string Original_caseVarchar18, 
                    string Original_caseVarchar19, 
                    string Original_caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime10, 
                    int Original_caseHistDetId, 
                    int Original_caseHistId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_caseId));
            if ((Original_caseTitle == null)) {
                throw new global::System.ArgumentNullException("Original_caseTitle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_caseTitle));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_caseOwnerId));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_caseCreated));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_caseCreatedById));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_caseModified));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_caseModifiedById));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_caseProcedureId));
            if ((Original_caseStatusId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_caseStatusId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_caseSubversion));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_caseVersion));
            if ((Original_caseVarchar1 == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_caseVarchar1));
            }
            if ((Original_caseVarchar2 == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_caseVarchar2));
            }
            if ((Original_caseVarchar3 == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_caseVarchar3));
            }
            if ((Original_caseNumber1 == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_caseNumber1));
            }
            if ((Original_caseNumber2 == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_caseNumber2));
            }
            if ((Original_caseNumber3 == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_caseNumber3));
            }
            if ((Original_caseDateTime1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_caseDateTime1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_caseDateTime2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_caseDateTime3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_caseForwardedCC == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_caseForwardedCC));
            }
            if ((Original_caseIsClosed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((ulong)(Original_caseIsClosed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_caseNumber4 == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_caseNumber4));
            }
            if ((Original_caseNumber5 == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_caseNumber5));
            }
            if ((Original_caseNumber6 == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_caseNumber6));
            }
            if ((Original_caseNumber7 == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_caseNumber7));
            }
            if ((Original_caseNumber8 == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_caseNumber8));
            }
            if ((Original_caseNumber9 == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_caseNumber9));
            }
            if ((Original_caseNumber10 == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_caseNumber10));
            }
            if ((Original_caseVarchar4 == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_caseVarchar4));
            }
            if ((Original_caseVarchar5 == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_caseVarchar5));
            }
            if ((Original_caseVarchar6 == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_caseVarchar6));
            }
            if ((Original_caseVarchar7 == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_caseVarchar7));
            }
            if ((Original_caseVarchar8 == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_caseVarchar8));
            }
            if ((Original_caseVarchar9 == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_caseVarchar9));
            }
            if ((Original_caseVarchar10 == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_caseVarchar10));
            }
            if ((Original_caseVarchar11 == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_caseVarchar11));
            }
            if ((Original_caseVarchar12 == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_caseVarchar12));
            }
            if ((Original_caseVarchar13 == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_caseVarchar13));
            }
            if ((Original_caseVarchar14 == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_caseVarchar14));
            }
            if ((Original_caseVarchar15 == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_caseVarchar15));
            }
            if ((Original_caseVarchar16 == null)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((string)(Original_caseVarchar16));
            }
            if ((Original_caseVarchar17 == null)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((string)(Original_caseVarchar17));
            }
            if ((Original_caseVarchar18 == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_caseVarchar18));
            }
            if ((Original_caseVarchar19 == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_caseVarchar19));
            }
            if ((Original_caseVarchar20 == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_caseVarchar20));
            }
            if ((Original_caseDateTime4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((System.DateTime)(Original_caseDateTime4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((System.DateTime)(Original_caseDateTime5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((System.DateTime)(Original_caseDateTime6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((System.DateTime)(Original_caseDateTime7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime8.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((System.DateTime)(Original_caseDateTime8.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((System.DateTime)(Original_caseDateTime9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime10.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((System.DateTime)(Original_caseDateTime10.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[96].Value = ((int)(Original_caseHistDetId));
            this.Adapter.DeleteCommand.Parameters[97].Value = ((int)(Original_caseHistId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int caseId, 
                    string caseTitle, 
                    int caseOwnerId, 
                    System.DateTime caseCreated, 
                    int caseCreatedById, 
                    System.DateTime caseModified, 
                    int caseModifiedById, 
                    int caseProcedureId, 
                    global::System.Nullable<int> caseStatusId, 
                    int caseSubversion, 
                    int caseVersion, 
                    string caseVarchar1, 
                    string caseVarchar2, 
                    string caseVarchar3, 
                    string caseText1, 
                    string caseText2, 
                    string caseText3, 
                    string caseNumber1, 
                    string caseNumber2, 
                    string caseNumber3, 
                    global::System.Nullable<global::System.DateTime> caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> caseDateTime3, 
                    string caseForwardedCC, 
                    global::System.Nullable<ulong> caseIsClosed, 
                    string caseNumber4, 
                    string caseNumber5, 
                    string caseNumber6, 
                    string caseNumber7, 
                    string caseNumber8, 
                    string caseNumber9, 
                    string caseNumber10, 
                    string caseVarchar4, 
                    string caseVarchar5, 
                    string caseVarchar6, 
                    string caseVarchar7, 
                    string caseVarchar8, 
                    string caseVarchar9, 
                    string caseVarchar10, 
                    string caseVarchar11, 
                    string caseVarchar12, 
                    string caseVarchar13, 
                    string caseVarchar14, 
                    string caseVarchar15, 
                    string caseVarchar16, 
                    string caseVarchar17, 
                    string caseVarchar18, 
                    string caseVarchar19, 
                    string caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> caseDateTime10, 
                    string caseText4, 
                    string caseText5, 
                    string caseText6, 
                    string caseText7, 
                    string caseText8, 
                    string caseText9, 
                    string caseText10, 
                    int caseHistId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(caseId));
            if ((caseTitle == null)) {
                throw new global::System.ArgumentNullException("caseTitle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(caseTitle));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(caseOwnerId));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(caseCreated));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(caseCreatedById));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(caseModified));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(caseModifiedById));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(caseProcedureId));
            if ((caseStatusId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(caseStatusId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(caseSubversion));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(caseVersion));
            if ((caseVarchar1 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(caseVarchar1));
            }
            if ((caseVarchar2 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(caseVarchar2));
            }
            if ((caseVarchar3 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(caseVarchar3));
            }
            if ((caseText1 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(caseText1));
            }
            if ((caseText2 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(caseText2));
            }
            if ((caseText3 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(caseText3));
            }
            if ((caseNumber1 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(caseNumber1));
            }
            if ((caseNumber2 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(caseNumber2));
            }
            if ((caseNumber3 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(caseNumber3));
            }
            if ((caseDateTime1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(caseDateTime1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(caseDateTime2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(caseDateTime3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((caseForwardedCC == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(caseForwardedCC));
            }
            if ((caseIsClosed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((ulong)(caseIsClosed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((caseNumber4 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(caseNumber4));
            }
            if ((caseNumber5 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(caseNumber5));
            }
            if ((caseNumber6 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(caseNumber6));
            }
            if ((caseNumber7 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(caseNumber7));
            }
            if ((caseNumber8 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(caseNumber8));
            }
            if ((caseNumber9 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(caseNumber9));
            }
            if ((caseNumber10 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(caseNumber10));
            }
            if ((caseVarchar4 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(caseVarchar4));
            }
            if ((caseVarchar5 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(caseVarchar5));
            }
            if ((caseVarchar6 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(caseVarchar6));
            }
            if ((caseVarchar7 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(caseVarchar7));
            }
            if ((caseVarchar8 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(caseVarchar8));
            }
            if ((caseVarchar9 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(caseVarchar9));
            }
            if ((caseVarchar10 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(caseVarchar10));
            }
            if ((caseVarchar11 == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(caseVarchar11));
            }
            if ((caseVarchar12 == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(caseVarchar12));
            }
            if ((caseVarchar13 == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(caseVarchar13));
            }
            if ((caseVarchar14 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(caseVarchar14));
            }
            if ((caseVarchar15 == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(caseVarchar15));
            }
            if ((caseVarchar16 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(caseVarchar16));
            }
            if ((caseVarchar17 == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(caseVarchar17));
            }
            if ((caseVarchar18 == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(caseVarchar18));
            }
            if ((caseVarchar19 == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(caseVarchar19));
            }
            if ((caseVarchar20 == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(caseVarchar20));
            }
            if ((caseDateTime4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((System.DateTime)(caseDateTime4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((System.DateTime)(caseDateTime5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(caseDateTime6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((System.DateTime)(caseDateTime7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(caseDateTime8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(caseDateTime9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(caseDateTime10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((caseText4 == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(caseText4));
            }
            if ((caseText5 == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(caseText5));
            }
            if ((caseText6 == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(caseText6));
            }
            if ((caseText7 == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(caseText7));
            }
            if ((caseText8 == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(caseText8));
            }
            if ((caseText9 == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(caseText9));
            }
            if ((caseText10 == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(caseText10));
            }
            this.Adapter.InsertCommand.Parameters[63].Value = ((int)(caseHistId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int caseId, 
                    string caseTitle, 
                    int caseOwnerId, 
                    System.DateTime caseCreated, 
                    int caseCreatedById, 
                    System.DateTime caseModified, 
                    int caseModifiedById, 
                    int caseProcedureId, 
                    global::System.Nullable<int> caseStatusId, 
                    int caseSubversion, 
                    int caseVersion, 
                    string caseVarchar1, 
                    string caseVarchar2, 
                    string caseVarchar3, 
                    string caseText1, 
                    string caseText2, 
                    string caseText3, 
                    string caseNumber1, 
                    string caseNumber2, 
                    string caseNumber3, 
                    global::System.Nullable<global::System.DateTime> caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> caseDateTime3, 
                    string caseForwardedCC, 
                    global::System.Nullable<ulong> caseIsClosed, 
                    string caseNumber4, 
                    string caseNumber5, 
                    string caseNumber6, 
                    string caseNumber7, 
                    string caseNumber8, 
                    string caseNumber9, 
                    string caseNumber10, 
                    string caseVarchar4, 
                    string caseVarchar5, 
                    string caseVarchar6, 
                    string caseVarchar7, 
                    string caseVarchar8, 
                    string caseVarchar9, 
                    string caseVarchar10, 
                    string caseVarchar11, 
                    string caseVarchar12, 
                    string caseVarchar13, 
                    string caseVarchar14, 
                    string caseVarchar15, 
                    string caseVarchar16, 
                    string caseVarchar17, 
                    string caseVarchar18, 
                    string caseVarchar19, 
                    string caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> caseDateTime10, 
                    string caseText4, 
                    string caseText5, 
                    string caseText6, 
                    string caseText7, 
                    string caseText8, 
                    string caseText9, 
                    string caseText10, 
                    int caseHistId, 
                    int Original_caseId, 
                    string Original_caseTitle, 
                    int Original_caseOwnerId, 
                    System.DateTime Original_caseCreated, 
                    int Original_caseCreatedById, 
                    System.DateTime Original_caseModified, 
                    int Original_caseModifiedById, 
                    int Original_caseProcedureId, 
                    global::System.Nullable<int> Original_caseStatusId, 
                    int Original_caseSubversion, 
                    int Original_caseVersion, 
                    string Original_caseVarchar1, 
                    string Original_caseVarchar2, 
                    string Original_caseVarchar3, 
                    string Original_caseNumber1, 
                    string Original_caseNumber2, 
                    string Original_caseNumber3, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime1, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime2, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime3, 
                    string Original_caseForwardedCC, 
                    global::System.Nullable<ulong> Original_caseIsClosed, 
                    string Original_caseNumber4, 
                    string Original_caseNumber5, 
                    string Original_caseNumber6, 
                    string Original_caseNumber7, 
                    string Original_caseNumber8, 
                    string Original_caseNumber9, 
                    string Original_caseNumber10, 
                    string Original_caseVarchar4, 
                    string Original_caseVarchar5, 
                    string Original_caseVarchar6, 
                    string Original_caseVarchar7, 
                    string Original_caseVarchar8, 
                    string Original_caseVarchar9, 
                    string Original_caseVarchar10, 
                    string Original_caseVarchar11, 
                    string Original_caseVarchar12, 
                    string Original_caseVarchar13, 
                    string Original_caseVarchar14, 
                    string Original_caseVarchar15, 
                    string Original_caseVarchar16, 
                    string Original_caseVarchar17, 
                    string Original_caseVarchar18, 
                    string Original_caseVarchar19, 
                    string Original_caseVarchar20, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime4, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime5, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime6, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime7, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime8, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime9, 
                    global::System.Nullable<global::System.DateTime> Original_caseDateTime10, 
                    int Original_caseHistDetId, 
                    int Original_caseHistId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(caseId));
            if ((caseTitle == null)) {
                throw new global::System.ArgumentNullException("caseTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(caseTitle));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(caseOwnerId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(caseCreated));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(caseCreatedById));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(caseModified));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(caseModifiedById));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(caseProcedureId));
            if ((caseStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(caseStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(caseSubversion));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(caseVersion));
            if ((caseVarchar1 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(caseVarchar1));
            }
            if ((caseVarchar2 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(caseVarchar2));
            }
            if ((caseVarchar3 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(caseVarchar3));
            }
            if ((caseText1 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(caseText1));
            }
            if ((caseText2 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(caseText2));
            }
            if ((caseText3 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(caseText3));
            }
            if ((caseNumber1 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(caseNumber1));
            }
            if ((caseNumber2 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(caseNumber2));
            }
            if ((caseNumber3 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(caseNumber3));
            }
            if ((caseDateTime1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(caseDateTime1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(caseDateTime2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(caseDateTime3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((caseForwardedCC == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(caseForwardedCC));
            }
            if ((caseIsClosed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((ulong)(caseIsClosed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((caseNumber4 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(caseNumber4));
            }
            if ((caseNumber5 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(caseNumber5));
            }
            if ((caseNumber6 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(caseNumber6));
            }
            if ((caseNumber7 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(caseNumber7));
            }
            if ((caseNumber8 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(caseNumber8));
            }
            if ((caseNumber9 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(caseNumber9));
            }
            if ((caseNumber10 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(caseNumber10));
            }
            if ((caseVarchar4 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(caseVarchar4));
            }
            if ((caseVarchar5 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(caseVarchar5));
            }
            if ((caseVarchar6 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(caseVarchar6));
            }
            if ((caseVarchar7 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(caseVarchar7));
            }
            if ((caseVarchar8 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(caseVarchar8));
            }
            if ((caseVarchar9 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(caseVarchar9));
            }
            if ((caseVarchar10 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(caseVarchar10));
            }
            if ((caseVarchar11 == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(caseVarchar11));
            }
            if ((caseVarchar12 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(caseVarchar12));
            }
            if ((caseVarchar13 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(caseVarchar13));
            }
            if ((caseVarchar14 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(caseVarchar14));
            }
            if ((caseVarchar15 == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(caseVarchar15));
            }
            if ((caseVarchar16 == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(caseVarchar16));
            }
            if ((caseVarchar17 == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(caseVarchar17));
            }
            if ((caseVarchar18 == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(caseVarchar18));
            }
            if ((caseVarchar19 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(caseVarchar19));
            }
            if ((caseVarchar20 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(caseVarchar20));
            }
            if ((caseDateTime4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(caseDateTime4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(caseDateTime5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(caseDateTime6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(caseDateTime7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(caseDateTime8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(caseDateTime9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((caseDateTime10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(caseDateTime10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((caseText4 == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(caseText4));
            }
            if ((caseText5 == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(caseText5));
            }
            if ((caseText6 == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(caseText6));
            }
            if ((caseText7 == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(caseText7));
            }
            if ((caseText8 == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(caseText8));
            }
            if ((caseText9 == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(caseText9));
            }
            if ((caseText10 == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(caseText10));
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(caseHistId));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(Original_caseId));
            if ((Original_caseTitle == null)) {
                throw new global::System.ArgumentNullException("Original_caseTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_caseTitle));
            }
            this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_caseOwnerId));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((System.DateTime)(Original_caseCreated));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Original_caseCreatedById));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((System.DateTime)(Original_caseModified));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(Original_caseModifiedById));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_caseProcedureId));
            if ((Original_caseStatusId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Original_caseStatusId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_caseSubversion));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_caseVersion));
            if ((Original_caseVarchar1 == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_caseVarchar1));
            }
            if ((Original_caseVarchar2 == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_caseVarchar2));
            }
            if ((Original_caseVarchar3 == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_caseVarchar3));
            }
            if ((Original_caseNumber1 == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_caseNumber1));
            }
            if ((Original_caseNumber2 == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_caseNumber2));
            }
            if ((Original_caseNumber3 == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_caseNumber3));
            }
            if ((Original_caseDateTime1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(Original_caseDateTime1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((System.DateTime)(Original_caseDateTime2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((System.DateTime)(Original_caseDateTime3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_caseForwardedCC == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_caseForwardedCC));
            }
            if ((Original_caseIsClosed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((ulong)(Original_caseIsClosed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_caseNumber4 == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_caseNumber4));
            }
            if ((Original_caseNumber5 == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_caseNumber5));
            }
            if ((Original_caseNumber6 == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_caseNumber6));
            }
            if ((Original_caseNumber7 == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_caseNumber7));
            }
            if ((Original_caseNumber8 == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_caseNumber8));
            }
            if ((Original_caseNumber9 == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_caseNumber9));
            }
            if ((Original_caseNumber10 == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_caseNumber10));
            }
            if ((Original_caseVarchar4 == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_caseVarchar4));
            }
            if ((Original_caseVarchar5 == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_caseVarchar5));
            }
            if ((Original_caseVarchar6 == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(Original_caseVarchar6));
            }
            if ((Original_caseVarchar7 == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_caseVarchar7));
            }
            if ((Original_caseVarchar8 == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_caseVarchar8));
            }
            if ((Original_caseVarchar9 == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_caseVarchar9));
            }
            if ((Original_caseVarchar10 == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_caseVarchar10));
            }
            if ((Original_caseVarchar11 == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_caseVarchar11));
            }
            if ((Original_caseVarchar12 == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_caseVarchar12));
            }
            if ((Original_caseVarchar13 == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_caseVarchar13));
            }
            if ((Original_caseVarchar14 == null)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((string)(Original_caseVarchar14));
            }
            if ((Original_caseVarchar15 == null)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_caseVarchar15));
            }
            if ((Original_caseVarchar16 == null)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(Original_caseVarchar16));
            }
            if ((Original_caseVarchar17 == null)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_caseVarchar17));
            }
            if ((Original_caseVarchar18 == null)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((string)(Original_caseVarchar18));
            }
            if ((Original_caseVarchar19 == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_caseVarchar19));
            }
            if ((Original_caseVarchar20 == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_caseVarchar20));
            }
            if ((Original_caseDateTime4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((System.DateTime)(Original_caseDateTime4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((System.DateTime)(Original_caseDateTime5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((System.DateTime)(Original_caseDateTime6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((System.DateTime)(Original_caseDateTime7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((System.DateTime)(Original_caseDateTime8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((System.DateTime)(Original_caseDateTime9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((Original_caseDateTime10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((System.DateTime)(Original_caseDateTime10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[160].Value = ((int)(Original_caseHistDetId));
            this.Adapter.UpdateCommand.Parameters[161].Value = ((int)(Original_caseHistId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class caseparamTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public caseparamTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "caseparam";
            tableMapping.ColumnMappings.Add("parId", "parId");
            tableMapping.ColumnMappings.Add("parTitle", "parTitle");
            tableMapping.ColumnMappings.Add("parType", "parType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `caseparam` WHERE ((`parId` = @Original_parId) AND (`parTitle` = @Ori" +
                "ginal_parTitle) AND ((@IsNull_parType = 1 AND `parType` IS NULL) OR (`parType` =" +
                " @Original_parType)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_parType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `caseparam` (`parTitle`, `parType`) VALUES (@parTitle, @parType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@parTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@parType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parType";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `caseparam` SET `parTitle` = @parTitle, `parType` = @parType WHERE ((`parI" +
                "d` = @Original_parId) AND (`parTitle` = @Original_parTitle) AND ((@IsNull_parTyp" +
                "e = 1 AND `parType` IS NULL) OR (`parType` = @Original_parType)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@parTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@parType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_parType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `parId`, `parTitle`, `parType` FROM `caseparam`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.caseparamDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.caseparamDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.caseparamDataTable dataTable = new amodDataSet.caseparamDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.caseparamDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "caseparam");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_parId, string Original_parTitle, global::System.Nullable<int> Original_parType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_parId));
            if ((Original_parTitle == null)) {
                throw new global::System.ArgumentNullException("Original_parTitle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_parTitle));
            }
            if ((Original_parType.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_parType.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string parTitle, global::System.Nullable<int> parType) {
            if ((parTitle == null)) {
                throw new global::System.ArgumentNullException("parTitle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(parTitle));
            }
            if ((parType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(parType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string parTitle, global::System.Nullable<int> parType, int Original_parId, string Original_parTitle, global::System.Nullable<int> Original_parType) {
            if ((parTitle == null)) {
                throw new global::System.ArgumentNullException("parTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(parTitle));
            }
            if ((parType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(parType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_parId));
            if ((Original_parTitle == null)) {
                throw new global::System.ArgumentNullException("Original_parTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_parTitle));
            }
            if ((Original_parType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_parType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class casereadedTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public casereadedTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "casereaded";
            tableMapping.ColumnMappings.Add("crdUserId", "crdUserId");
            tableMapping.ColumnMappings.Add("crdCaseId", "crdCaseId");
            tableMapping.ColumnMappings.Add("crdReaded", "crdReaded");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `casereaded` WHERE ((`crdUserId` = @Original_crdUserId) AND (`crdCase" +
                "Id` = @Original_crdCaseId) AND ((@IsNull_crdReaded = 1 AND `crdReaded` IS NULL) " +
                "OR (`crdReaded` = @Original_crdReaded)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_crdUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "crdUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_crdCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "crdCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_crdReaded";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "crdReaded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_crdReaded";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "crdReaded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `casereaded` (`crdUserId`, `crdCaseId`, `crdReaded`) VALUES (@crdUser" +
                "Id, @crdCaseId, @crdReaded)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@crdUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "crdUserId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@crdCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "crdCaseId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@crdReaded";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "crdReaded";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `casereaded` SET `crdUserId` = @crdUserId, `crdCaseId` = @crdCaseId, `crdReaded` = @crdReaded WHERE ((`crdUserId` = @Original_crdUserId) AND (`crdCaseId` = @Original_crdCaseId) AND ((@IsNull_crdReaded = 1 AND `crdReaded` IS NULL) OR (`crdReaded` = @Original_crdReaded)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@crdUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "crdUserId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@crdCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "crdCaseId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@crdReaded";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "crdReaded";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_crdUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "crdUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_crdCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "crdCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_crdReaded";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "crdReaded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_crdReaded";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "crdReaded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `crdUserId`, `crdCaseId`, `crdReaded` FROM `casereaded`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.casereadedDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.casereadedDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.casereadedDataTable dataTable = new amodDataSet.casereadedDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.casereadedDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "casereaded");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_crdUserId, int Original_crdCaseId, global::System.Nullable<byte> Original_crdReaded) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_crdUserId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_crdCaseId));
            if ((Original_crdReaded.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_crdReaded.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int crdUserId, int crdCaseId, global::System.Nullable<byte> crdReaded) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(crdUserId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(crdCaseId));
            if ((crdReaded.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(crdReaded.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int crdUserId, int crdCaseId, global::System.Nullable<byte> crdReaded, int Original_crdUserId, int Original_crdCaseId, global::System.Nullable<byte> Original_crdReaded) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(crdUserId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(crdCaseId));
            if ((crdReaded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(crdReaded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_crdUserId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_crdCaseId));
            if ((Original_crdReaded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte)(Original_crdReaded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<byte> crdReaded, int Original_crdUserId, int Original_crdCaseId, global::System.Nullable<byte> Original_crdReaded) {
            return this.Update(Original_crdUserId, Original_crdCaseId, crdReaded, Original_crdUserId, Original_crdCaseId, Original_crdReaded);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class decisiontreeTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public decisiontreeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "decisiontree";
            tableMapping.ColumnMappings.Add("treeUserId", "treeUserId");
            tableMapping.ColumnMappings.Add("treeStageId", "treeStageId");
            tableMapping.ColumnMappings.Add("treeSerialized", "treeSerialized");
            tableMapping.ColumnMappings.Add("treeProcedureId", "treeProcedureId");
            tableMapping.ColumnMappings.Add("treeType", "treeType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `decisiontree` WHERE ((`treeUserId` = @Original_treeUserId) AND (`tre" +
                "eStageId` = @Original_treeStageId) AND (`treeProcedureId` = @Original_treeProced" +
                "ureId) AND (`treeType` = @Original_treeType))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_treeUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_treeStageId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeStageId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_treeProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_treeType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "treeType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `decisiontree` (`treeUserId`, `treeStageId`, `treeSerialized`, `treeP" +
                "rocedureId`, `treeType`) VALUES (@treeUserId, @treeStageId, @treeSerialized, @tr" +
                "eeProcedureId, @treeType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@treeUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeUserId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@treeStageId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeStageId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@treeSerialized";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "treeSerialized";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@treeProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeProcedureId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@treeType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "treeType";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `decisiontree` SET `treeUserId` = @treeUserId, `treeStageId` = @treeStageId, `treeSerialized` = @treeSerialized, `treeProcedureId` = @treeProcedureId, `treeType` = @treeType WHERE ((`treeUserId` = @Original_treeUserId) AND (`treeStageId` = @Original_treeStageId) AND (`treeProcedureId` = @Original_treeProcedureId) AND (`treeType` = @Original_treeType))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@treeUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeUserId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@treeStageId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeStageId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@treeSerialized";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "treeSerialized";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@treeProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeProcedureId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@treeType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "treeType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_treeUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_treeStageId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeStageId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_treeProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "treeProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_treeType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "treeType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `treeUserId`, `treeStageId`, `treeSerialized`, `treeProcedureId`, `treeTyp" +
                "e` FROM `decisiontree`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.decisiontreeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.decisiontreeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.decisiontreeDataTable dataTable = new amodDataSet.decisiontreeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.decisiontreeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "decisiontree");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_treeUserId, int Original_treeStageId, int Original_treeProcedureId, string Original_treeType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_treeUserId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_treeStageId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_treeProcedureId));
            if ((Original_treeType == null)) {
                throw new global::System.ArgumentNullException("Original_treeType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_treeType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int treeUserId, int treeStageId, string treeSerialized, int treeProcedureId, string treeType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(treeUserId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(treeStageId));
            if ((treeSerialized == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(treeSerialized));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(treeProcedureId));
            if ((treeType == null)) {
                throw new global::System.ArgumentNullException("treeType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(treeType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int treeUserId, int treeStageId, string treeSerialized, int treeProcedureId, string treeType, int Original_treeUserId, int Original_treeStageId, int Original_treeProcedureId, string Original_treeType) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(treeUserId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(treeStageId));
            if ((treeSerialized == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(treeSerialized));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(treeProcedureId));
            if ((treeType == null)) {
                throw new global::System.ArgumentNullException("treeType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(treeType));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_treeUserId));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_treeStageId));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_treeProcedureId));
            if ((Original_treeType == null)) {
                throw new global::System.ArgumentNullException("Original_treeType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_treeType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string treeSerialized, int Original_treeUserId, int Original_treeStageId, int Original_treeProcedureId, string Original_treeType) {
            return this.Update(Original_treeUserId, Original_treeStageId, treeSerialized, Original_treeProcedureId, Original_treeType, Original_treeUserId, Original_treeStageId, Original_treeProcedureId, Original_treeType);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class departmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public departmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "department";
            tableMapping.ColumnMappings.Add("departId", "departId");
            tableMapping.ColumnMappings.Add("departName", "departName");
            tableMapping.ColumnMappings.Add("departManagerId", "departManagerId");
            tableMapping.ColumnMappings.Add("departParentId", "departParentId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `department` WHERE ((`departId` = @Original_departId) AND ((@IsNull_departName = 1 AND `departName` IS NULL) OR (`departName` = @Original_departName)) AND ((@IsNull_departManagerId = 1 AND `departManagerId` IS NULL) OR (`departManagerId` = @Original_departManagerId)) AND ((@IsNull_departParentId = 1 AND `departParentId` IS NULL) OR (`departParentId` = @Original_departParentId)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_departId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_departName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_departName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "departName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_departManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departManagerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_departManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departManagerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_departParentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departParentId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_departParentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departParentId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `department` (`departName`, `departManagerId`, `departParentId`) VALU" +
                "ES (@departName, @departManagerId, @departParentId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@departName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "departName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@departManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departManagerId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@departParentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departParentId";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `department` SET `departName` = @departName, `departManagerId` = @departManagerId, `departParentId` = @departParentId WHERE ((`departId` = @Original_departId) AND ((@IsNull_departName = 1 AND `departName` IS NULL) OR (`departName` = @Original_departName)) AND ((@IsNull_departManagerId = 1 AND `departManagerId` IS NULL) OR (`departManagerId` = @Original_departManagerId)) AND ((@IsNull_departParentId = 1 AND `departParentId` IS NULL) OR (`departParentId` = @Original_departParentId)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@departName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "departName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@departManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departManagerId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@departParentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departParentId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_departId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_departName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_departName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "departName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_departManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departManagerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_departManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departManagerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_departParentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departParentId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_departParentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "departParentId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `departId`, `departName`, `departManagerId`, `departParentId` FROM `depart" +
                "ment`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.departmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.departmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.departmentDataTable dataTable = new amodDataSet.departmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.departmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "department");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_departId, string Original_departName, global::System.Nullable<int> Original_departManagerId, global::System.Nullable<int> Original_departParentId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_departId));
            if ((Original_departName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_departName));
            }
            if ((Original_departManagerId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_departManagerId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_departParentId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_departParentId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string departName, global::System.Nullable<int> departManagerId, global::System.Nullable<int> departParentId) {
            if ((departName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(departName));
            }
            if ((departManagerId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(departManagerId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((departParentId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(departParentId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string departName, global::System.Nullable<int> departManagerId, global::System.Nullable<int> departParentId, int Original_departId, string Original_departName, global::System.Nullable<int> Original_departManagerId, global::System.Nullable<int> Original_departParentId) {
            if ((departName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(departName));
            }
            if ((departManagerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(departManagerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((departParentId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(departParentId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_departId));
            if ((Original_departName == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_departName));
            }
            if ((Original_departManagerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_departManagerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_departParentId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_departParentId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ftsearchdataTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ftsearchdataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ftsearchdata";
            tableMapping.ColumnMappings.Add("ftsText", "ftsText");
            tableMapping.ColumnMappings.Add("ftsType", "ftsType");
            tableMapping.ColumnMappings.Add("ftsObjId", "ftsObjId");
            tableMapping.ColumnMappings.Add("ftsCaseId", "ftsCaseId");
            tableMapping.ColumnMappings.Add("ftsProcTitle", "ftsProcTitle");
            tableMapping.ColumnMappings.Add("ftsCaseTitle", "ftsCaseTitle");
            tableMapping.ColumnMappings.Add("ftsAttTitle", "ftsAttTitle");
            tableMapping.ColumnMappings.Add("ftsModified", "ftsModified");
            tableMapping.ColumnMappings.Add("ftsProcId", "ftsProcId");
            tableMapping.ColumnMappings.Add("ftsCaseHistId", "ftsCaseHistId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `ftsearchdata` WHERE (((@IsNull_ftsText = 1 AND `ftsText` IS NULL) OR (`ftsText` = @Original_ftsText)) AND (`ftsType` = @Original_ftsType) AND (`ftsObjId` = @Original_ftsObjId) AND ((@IsNull_ftsCaseId = 1 AND `ftsCaseId` IS NULL) OR (`ftsCaseId` = @Original_ftsCaseId)) AND ((@IsNull_ftsProcTitle = 1 AND `ftsProcTitle` IS NULL) OR (`ftsProcTitle` = @Original_ftsProcTitle)) AND ((@IsNull_ftsCaseTitle = 1 AND `ftsCaseTitle` IS NULL) OR (`ftsCaseTitle` = @Original_ftsCaseTitle)) AND ((@IsNull_ftsAttTitle = 1 AND `ftsAttTitle` IS NULL) OR (`ftsAttTitle` = @Original_ftsAttTitle)) AND ((@IsNull_ftsModified = 1 AND `ftsModified` IS NULL) OR (`ftsModified` = @Original_ftsModified)) AND ((@IsNull_ftsProcId = 1 AND `ftsProcId` IS NULL) OR (`ftsProcId` = @Original_ftsProcId)) AND ((@IsNull_ftsCaseHistId = 1 AND `ftsCaseHistId` IS NULL) OR (`ftsCaseHistId` = @Original_ftsCaseHistId)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsText";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsText";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsText";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ftsText";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsObjId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsObjId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsProcTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsProcTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsCaseTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsCaseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsAttTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsAttTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsAttTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsAttTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsModified";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ftsModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsProcId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsProcId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsCaseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseHistId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsCaseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseHistId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `ftsearchdata` (`ftsText`, `ftsType`, `ftsObjId`, `ftsCaseId`, `ftsProcTitle`, `ftsCaseTitle`, `ftsAttTitle`, `ftsModified`, `ftsProcId`, `ftsCaseHistId`) VALUES (@ftsText, @ftsType, @ftsObjId, @ftsCaseId, @ftsProcTitle, @ftsCaseTitle, @ftsAttTitle, @ftsModified, @ftsProcId, @ftsCaseHistId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsText";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ftsText";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsObjId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsObjId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsProcTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsCaseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsAttTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsAttTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ftsModified";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsProcId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsCaseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseHistId";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `ftsearchdata` SET `ftsText` = @ftsText, `ftsType` = @ftsType, `ftsObjId` = @ftsObjId, `ftsCaseId` = @ftsCaseId, `ftsProcTitle` = @ftsProcTitle, `ftsCaseTitle` = @ftsCaseTitle, `ftsAttTitle` = @ftsAttTitle, `ftsModified` = @ftsModified, `ftsProcId` = @ftsProcId, `ftsCaseHistId` = @ftsCaseHistId WHERE (((@IsNull_ftsText = 1 AND `ftsText` IS NULL) OR (`ftsText` = @Original_ftsText)) AND (`ftsType` = @Original_ftsType) AND (`ftsObjId` = @Original_ftsObjId) AND ((@IsNull_ftsCaseId = 1 AND `ftsCaseId` IS NULL) OR (`ftsCaseId` = @Original_ftsCaseId)) AND ((@IsNull_ftsProcTitle = 1 AND `ftsProcTitle` IS NULL) OR (`ftsProcTitle` = @Original_ftsProcTitle)) AND ((@IsNull_ftsCaseTitle = 1 AND `ftsCaseTitle` IS NULL) OR (`ftsCaseTitle` = @Original_ftsCaseTitle)) AND ((@IsNull_ftsAttTitle = 1 AND `ftsAttTitle` IS NULL) OR (`ftsAttTitle` = @Original_ftsAttTitle)) AND ((@IsNull_ftsModified = 1 AND `ftsModified` IS NULL) OR (`ftsModified` = @Original_ftsModified)) AND ((@IsNull_ftsProcId = 1 AND `ftsProcId` IS NULL) OR (`ftsProcId` = @Original_ftsProcId)) AND ((@IsNull_ftsCaseHistId = 1 AND `ftsCaseHistId` IS NULL) OR (`ftsCaseHistId` = @Original_ftsCaseHistId)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsText";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ftsText";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsObjId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsObjId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsProcTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsCaseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsAttTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsAttTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ftsModified";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsProcId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ftsCaseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseHistId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsText";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsText";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsText";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ftsText";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsObjId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsObjId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsCaseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsProcTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsProcTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsCaseTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsCaseTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsAttTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsAttTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsAttTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ftsAttTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsModified";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsModified";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "ftsModified";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsProcId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsProcId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsProcId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ftsCaseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseHistId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ftsCaseHistId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ftsCaseHistId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `ftsText`, `ftsType`, `ftsObjId`, `ftsCaseId`, `ftsProcTitle`, `ftsCaseTit" +
                "le`, `ftsAttTitle`, `ftsModified`, `ftsProcId`, `ftsCaseHistId` FROM `ftsearchda" +
                "ta`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.ftsearchdataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.ftsearchdataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.ftsearchdataDataTable dataTable = new amodDataSet.ftsearchdataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.ftsearchdataDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ftsearchdata");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ftsText, string Original_ftsType, int Original_ftsObjId, global::System.Nullable<int> Original_ftsCaseId, string Original_ftsProcTitle, string Original_ftsCaseTitle, string Original_ftsAttTitle, global::System.Nullable<global::System.DateTime> Original_ftsModified, global::System.Nullable<int> Original_ftsProcId, global::System.Nullable<int> Original_ftsCaseHistId) {
            if ((Original_ftsText == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ftsText));
            }
            if ((Original_ftsType == null)) {
                throw new global::System.ArgumentNullException("Original_ftsType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ftsType));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ftsObjId));
            if ((Original_ftsCaseId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_ftsCaseId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_ftsProcTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ftsProcTitle));
            }
            if ((Original_ftsCaseTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ftsCaseTitle));
            }
            if ((Original_ftsAttTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ftsAttTitle));
            }
            if ((Original_ftsModified.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_ftsModified.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_ftsProcId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_ftsProcId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_ftsCaseHistId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_ftsCaseHistId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ftsText, string ftsType, int ftsObjId, global::System.Nullable<int> ftsCaseId, string ftsProcTitle, string ftsCaseTitle, string ftsAttTitle, global::System.Nullable<global::System.DateTime> ftsModified, global::System.Nullable<int> ftsProcId, global::System.Nullable<int> ftsCaseHistId) {
            if ((ftsText == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ftsText));
            }
            if ((ftsType == null)) {
                throw new global::System.ArgumentNullException("ftsType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ftsType));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ftsObjId));
            if ((ftsCaseId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ftsCaseId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ftsProcTitle == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ftsProcTitle));
            }
            if ((ftsCaseTitle == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ftsCaseTitle));
            }
            if ((ftsAttTitle == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ftsAttTitle));
            }
            if ((ftsModified.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(ftsModified.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ftsProcId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(ftsProcId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ftsCaseHistId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(ftsCaseHistId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ftsText, 
                    string ftsType, 
                    int ftsObjId, 
                    global::System.Nullable<int> ftsCaseId, 
                    string ftsProcTitle, 
                    string ftsCaseTitle, 
                    string ftsAttTitle, 
                    global::System.Nullable<global::System.DateTime> ftsModified, 
                    global::System.Nullable<int> ftsProcId, 
                    global::System.Nullable<int> ftsCaseHistId, 
                    string Original_ftsText, 
                    string Original_ftsType, 
                    int Original_ftsObjId, 
                    global::System.Nullable<int> Original_ftsCaseId, 
                    string Original_ftsProcTitle, 
                    string Original_ftsCaseTitle, 
                    string Original_ftsAttTitle, 
                    global::System.Nullable<global::System.DateTime> Original_ftsModified, 
                    global::System.Nullable<int> Original_ftsProcId, 
                    global::System.Nullable<int> Original_ftsCaseHistId) {
            if ((ftsText == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ftsText));
            }
            if ((ftsType == null)) {
                throw new global::System.ArgumentNullException("ftsType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ftsType));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ftsObjId));
            if ((ftsCaseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ftsCaseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ftsProcTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ftsProcTitle));
            }
            if ((ftsCaseTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ftsCaseTitle));
            }
            if ((ftsAttTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ftsAttTitle));
            }
            if ((ftsModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(ftsModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ftsProcId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ftsProcId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ftsCaseHistId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ftsCaseHistId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ftsText == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ftsText));
            }
            if ((Original_ftsType == null)) {
                throw new global::System.ArgumentNullException("Original_ftsType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_ftsType));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ftsObjId));
            if ((Original_ftsCaseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_ftsCaseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_ftsProcTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ftsProcTitle));
            }
            if ((Original_ftsCaseTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ftsCaseTitle));
            }
            if ((Original_ftsAttTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_ftsAttTitle));
            }
            if ((Original_ftsModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_ftsModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_ftsProcId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_ftsProcId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_ftsCaseHistId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_ftsCaseHistId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ftsText, 
                    global::System.Nullable<int> ftsCaseId, 
                    string ftsProcTitle, 
                    string ftsCaseTitle, 
                    string ftsAttTitle, 
                    global::System.Nullable<global::System.DateTime> ftsModified, 
                    global::System.Nullable<int> ftsProcId, 
                    global::System.Nullable<int> ftsCaseHistId, 
                    string Original_ftsText, 
                    string Original_ftsType, 
                    int Original_ftsObjId, 
                    global::System.Nullable<int> Original_ftsCaseId, 
                    string Original_ftsProcTitle, 
                    string Original_ftsCaseTitle, 
                    string Original_ftsAttTitle, 
                    global::System.Nullable<global::System.DateTime> Original_ftsModified, 
                    global::System.Nullable<int> Original_ftsProcId, 
                    global::System.Nullable<int> Original_ftsCaseHistId) {
            return this.Update(ftsText, Original_ftsType, Original_ftsObjId, ftsCaseId, ftsProcTitle, ftsCaseTitle, ftsAttTitle, ftsModified, ftsProcId, ftsCaseHistId, Original_ftsText, Original_ftsType, Original_ftsObjId, Original_ftsCaseId, Original_ftsProcTitle, Original_ftsCaseTitle, Original_ftsAttTitle, Original_ftsModified, Original_ftsProcId, Original_ftsCaseHistId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class mailtemplatesTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public mailtemplatesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "mailtemplates";
            tableMapping.ColumnMappings.Add("mailId", "mailId");
            tableMapping.ColumnMappings.Add("mailTemplate", "mailTemplate");
            tableMapping.ColumnMappings.Add("mailLanguage", "mailLanguage");
            tableMapping.ColumnMappings.Add("mailSubject", "mailSubject");
            tableMapping.ColumnMappings.Add("mailMessage", "mailMessage");
            tableMapping.ColumnMappings.Add("mailHTML", "mailHTML");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `mailtemplates` WHERE ((`mailId` = @Original_mailId) AND ((@IsNull_mailTemplate = 1 AND `mailTemplate` IS NULL) OR (`mailTemplate` = @Original_mailTemplate)) AND ((@IsNull_mailLanguage = 1 AND `mailLanguage` IS NULL) OR (`mailLanguage` = @Original_mailLanguage)) AND ((@IsNull_mailSubject = 1 AND `mailSubject` IS NULL) OR (`mailSubject` = @Original_mailSubject)) AND ((@IsNull_mailHTML = 1 AND `mailHTML` IS NULL) OR (`mailHTML` = @Original_mailHTML)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mailId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mailId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_mailTemplate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mailTemplate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mailTemplate";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailTemplate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_mailLanguage";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mailLanguage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mailLanguage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailLanguage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_mailSubject";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mailSubject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mailSubject";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailSubject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_mailHTML";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mailHTML";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mailHTML";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "mailHTML";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `mailtemplates` (`mailTemplate`, `mailLanguage`, `mailSubject`, `mail" +
                "Message`, `mailHTML`) VALUES (@mailTemplate, @mailLanguage, @mailSubject, @mailM" +
                "essage, @mailHTML)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mailTemplate";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailTemplate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mailLanguage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailLanguage";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mailSubject";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailSubject";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mailMessage";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mailMessage";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mailHTML";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "mailHTML";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `mailtemplates` SET `mailTemplate` = @mailTemplate, `mailLanguage` = @mailLanguage, `mailSubject` = @mailSubject, `mailMessage` = @mailMessage, `mailHTML` = @mailHTML WHERE ((`mailId` = @Original_mailId) AND ((@IsNull_mailTemplate = 1 AND `mailTemplate` IS NULL) OR (`mailTemplate` = @Original_mailTemplate)) AND ((@IsNull_mailLanguage = 1 AND `mailLanguage` IS NULL) OR (`mailLanguage` = @Original_mailLanguage)) AND ((@IsNull_mailSubject = 1 AND `mailSubject` IS NULL) OR (`mailSubject` = @Original_mailSubject)) AND ((@IsNull_mailHTML = 1 AND `mailHTML` IS NULL) OR (`mailHTML` = @Original_mailHTML)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mailTemplate";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailTemplate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mailLanguage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailLanguage";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mailSubject";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailSubject";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mailMessage";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mailMessage";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@mailHTML";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "mailHTML";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mailId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mailId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_mailTemplate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mailTemplate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mailTemplate";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailTemplate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_mailLanguage";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mailLanguage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mailLanguage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailLanguage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_mailSubject";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mailSubject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mailSubject";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "mailSubject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_mailHTML";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mailHTML";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_mailHTML";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "mailHTML";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `mailId`, `mailTemplate`, `mailLanguage`, `mailSubject`, `mailMessage`, `m" +
                "ailHTML` FROM `mailtemplates`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.mailtemplatesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.mailtemplatesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.mailtemplatesDataTable dataTable = new amodDataSet.mailtemplatesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.mailtemplatesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "mailtemplates");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_mailId, string Original_mailTemplate, string Original_mailLanguage, string Original_mailSubject, global::System.Nullable<byte> Original_mailHTML) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_mailId));
            if ((Original_mailTemplate == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_mailTemplate));
            }
            if ((Original_mailLanguage == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_mailLanguage));
            }
            if ((Original_mailSubject == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_mailSubject));
            }
            if ((Original_mailHTML.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((byte)(Original_mailHTML.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string mailTemplate, string mailLanguage, string mailSubject, string mailMessage, global::System.Nullable<byte> mailHTML) {
            if ((mailTemplate == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(mailTemplate));
            }
            if ((mailLanguage == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(mailLanguage));
            }
            if ((mailSubject == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(mailSubject));
            }
            if ((mailMessage == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(mailMessage));
            }
            if ((mailHTML.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(mailHTML.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string mailTemplate, string mailLanguage, string mailSubject, string mailMessage, global::System.Nullable<byte> mailHTML, int Original_mailId, string Original_mailTemplate, string Original_mailLanguage, string Original_mailSubject, global::System.Nullable<byte> Original_mailHTML) {
            if ((mailTemplate == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(mailTemplate));
            }
            if ((mailLanguage == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(mailLanguage));
            }
            if ((mailSubject == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(mailSubject));
            }
            if ((mailMessage == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(mailMessage));
            }
            if ((mailHTML.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(mailHTML.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_mailId));
            if ((Original_mailTemplate == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_mailTemplate));
            }
            if ((Original_mailLanguage == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_mailLanguage));
            }
            if ((Original_mailSubject == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_mailSubject));
            }
            if ((Original_mailHTML.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((byte)(Original_mailHTML.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class nextprocedurestatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public nextprocedurestatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "nextprocedurestatus";
            tableMapping.ColumnMappings.Add("npstToProcStatus", "npstToProcStatus");
            tableMapping.ColumnMappings.Add("npstFromProcStatus", "npstFromProcStatus");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `nextprocedurestatus` WHERE ((`npstToProcStatus` = @Original_npstToPr" +
                "ocStatus) AND (`npstFromProcStatus` = @Original_npstFromProcStatus))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_npstToProcStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "npstToProcStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_npstFromProcStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "npstFromProcStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `nextprocedurestatus` (`npstToProcStatus`, `npstFromProcStatus`) VALU" +
                "ES (@npstToProcStatus, @npstFromProcStatus)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@npstToProcStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "npstToProcStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@npstFromProcStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "npstFromProcStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `nextprocedurestatus` SET `npstToProcStatus` = @npstToProcStatus, `npstFro" +
                "mProcStatus` = @npstFromProcStatus WHERE ((`npstToProcStatus` = @Original_npstTo" +
                "ProcStatus) AND (`npstFromProcStatus` = @Original_npstFromProcStatus))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@npstToProcStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "npstToProcStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@npstFromProcStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "npstFromProcStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_npstToProcStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "npstToProcStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_npstFromProcStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "npstFromProcStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `npstToProcStatus`, `npstFromProcStatus` FROM `nextprocedurestatus`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.nextprocedurestatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.nextprocedurestatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.nextprocedurestatusDataTable dataTable = new amodDataSet.nextprocedurestatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.nextprocedurestatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "nextprocedurestatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_npstToProcStatus, int Original_npstFromProcStatus) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_npstToProcStatus));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_npstFromProcStatus));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int npstToProcStatus, int npstFromProcStatus) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(npstToProcStatus));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(npstFromProcStatus));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int npstToProcStatus, int npstFromProcStatus, int Original_npstToProcStatus, int Original_npstFromProcStatus) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(npstToProcStatus));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(npstFromProcStatus));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_npstToProcStatus));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_npstFromProcStatus));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Original_npstToProcStatus, int Original_npstFromProcStatus) {
            return this.Update(Original_npstToProcStatus, Original_npstFromProcStatus, Original_npstToProcStatus, Original_npstFromProcStatus);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class notificationTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public notificationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "notification";
            tableMapping.ColumnMappings.Add("notId", "notId");
            tableMapping.ColumnMappings.Add("notSubject", "notSubject");
            tableMapping.ColumnMappings.Add("notBody", "notBody");
            tableMapping.ColumnMappings.Add("notFrom", "notFrom");
            tableMapping.ColumnMappings.Add("notTo", "notTo");
            tableMapping.ColumnMappings.Add("notBodyHtml", "notBodyHtml");
            tableMapping.ColumnMappings.Add("notFromU", "notFromU");
            tableMapping.ColumnMappings.Add("notPassword", "notPassword");
            tableMapping.ColumnMappings.Add("notPort", "notPort");
            tableMapping.ColumnMappings.Add("notAdded", "notAdded");
            tableMapping.ColumnMappings.Add("notSended", "notSended");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `notification` WHERE ((`notId` = @Original_notId) AND ((@IsNull_notSubject = 1 AND `notSubject` IS NULL) OR (`notSubject` = @Original_notSubject)) AND ((@IsNull_notBody = 1 AND `notBody` IS NULL) OR (`notBody` = @Original_notBody)) AND ((@IsNull_notFrom = 1 AND `notFrom` IS NULL) OR (`notFrom` = @Original_notFrom)) AND ((@IsNull_notTo = 1 AND `notTo` IS NULL) OR (`notTo` = @Original_notTo)) AND ((@IsNull_notBodyHtml = 1 AND `notBodyHtml` IS NULL) OR (`notBodyHtml` = @Original_notBodyHtml)) AND ((@IsNull_notFromU = 1 AND `notFromU` IS NULL) OR (`notFromU` = @Original_notFromU)) AND ((@IsNull_notPassword = 1 AND `notPassword` IS NULL) OR (`notPassword` = @Original_notPassword)) AND ((@IsNull_notPort = 1 AND `notPort` IS NULL) OR (`notPort` = @Original_notPort)) AND ((@IsNull_notAdded = 1 AND `notAdded` IS NULL) OR (`notAdded` = @Original_notAdded)) AND ((@IsNull_notSended = 1 AND `notSended` IS NULL) OR (`notSended` = @Original_notSended)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notSubject";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notSubject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notSubject";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notSubject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notBody";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notBody";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notBody";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notBody";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notFrom";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notFrom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notFrom";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notFrom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notTo";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notTo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notTo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notTo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notBodyHtml";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notBodyHtml";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notBodyHtml";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "notBodyHtml";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notFromU";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notFromU";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notFromU";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notFromU";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notPassword";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notPassword";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notPassword";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notPassword";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notPort";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notPort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notPort";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notPort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notAdded";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notAdded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notAdded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "notAdded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notSended";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notSended";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notSended";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "notSended";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `notification` (`notSubject`, `notBody`, `notFrom`, `notTo`, `notBodyHtml`, `notFromU`, `notPassword`, `notPort`, `notAdded`, `notSended`) VALUES (@notSubject, @notBody, @notFrom, @notTo, @notBodyHtml, @notFromU, @notPassword, @notPort, @notAdded, @notSended)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notSubject";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notSubject";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notBody";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notBody";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notFrom";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notFrom";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notTo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notTo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notBodyHtml";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "notBodyHtml";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notFromU";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notFromU";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notPassword";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notPassword";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notPort";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notPort";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notAdded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "notAdded";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notSended";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "notSended";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `notification` SET `notSubject` = @notSubject, `notBody` = @notBody, `notFrom` = @notFrom, `notTo` = @notTo, `notBodyHtml` = @notBodyHtml, `notFromU` = @notFromU, `notPassword` = @notPassword, `notPort` = @notPort, `notAdded` = @notAdded, `notSended` = @notSended WHERE ((`notId` = @Original_notId) AND ((@IsNull_notSubject = 1 AND `notSubject` IS NULL) OR (`notSubject` = @Original_notSubject)) AND ((@IsNull_notBody = 1 AND `notBody` IS NULL) OR (`notBody` = @Original_notBody)) AND ((@IsNull_notFrom = 1 AND `notFrom` IS NULL) OR (`notFrom` = @Original_notFrom)) AND ((@IsNull_notTo = 1 AND `notTo` IS NULL) OR (`notTo` = @Original_notTo)) AND ((@IsNull_notBodyHtml = 1 AND `notBodyHtml` IS NULL) OR (`notBodyHtml` = @Original_notBodyHtml)) AND ((@IsNull_notFromU = 1 AND `notFromU` IS NULL) OR (`notFromU` = @Original_notFromU)) AND ((@IsNull_notPassword = 1 AND `notPassword` IS NULL) OR (`notPassword` = @Original_notPassword)) AND ((@IsNull_notPort = 1 AND `notPort` IS NULL) OR (`notPort` = @Original_notPort)) AND ((@IsNull_notAdded = 1 AND `notAdded` IS NULL) OR (`notAdded` = @Original_notAdded)) AND ((@IsNull_notSended = 1 AND `notSended` IS NULL) OR (`notSended` = @Original_notSended)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notSubject";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notSubject";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notBody";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notBody";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notFrom";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notFrom";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notTo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notTo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notBodyHtml";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "notBodyHtml";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notFromU";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notFromU";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notPassword";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notPassword";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notPort";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notPort";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notAdded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "notAdded";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@notSended";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "notSended";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notSubject";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notSubject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notSubject";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notSubject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notBody";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notBody";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notBody";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "notBody";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notFrom";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notFrom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notFrom";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notFrom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notTo";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notTo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notTo";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notTo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notBodyHtml";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notBodyHtml";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notBodyHtml";
            param.DbType = global::System.Data.DbType.SByte;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Byte;
            param.IsNullable = true;
            param.SourceColumn = "notBodyHtml";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notFromU";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notFromU";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notFromU";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notFromU";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notPassword";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notPassword";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notPassword";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "notPassword";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notPort";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notPort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notPort";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notPort";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notAdded";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notAdded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notAdded";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "notAdded";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_notSended";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "notSended";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_notSended";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "notSended";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `notId`, `notSubject`, `notBody`, `notFrom`, `notTo`, `notBodyHtml`, `notF" +
                "romU`, `notPassword`, `notPort`, `notAdded`, `notSended` FROM `notification`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.notificationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.notificationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.notificationDataTable dataTable = new amodDataSet.notificationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.notificationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "notification");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_notId, string Original_notSubject, string Original_notBody, string Original_notFrom, string Original_notTo, global::System.Nullable<byte> Original_notBodyHtml, string Original_notFromU, string Original_notPassword, global::System.Nullable<int> Original_notPort, global::System.Nullable<global::System.DateTime> Original_notAdded, global::System.Nullable<global::System.DateTime> Original_notSended) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_notId));
            if ((Original_notSubject == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_notSubject));
            }
            if ((Original_notBody == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_notBody));
            }
            if ((Original_notFrom == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_notFrom));
            }
            if ((Original_notTo == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_notTo));
            }
            if ((Original_notBodyHtml.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((byte)(Original_notBodyHtml.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_notFromU == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_notFromU));
            }
            if ((Original_notPassword == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_notPassword));
            }
            if ((Original_notPort.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_notPort.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_notAdded.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_notAdded.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_notSended.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_notSended.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string notSubject, string notBody, string notFrom, string notTo, global::System.Nullable<byte> notBodyHtml, string notFromU, string notPassword, global::System.Nullable<int> notPort, global::System.Nullable<global::System.DateTime> notAdded, global::System.Nullable<global::System.DateTime> notSended) {
            if ((notSubject == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(notSubject));
            }
            if ((notBody == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(notBody));
            }
            if ((notFrom == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(notFrom));
            }
            if ((notTo == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(notTo));
            }
            if ((notBodyHtml.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(notBodyHtml.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((notFromU == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(notFromU));
            }
            if ((notPassword == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(notPassword));
            }
            if ((notPort.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(notPort.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((notAdded.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(notAdded.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((notSended.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(notSended.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string notSubject, 
                    string notBody, 
                    string notFrom, 
                    string notTo, 
                    global::System.Nullable<byte> notBodyHtml, 
                    string notFromU, 
                    string notPassword, 
                    global::System.Nullable<int> notPort, 
                    global::System.Nullable<global::System.DateTime> notAdded, 
                    global::System.Nullable<global::System.DateTime> notSended, 
                    int Original_notId, 
                    string Original_notSubject, 
                    string Original_notBody, 
                    string Original_notFrom, 
                    string Original_notTo, 
                    global::System.Nullable<byte> Original_notBodyHtml, 
                    string Original_notFromU, 
                    string Original_notPassword, 
                    global::System.Nullable<int> Original_notPort, 
                    global::System.Nullable<global::System.DateTime> Original_notAdded, 
                    global::System.Nullable<global::System.DateTime> Original_notSended) {
            if ((notSubject == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(notSubject));
            }
            if ((notBody == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(notBody));
            }
            if ((notFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(notFrom));
            }
            if ((notTo == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(notTo));
            }
            if ((notBodyHtml.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(notBodyHtml.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((notFromU == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(notFromU));
            }
            if ((notPassword == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(notPassword));
            }
            if ((notPort.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(notPort.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((notAdded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(notAdded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((notSended.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(notSended.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_notId));
            if ((Original_notSubject == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_notSubject));
            }
            if ((Original_notBody == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_notBody));
            }
            if ((Original_notFrom == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_notFrom));
            }
            if ((Original_notTo == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_notTo));
            }
            if ((Original_notBodyHtml.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((byte)(Original_notBodyHtml.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_notFromU == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_notFromU));
            }
            if ((Original_notPassword == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_notPassword));
            }
            if ((Original_notPort.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_notPort.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_notAdded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_notAdded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_notSended.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_notSended.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class parametersTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public parametersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "parameters";
            tableMapping.ColumnMappings.Add("parId", "parId");
            tableMapping.ColumnMappings.Add("parName", "parName");
            tableMapping.ColumnMappings.Add("parValue", "parValue");
            tableMapping.ColumnMappings.Add("parDescription", "parDescription");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `parameters` WHERE ((`parId` = @Original_parId) AND (`parName` = @Original_parName) AND ((@IsNull_parValue = 1 AND `parValue` IS NULL) OR (`parValue` = @Original_parValue)) AND ((@IsNull_parDescription = 1 AND `parDescription` IS NULL) OR (`parDescription` = @Original_parDescription)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_parValue";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parValue";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_parDescription";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parDescription";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parDescription";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parDescription";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `parameters` (`parName`, `parValue`, `parDescription`) VALUES (@parNa" +
                "me, @parValue, @parDescription)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@parName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@parValue";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parValue";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@parDescription";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parDescription";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `parameters` SET `parName` = @parName, `parValue` = @parValue, `parDescription` = @parDescription WHERE ((`parId` = @Original_parId) AND (`parName` = @Original_parName) AND ((@IsNull_parValue = 1 AND `parValue` IS NULL) OR (`parValue` = @Original_parValue)) AND ((@IsNull_parDescription = 1 AND `parDescription` IS NULL) OR (`parDescription` = @Original_parDescription)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@parName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@parValue";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parValue";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@parDescription";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parDescription";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_parValue";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parValue";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parValue";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_parDescription";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parDescription";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_parDescription";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "parDescription";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `parId`, `parName`, `parValue`, `parDescription` FROM `parameters`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.parametersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.parametersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.parametersDataTable dataTable = new amodDataSet.parametersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.parametersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "parameters");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_parId, string Original_parName, string Original_parValue, string Original_parDescription) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_parId));
            if ((Original_parName == null)) {
                throw new global::System.ArgumentNullException("Original_parName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_parName));
            }
            if ((Original_parValue == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_parValue));
            }
            if ((Original_parDescription == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_parDescription));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string parName, string parValue, string parDescription) {
            if ((parName == null)) {
                throw new global::System.ArgumentNullException("parName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(parName));
            }
            if ((parValue == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(parValue));
            }
            if ((parDescription == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(parDescription));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string parName, string parValue, string parDescription, int Original_parId, string Original_parName, string Original_parValue, string Original_parDescription) {
            if ((parName == null)) {
                throw new global::System.ArgumentNullException("parName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(parName));
            }
            if ((parValue == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(parValue));
            }
            if ((parDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(parDescription));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_parId));
            if ((Original_parName == null)) {
                throw new global::System.ArgumentNullException("Original_parName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_parName));
            }
            if ((Original_parValue == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_parValue));
            }
            if ((Original_parDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_parDescription));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class proceduredefinitionTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public proceduredefinitionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "proceduredefinition";
            tableMapping.ColumnMappings.Add("prcId", "prcId");
            tableMapping.ColumnMappings.Add("prcTitle", "prcTitle");
            tableMapping.ColumnMappings.Add("prcTitlePlural", "prcTitlePlural");
            tableMapping.ColumnMappings.Add("prcDefaultMode", "prcDefaultMode");
            tableMapping.ColumnMappings.Add("prcDynamicNewStages", "prcDynamicNewStages");
            tableMapping.ColumnMappings.Add("prcNewParamsByUser", "prcNewParamsByUser");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `proceduredefinition` WHERE ((`prcId` = @Original_prcId) AND (`prcTitle` = @Original_prcTitle) AND ((@IsNull_prcTitlePlural = 1 AND `prcTitlePlural` IS NULL) OR (`prcTitlePlural` = @Original_prcTitlePlural)) AND (`prcDefaultMode` = @Original_prcDefaultMode) AND (`prcDynamicNewStages` = @Original_prcDynamicNewStages) AND (`prcNewParamsByUser` = @Original_prcNewParamsByUser))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prcTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_prcTitlePlural";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcTitlePlural";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcTitlePlural";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prcTitlePlural";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcDefaultMode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcDefaultMode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcDynamicNewStages";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcDynamicNewStages";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcNewParamsByUser";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcNewParamsByUser";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `proceduredefinition` (`prcTitle`, `prcTitlePlural`, `prcDefaultMode`" +
                ", `prcDynamicNewStages`, `prcNewParamsByUser`) VALUES (@prcTitle, @prcTitlePlura" +
                "l, @prcDefaultMode, @prcDynamicNewStages, @prcNewParamsByUser)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prcTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prcTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prcTitlePlural";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prcTitlePlural";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prcDefaultMode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcDefaultMode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prcDynamicNewStages";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcDynamicNewStages";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prcNewParamsByUser";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcNewParamsByUser";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `proceduredefinition` SET `prcTitle` = @prcTitle, `prcTitlePlural` = @prcTitlePlural, `prcDefaultMode` = @prcDefaultMode, `prcDynamicNewStages` = @prcDynamicNewStages, `prcNewParamsByUser` = @prcNewParamsByUser WHERE ((`prcId` = @Original_prcId) AND (`prcTitle` = @Original_prcTitle) AND ((@IsNull_prcTitlePlural = 1 AND `prcTitlePlural` IS NULL) OR (`prcTitlePlural` = @Original_prcTitlePlural)) AND (`prcDefaultMode` = @Original_prcDefaultMode) AND (`prcDynamicNewStages` = @Original_prcDynamicNewStages) AND (`prcNewParamsByUser` = @Original_prcNewParamsByUser))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prcTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prcTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prcTitlePlural";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prcTitlePlural";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prcDefaultMode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcDefaultMode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prcDynamicNewStages";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcDynamicNewStages";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@prcNewParamsByUser";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcNewParamsByUser";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prcTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_prcTitlePlural";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcTitlePlural";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcTitlePlural";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "prcTitlePlural";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcDefaultMode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcDefaultMode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcDynamicNewStages";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcDynamicNewStages";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_prcNewParamsByUser";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "prcNewParamsByUser";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `prcId`, `prcTitle`, `prcTitlePlural`, `prcDefaultMode`, `prcDynamicNewSta" +
                "ges`, `prcNewParamsByUser` FROM `proceduredefinition`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.proceduredefinitionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.proceduredefinitionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.proceduredefinitionDataTable dataTable = new amodDataSet.proceduredefinitionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.proceduredefinitionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "proceduredefinition");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_prcId, string Original_prcTitle, string Original_prcTitlePlural, int Original_prcDefaultMode, int Original_prcDynamicNewStages, int Original_prcNewParamsByUser) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_prcId));
            if ((Original_prcTitle == null)) {
                throw new global::System.ArgumentNullException("Original_prcTitle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_prcTitle));
            }
            if ((Original_prcTitlePlural == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_prcTitlePlural));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_prcDefaultMode));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_prcDynamicNewStages));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_prcNewParamsByUser));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string prcTitle, string prcTitlePlural, int prcDefaultMode, int prcDynamicNewStages, int prcNewParamsByUser) {
            if ((prcTitle == null)) {
                throw new global::System.ArgumentNullException("prcTitle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(prcTitle));
            }
            if ((prcTitlePlural == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(prcTitlePlural));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(prcDefaultMode));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(prcDynamicNewStages));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(prcNewParamsByUser));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string prcTitle, string prcTitlePlural, int prcDefaultMode, int prcDynamicNewStages, int prcNewParamsByUser, int Original_prcId, string Original_prcTitle, string Original_prcTitlePlural, int Original_prcDefaultMode, int Original_prcDynamicNewStages, int Original_prcNewParamsByUser) {
            if ((prcTitle == null)) {
                throw new global::System.ArgumentNullException("prcTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(prcTitle));
            }
            if ((prcTitlePlural == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(prcTitlePlural));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(prcDefaultMode));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(prcDynamicNewStages));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(prcNewParamsByUser));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_prcId));
            if ((Original_prcTitle == null)) {
                throw new global::System.ArgumentNullException("Original_prcTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_prcTitle));
            }
            if ((Original_prcTitlePlural == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_prcTitlePlural));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_prcDefaultMode));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_prcDynamicNewStages));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_prcNewParamsByUser));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class procedureparamTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public procedureparamTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "procedureparam";
            tableMapping.ColumnMappings.Add("ppaId", "ppaId");
            tableMapping.ColumnMappings.Add("ppaIndex", "ppaIndex");
            tableMapping.ColumnMappings.Add("ppaProcedureId", "ppaProcedureId");
            tableMapping.ColumnMappings.Add("ppaCaseParamId", "ppaCaseParamId");
            tableMapping.ColumnMappings.Add("ppaIsImportant", "ppaIsImportant");
            tableMapping.ColumnMappings.Add("ppaFieldName", "ppaFieldName");
            tableMapping.ColumnMappings.Add("ppaType", "ppaType");
            tableMapping.ColumnMappings.Add("ppaParamTitle", "ppaParamTitle");
            tableMapping.ColumnMappings.Add("ppaSectionName", "ppaSectionName");
            tableMapping.ColumnMappings.Add("ppaActive", "ppaActive");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `procedureparam` WHERE ((`ppaId` = @Original_ppaId) AND (`ppaIndex` = @Original_ppaIndex) AND (`ppaProcedureId` = @Original_ppaProcedureId) AND (`ppaCaseParamId` = @Original_ppaCaseParamId) AND ((@IsNull_ppaIsImportant = 1 AND `ppaIsImportant` IS NULL) OR (`ppaIsImportant` = @Original_ppaIsImportant)) AND (`ppaFieldName` = @Original_ppaFieldName) AND (`ppaType` = @Original_ppaType) AND ((@IsNull_ppaParamTitle = 1 AND `ppaParamTitle` IS NULL) OR (`ppaParamTitle` = @Original_ppaParamTitle)) AND ((@IsNull_ppaSectionName = 1 AND `ppaSectionName` IS NULL) OR (`ppaSectionName` = @Original_ppaSectionName)) AND ((@IsNull_ppaActive = 1 AND `ppaActive` IS NULL) OR (`ppaActive` = @Original_ppaActive)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaIndex";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaIndex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaCaseParamId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaCaseParamId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ppaIsImportant";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaIsImportant";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaIsImportant";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "ppaIsImportant";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaFieldName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaFieldName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ppaParamTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaParamTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaParamTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaParamTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ppaSectionName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaSectionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaSectionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaSectionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ppaActive";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaActive";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaActive";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "ppaActive";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `procedureparam` (`ppaIndex`, `ppaProcedureId`, `ppaCaseParamId`, `ppaIsImportant`, `ppaFieldName`, `ppaType`, `ppaParamTitle`, `ppaSectionName`, `ppaActive`) VALUES (@ppaIndex, @ppaProcedureId, @ppaCaseParamId, @ppaIsImportant, @ppaFieldName, @ppaType, @ppaParamTitle, @ppaSectionName, @ppaActive)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaIndex";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaIndex";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaProcedureId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaCaseParamId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaCaseParamId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaIsImportant";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "ppaIsImportant";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaFieldName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaFieldName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaParamTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaParamTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaSectionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaSectionName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaActive";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "ppaActive";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `procedureparam` SET `ppaIndex` = @ppaIndex, `ppaProcedureId` = @ppaProcedureId, `ppaCaseParamId` = @ppaCaseParamId, `ppaIsImportant` = @ppaIsImportant, `ppaFieldName` = @ppaFieldName, `ppaType` = @ppaType, `ppaParamTitle` = @ppaParamTitle, `ppaSectionName` = @ppaSectionName, `ppaActive` = @ppaActive WHERE ((`ppaId` = @Original_ppaId) AND (`ppaIndex` = @Original_ppaIndex) AND (`ppaProcedureId` = @Original_ppaProcedureId) AND (`ppaCaseParamId` = @Original_ppaCaseParamId) AND ((@IsNull_ppaIsImportant = 1 AND `ppaIsImportant` IS NULL) OR (`ppaIsImportant` = @Original_ppaIsImportant)) AND (`ppaFieldName` = @Original_ppaFieldName) AND (`ppaType` = @Original_ppaType) AND ((@IsNull_ppaParamTitle = 1 AND `ppaParamTitle` IS NULL) OR (`ppaParamTitle` = @Original_ppaParamTitle)) AND ((@IsNull_ppaSectionName = 1 AND `ppaSectionName` IS NULL) OR (`ppaSectionName` = @Original_ppaSectionName)) AND ((@IsNull_ppaActive = 1 AND `ppaActive` IS NULL) OR (`ppaActive` = @Original_ppaActive)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaIndex";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaIndex";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaProcedureId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaCaseParamId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaCaseParamId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaIsImportant";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "ppaIsImportant";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaFieldName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaFieldName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaParamTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaParamTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaSectionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaSectionName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ppaActive";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "ppaActive";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaIndex";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaIndex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaCaseParamId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaCaseParamId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ppaIsImportant";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaIsImportant";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaIsImportant";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "ppaIsImportant";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaFieldName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaFieldName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ppaParamTitle";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaParamTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaParamTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaParamTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ppaSectionName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaSectionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaSectionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ppaSectionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_ppaActive";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ppaActive";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ppaActive";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "ppaActive";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `ppaId`, `ppaIndex`, `ppaProcedureId`, `ppaCaseParamId`, `ppaIsImportant`," +
                " `ppaFieldName`, `ppaType`, `ppaParamTitle`, `ppaSectionName`, `ppaActive` FROM " +
                "`procedureparam`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.procedureparamDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.procedureparamDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.procedureparamDataTable dataTable = new amodDataSet.procedureparamDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.procedureparamDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "procedureparam");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ppaId, int Original_ppaIndex, int Original_ppaProcedureId, int Original_ppaCaseParamId, global::System.Nullable<ulong> Original_ppaIsImportant, string Original_ppaFieldName, int Original_ppaType, string Original_ppaParamTitle, string Original_ppaSectionName, global::System.Nullable<ulong> Original_ppaActive) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ppaId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ppaIndex));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ppaProcedureId));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ppaCaseParamId));
            if ((Original_ppaIsImportant.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((ulong)(Original_ppaIsImportant.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_ppaFieldName == null)) {
                throw new global::System.ArgumentNullException("Original_ppaFieldName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ppaFieldName));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_ppaType));
            if ((Original_ppaParamTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ppaParamTitle));
            }
            if ((Original_ppaSectionName == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ppaSectionName));
            }
            if ((Original_ppaActive.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((ulong)(Original_ppaActive.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ppaIndex, int ppaProcedureId, int ppaCaseParamId, global::System.Nullable<ulong> ppaIsImportant, string ppaFieldName, int ppaType, string ppaParamTitle, string ppaSectionName, global::System.Nullable<ulong> ppaActive) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ppaIndex));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ppaProcedureId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ppaCaseParamId));
            if ((ppaIsImportant.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((ulong)(ppaIsImportant.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ppaFieldName == null)) {
                throw new global::System.ArgumentNullException("ppaFieldName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ppaFieldName));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ppaType));
            if ((ppaParamTitle == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ppaParamTitle));
            }
            if ((ppaSectionName == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ppaSectionName));
            }
            if ((ppaActive.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((ulong)(ppaActive.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ppaIndex, 
                    int ppaProcedureId, 
                    int ppaCaseParamId, 
                    global::System.Nullable<ulong> ppaIsImportant, 
                    string ppaFieldName, 
                    int ppaType, 
                    string ppaParamTitle, 
                    string ppaSectionName, 
                    global::System.Nullable<ulong> ppaActive, 
                    int Original_ppaId, 
                    int Original_ppaIndex, 
                    int Original_ppaProcedureId, 
                    int Original_ppaCaseParamId, 
                    global::System.Nullable<ulong> Original_ppaIsImportant, 
                    string Original_ppaFieldName, 
                    int Original_ppaType, 
                    string Original_ppaParamTitle, 
                    string Original_ppaSectionName, 
                    global::System.Nullable<ulong> Original_ppaActive) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ppaIndex));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ppaProcedureId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ppaCaseParamId));
            if ((ppaIsImportant.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((ulong)(ppaIsImportant.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ppaFieldName == null)) {
                throw new global::System.ArgumentNullException("ppaFieldName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ppaFieldName));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ppaType));
            if ((ppaParamTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ppaParamTitle));
            }
            if ((ppaSectionName == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ppaSectionName));
            }
            if ((ppaActive.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((ulong)(ppaActive.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ppaId));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ppaIndex));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ppaProcedureId));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ppaCaseParamId));
            if ((Original_ppaIsImportant.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((ulong)(Original_ppaIsImportant.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ppaFieldName == null)) {
                throw new global::System.ArgumentNullException("Original_ppaFieldName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ppaFieldName));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_ppaType));
            if ((Original_ppaParamTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ppaParamTitle));
            }
            if ((Original_ppaSectionName == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ppaSectionName));
            }
            if ((Original_ppaActive.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((ulong)(Original_ppaActive.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class procedurestatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public procedurestatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "procedurestatus";
            tableMapping.ColumnMappings.Add("pstId", "pstId");
            tableMapping.ColumnMappings.Add("pstProcedureId", "pstProcedureId");
            tableMapping.ColumnMappings.Add("pstTitle", "pstTitle");
            tableMapping.ColumnMappings.Add("pstIndex", "pstIndex");
            tableMapping.ColumnMappings.Add("pstMode", "pstMode");
            tableMapping.ColumnMappings.Add("pstAllUsersAllowed", "pstAllUsersAllowed");
            tableMapping.ColumnMappings.Add("pstCanStart", "pstCanStart");
            tableMapping.ColumnMappings.Add("pstCanEnd", "pstCanEnd");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `procedurestatus` WHERE ((`pstId` = @Original_pstId) AND (`pstProcedureId` = @Original_pstProcedureId) AND (`pstTitle` = @Original_pstTitle) AND ((@IsNull_pstIndex = 1 AND `pstIndex` IS NULL) OR (`pstIndex` = @Original_pstIndex)) AND ((@IsNull_pstMode = 1 AND `pstMode` IS NULL) OR (`pstMode` = @Original_pstMode)) AND (`pstAllUsersAllowed` = @Original_pstAllUsersAllowed) AND (`pstCanStart` = @Original_pstCanStart) AND (`pstCanEnd` = @Original_pstCanEnd))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pstTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_pstIndex";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstIndex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstIndex";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstIndex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_pstMode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstMode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstMode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstMode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstAllUsersAllowed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstAllUsersAllowed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstCanStart";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstCanStart";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstCanEnd";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstCanEnd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `procedurestatus` (`pstProcedureId`, `pstTitle`, `pstIndex`, `pstMode" +
                "`, `pstAllUsersAllowed`, `pstCanStart`, `pstCanEnd`) VALUES (@pstProcedureId, @p" +
                "stTitle, @pstIndex, @pstMode, @pstAllUsersAllowed, @pstCanStart, @pstCanEnd)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstProcedureId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pstTitle";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstIndex";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstIndex";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstMode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstMode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstAllUsersAllowed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstAllUsersAllowed";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstCanStart";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstCanStart";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstCanEnd";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstCanEnd";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `procedurestatus` SET `pstProcedureId` = @pstProcedureId, `pstTitle` = @pstTitle, `pstIndex` = @pstIndex, `pstMode` = @pstMode, `pstAllUsersAllowed` = @pstAllUsersAllowed, `pstCanStart` = @pstCanStart, `pstCanEnd` = @pstCanEnd WHERE ((`pstId` = @Original_pstId) AND (`pstProcedureId` = @Original_pstProcedureId) AND (`pstTitle` = @Original_pstTitle) AND ((@IsNull_pstIndex = 1 AND `pstIndex` IS NULL) OR (`pstIndex` = @Original_pstIndex)) AND ((@IsNull_pstMode = 1 AND `pstMode` IS NULL) OR (`pstMode` = @Original_pstMode)) AND (`pstAllUsersAllowed` = @Original_pstAllUsersAllowed) AND (`pstCanStart` = @Original_pstCanStart) AND (`pstCanEnd` = @Original_pstCanEnd))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstProcedureId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pstTitle";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstIndex";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstIndex";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstMode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstMode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstAllUsersAllowed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstAllUsersAllowed";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstCanStart";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstCanStart";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@pstCanEnd";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstCanEnd";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstProcedureId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstProcedureId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstTitle";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "pstTitle";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_pstIndex";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstIndex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstIndex";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstIndex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_pstMode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstMode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstMode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "pstMode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstAllUsersAllowed";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstAllUsersAllowed";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstCanStart";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstCanStart";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_pstCanEnd";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "pstCanEnd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `pstId`, `pstProcedureId`, `pstTitle`, `pstIndex`, `pstMode`, `pstAllUsers" +
                "Allowed`, `pstCanStart`, `pstCanEnd` FROM `procedurestatus`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.procedurestatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.procedurestatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.procedurestatusDataTable dataTable = new amodDataSet.procedurestatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.procedurestatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "procedurestatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_pstId, int Original_pstProcedureId, string Original_pstTitle, global::System.Nullable<int> Original_pstIndex, global::System.Nullable<int> Original_pstMode, ulong Original_pstAllUsersAllowed, ulong Original_pstCanStart, ulong Original_pstCanEnd) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_pstId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_pstProcedureId));
            if ((Original_pstTitle == null)) {
                throw new global::System.ArgumentNullException("Original_pstTitle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_pstTitle));
            }
            if ((Original_pstIndex.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_pstIndex.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_pstMode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_pstMode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((ulong)(Original_pstAllUsersAllowed));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((ulong)(Original_pstCanStart));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((ulong)(Original_pstCanEnd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int pstProcedureId, string pstTitle, global::System.Nullable<int> pstIndex, global::System.Nullable<int> pstMode, ulong pstAllUsersAllowed, ulong pstCanStart, ulong pstCanEnd) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(pstProcedureId));
            if ((pstTitle == null)) {
                throw new global::System.ArgumentNullException("pstTitle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(pstTitle));
            }
            if ((pstIndex.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(pstIndex.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pstMode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(pstMode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((ulong)(pstAllUsersAllowed));
            this.Adapter.InsertCommand.Parameters[5].Value = ((ulong)(pstCanStart));
            this.Adapter.InsertCommand.Parameters[6].Value = ((ulong)(pstCanEnd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int pstProcedureId, string pstTitle, global::System.Nullable<int> pstIndex, global::System.Nullable<int> pstMode, ulong pstAllUsersAllowed, ulong pstCanStart, ulong pstCanEnd, int Original_pstId, int Original_pstProcedureId, string Original_pstTitle, global::System.Nullable<int> Original_pstIndex, global::System.Nullable<int> Original_pstMode, ulong Original_pstAllUsersAllowed, ulong Original_pstCanStart, ulong Original_pstCanEnd) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(pstProcedureId));
            if ((pstTitle == null)) {
                throw new global::System.ArgumentNullException("pstTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(pstTitle));
            }
            if ((pstIndex.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(pstIndex.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((pstMode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(pstMode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((ulong)(pstAllUsersAllowed));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((ulong)(pstCanStart));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((ulong)(pstCanEnd));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_pstId));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_pstProcedureId));
            if ((Original_pstTitle == null)) {
                throw new global::System.ArgumentNullException("Original_pstTitle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_pstTitle));
            }
            if ((Original_pstIndex.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_pstIndex.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_pstMode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_pstMode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((ulong)(Original_pstAllUsersAllowed));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((ulong)(Original_pstCanStart));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((ulong)(Original_pstCanEnd));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class procstatususergroupTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public procstatususergroupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "procstatususergroup";
            tableMapping.ColumnMappings.Add("psguId", "psguId");
            tableMapping.ColumnMappings.Add("psguUserId", "psguUserId");
            tableMapping.ColumnMappings.Add("psguGroupId", "psguGroupId");
            tableMapping.ColumnMappings.Add("psguProcStatusId", "psguProcStatusId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `procstatususergroup` WHERE ((`psguId` = @Original_psguId) AND ((@IsNull_psguUserId = 1 AND `psguUserId` IS NULL) OR (`psguUserId` = @Original_psguUserId)) AND ((@IsNull_psguGroupId = 1 AND `psguGroupId` IS NULL) OR (`psguGroupId` = @Original_psguGroupId)) AND (`psguProcStatusId` = @Original_psguProcStatusId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_psguId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_psguUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_psguUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_psguGroupId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguGroupId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_psguGroupId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguGroupId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_psguProcStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguProcStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `procstatususergroup` (`psguUserId`, `psguGroupId`, `psguProcStatusId" +
                "`) VALUES (@psguUserId, @psguGroupId, @psguProcStatusId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@psguUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguUserId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@psguGroupId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguGroupId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@psguProcStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguProcStatusId";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `procstatususergroup` SET `psguUserId` = @psguUserId, `psguGroupId` = @psguGroupId, `psguProcStatusId` = @psguProcStatusId WHERE ((`psguId` = @Original_psguId) AND ((@IsNull_psguUserId = 1 AND `psguUserId` IS NULL) OR (`psguUserId` = @Original_psguUserId)) AND ((@IsNull_psguGroupId = 1 AND `psguGroupId` IS NULL) OR (`psguGroupId` = @Original_psguGroupId)) AND (`psguProcStatusId` = @Original_psguProcStatusId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@psguUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguUserId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@psguGroupId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguGroupId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@psguProcStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguProcStatusId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_psguId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_psguUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_psguUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_psguGroupId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguGroupId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_psguGroupId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguGroupId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_psguProcStatusId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "psguProcStatusId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `psguId`, `psguUserId`, `psguGroupId`, `psguProcStatusId` FROM `procstatus" +
                "usergroup`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.procstatususergroupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.procstatususergroupDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.procstatususergroupDataTable dataTable = new amodDataSet.procstatususergroupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.procstatususergroupDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "procstatususergroup");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_psguId, global::System.Nullable<int> Original_psguUserId, global::System.Nullable<int> Original_psguGroupId, int Original_psguProcStatusId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_psguId));
            if ((Original_psguUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_psguUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_psguGroupId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_psguGroupId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_psguProcStatusId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> psguUserId, global::System.Nullable<int> psguGroupId, int psguProcStatusId) {
            if ((psguUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(psguUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((psguGroupId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(psguGroupId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(psguProcStatusId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> psguUserId, global::System.Nullable<int> psguGroupId, int psguProcStatusId, int Original_psguId, global::System.Nullable<int> Original_psguUserId, global::System.Nullable<int> Original_psguGroupId, int Original_psguProcStatusId) {
            if ((psguUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(psguUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((psguGroupId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(psguGroupId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(psguProcStatusId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_psguId));
            if ((Original_psguUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_psguUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_psguGroupId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_psguGroupId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_psguProcStatusId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class reminderTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public reminderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "reminder";
            tableMapping.ColumnMappings.Add("remId", "remId");
            tableMapping.ColumnMappings.Add("caseId", "caseId");
            tableMapping.ColumnMappings.Add("remOwnerId", "remOwnerId");
            tableMapping.ColumnMappings.Add("remReceiverId", "remReceiverId");
            tableMapping.ColumnMappings.Add("remDeadline", "remDeadline");
            tableMapping.ColumnMappings.Add("remCreated", "remCreated");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `reminder` WHERE ((`remId` = @Original_remId) AND ((@IsNull_caseId = 1 AND `caseId` IS NULL) OR (`caseId` = @Original_caseId)) AND ((@IsNull_remOwnerId = 1 AND `remOwnerId` IS NULL) OR (`remOwnerId` = @Original_remOwnerId)) AND ((@IsNull_remReceiverId = 1 AND `remReceiverId` IS NULL) OR (`remReceiverId` = @Original_remReceiverId)) AND ((@IsNull_remDeadline = 1 AND `remDeadline` IS NULL) OR (`remDeadline` = @Original_remDeadline)) AND ((@IsNull_remCreated = 1 AND `remCreated` IS NULL) OR (`remCreated` = @Original_remCreated)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remReceiverId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remReceiverId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remReceiverId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remReceiverId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remDeadline";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remDeadline";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remDeadline";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "remDeadline";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remCreated";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "remCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `reminder` (`caseId`, `remOwnerId`, `remReceiverId`, `remDeadline`, `" +
                "remCreated`) VALUES (@caseId, @remOwnerId, @remReceiverId, @remDeadline, @remCre" +
                "ated)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remOwnerId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remReceiverId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remReceiverId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remDeadline";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "remDeadline";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "remCreated";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `reminder` SET `caseId` = @caseId, `remOwnerId` = @remOwnerId, `remReceiverId` = @remReceiverId, `remDeadline` = @remDeadline, `remCreated` = @remCreated WHERE ((`remId` = @Original_remId) AND ((@IsNull_caseId = 1 AND `caseId` IS NULL) OR (`caseId` = @Original_caseId)) AND ((@IsNull_remOwnerId = 1 AND `remOwnerId` IS NULL) OR (`remOwnerId` = @Original_remOwnerId)) AND ((@IsNull_remReceiverId = 1 AND `remReceiverId` IS NULL) OR (`remReceiverId` = @Original_remReceiverId)) AND ((@IsNull_remDeadline = 1 AND `remDeadline` IS NULL) OR (`remDeadline` = @Original_remDeadline)) AND ((@IsNull_remCreated = 1 AND `remCreated` IS NULL) OR (`remCreated` = @Original_remCreated)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remOwnerId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remReceiverId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remReceiverId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remDeadline";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "remDeadline";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@remCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "remCreated";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_caseId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "caseId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remOwnerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remOwnerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remReceiverId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remReceiverId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remReceiverId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remReceiverId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remDeadline";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remDeadline";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remDeadline";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "remDeadline";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_remCreated";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "remCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_remCreated";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "remCreated";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `remId`, `caseId`, `remOwnerId`, `remReceiverId`, `remDeadline`, `remCreat" +
                "ed` FROM `reminder`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.reminderDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.reminderDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.reminderDataTable dataTable = new amodDataSet.reminderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.reminderDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "reminder");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_remId, global::System.Nullable<int> Original_caseId, global::System.Nullable<int> Original_remOwnerId, global::System.Nullable<int> Original_remReceiverId, global::System.Nullable<global::System.DateTime> Original_remDeadline, global::System.Nullable<global::System.DateTime> Original_remCreated) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_remId));
            if ((Original_caseId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_caseId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_remOwnerId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_remOwnerId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_remReceiverId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_remReceiverId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_remDeadline.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_remDeadline.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_remCreated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_remCreated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> caseId, global::System.Nullable<int> remOwnerId, global::System.Nullable<int> remReceiverId, global::System.Nullable<global::System.DateTime> remDeadline, global::System.Nullable<global::System.DateTime> remCreated) {
            if ((caseId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(caseId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((remOwnerId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(remOwnerId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((remReceiverId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(remReceiverId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((remDeadline.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(remDeadline.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((remCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(remCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> caseId, global::System.Nullable<int> remOwnerId, global::System.Nullable<int> remReceiverId, global::System.Nullable<global::System.DateTime> remDeadline, global::System.Nullable<global::System.DateTime> remCreated, int Original_remId, global::System.Nullable<int> Original_caseId, global::System.Nullable<int> Original_remOwnerId, global::System.Nullable<int> Original_remReceiverId, global::System.Nullable<global::System.DateTime> Original_remDeadline, global::System.Nullable<global::System.DateTime> Original_remCreated) {
            if ((caseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(caseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((remOwnerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(remOwnerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((remReceiverId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(remReceiverId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((remDeadline.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(remDeadline.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((remCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(remCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_remId));
            if ((Original_caseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_caseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_remOwnerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_remOwnerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_remReceiverId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_remReceiverId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_remDeadline.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_remDeadline.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_remCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_remCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class reportdefinitionTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public reportdefinitionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "reportdefinition";
            tableMapping.ColumnMappings.Add("repId", "repId");
            tableMapping.ColumnMappings.Add("repName", "repName");
            tableMapping.ColumnMappings.Add("repType", "repType");
            tableMapping.ColumnMappings.Add("repXdimensionName", "repXdimensionName");
            tableMapping.ColumnMappings.Add("repYdimensionName", "repYdimensionName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `reportdefinition` WHERE ((`repId` = @Original_repId) AND (`repName` " +
                "= @Original_repName) AND (`repType` = @Original_repType) AND (`repXdimensionName" +
                "` = @Original_repXdimensionName) AND (`repYdimensionName` = @Original_repYdimens" +
                "ionName))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repXdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repXdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repYdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repYdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `reportdefinition` (`repName`, `repType`, `repXdimensionName`, `repYd" +
                "imensionName`) VALUES (@repName, @repType, @repXdimensionName, @repYdimensionNam" +
                "e)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repXdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repXdimensionName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repYdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repYdimensionName";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `reportdefinition` SET `repName` = @repName, `repType` = @repType, `repXdimensionName` = @repXdimensionName, `repYdimensionName` = @repYdimensionName WHERE ((`repId` = @Original_repId) AND (`repName` = @Original_repName) AND (`repType` = @Original_repType) AND (`repXdimensionName` = @Original_repXdimensionName) AND (`repYdimensionName` = @Original_repYdimensionName))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repXdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repXdimensionName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repYdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repYdimensionName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repXdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repXdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repYdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repYdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `repId`, `repName`, `repType`, `repXdimensionName`, `repYdimensionName` FR" +
                "OM `reportdefinition`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.reportdefinitionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.reportdefinitionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.reportdefinitionDataTable dataTable = new amodDataSet.reportdefinitionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.reportdefinitionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "reportdefinition");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_repId, string Original_repName, string Original_repType, string Original_repXdimensionName, string Original_repYdimensionName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_repId));
            if ((Original_repName == null)) {
                throw new global::System.ArgumentNullException("Original_repName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_repName));
            }
            if ((Original_repType == null)) {
                throw new global::System.ArgumentNullException("Original_repType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_repType));
            }
            if ((Original_repXdimensionName == null)) {
                throw new global::System.ArgumentNullException("Original_repXdimensionName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_repXdimensionName));
            }
            if ((Original_repYdimensionName == null)) {
                throw new global::System.ArgumentNullException("Original_repYdimensionName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_repYdimensionName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string repName, string repType, string repXdimensionName, string repYdimensionName) {
            if ((repName == null)) {
                throw new global::System.ArgumentNullException("repName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(repName));
            }
            if ((repType == null)) {
                throw new global::System.ArgumentNullException("repType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(repType));
            }
            if ((repXdimensionName == null)) {
                throw new global::System.ArgumentNullException("repXdimensionName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(repXdimensionName));
            }
            if ((repYdimensionName == null)) {
                throw new global::System.ArgumentNullException("repYdimensionName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(repYdimensionName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string repName, string repType, string repXdimensionName, string repYdimensionName, int Original_repId, string Original_repName, string Original_repType, string Original_repXdimensionName, string Original_repYdimensionName) {
            if ((repName == null)) {
                throw new global::System.ArgumentNullException("repName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(repName));
            }
            if ((repType == null)) {
                throw new global::System.ArgumentNullException("repType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(repType));
            }
            if ((repXdimensionName == null)) {
                throw new global::System.ArgumentNullException("repXdimensionName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(repXdimensionName));
            }
            if ((repYdimensionName == null)) {
                throw new global::System.ArgumentNullException("repYdimensionName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(repYdimensionName));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_repId));
            if ((Original_repName == null)) {
                throw new global::System.ArgumentNullException("Original_repName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_repName));
            }
            if ((Original_repType == null)) {
                throw new global::System.ArgumentNullException("Original_repType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_repType));
            }
            if ((Original_repXdimensionName == null)) {
                throw new global::System.ArgumentNullException("Original_repXdimensionName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_repXdimensionName));
            }
            if ((Original_repYdimensionName == null)) {
                throw new global::System.ArgumentNullException("Original_repYdimensionName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_repYdimensionName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class reportparamTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public reportparamTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "reportparam";
            tableMapping.ColumnMappings.Add("repId", "repId");
            tableMapping.ColumnMappings.Add("repName", "repName");
            tableMapping.ColumnMappings.Add("repType", "repType");
            tableMapping.ColumnMappings.Add("repXdimensionName", "repXdimensionName");
            tableMapping.ColumnMappings.Add("repYdimensionName", "repYdimensionName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `reportparam` WHERE ((`repId` = @Original_repId) AND ((@IsNull_repName = 1 AND `repName` IS NULL) OR (`repName` = @Original_repName)) AND ((@IsNull_repType = 1 AND `repType` IS NULL) OR (`repType` = @Original_repType)) AND ((@IsNull_repXdimensionName = 1 AND `repXdimensionName` IS NULL) OR (`repXdimensionName` = @Original_repXdimensionName)) AND ((@IsNull_repYdimensionName = 1 AND `repYdimensionName` IS NULL) OR (`repYdimensionName` = @Original_repYdimensionName)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_repName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_repType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_repXdimensionName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repXdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repXdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repXdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_repYdimensionName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repYdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repYdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repYdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `reportparam` (`repName`, `repType`, `repXdimensionName`, `repYdimens" +
                "ionName`) VALUES (@repName, @repType, @repXdimensionName, @repYdimensionName)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repXdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repXdimensionName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repYdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repYdimensionName";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `reportparam` SET `repName` = @repName, `repType` = @repType, `repXdimensionName` = @repXdimensionName, `repYdimensionName` = @repYdimensionName WHERE ((`repId` = @Original_repId) AND ((@IsNull_repName = 1 AND `repName` IS NULL) OR (`repName` = @Original_repName)) AND ((@IsNull_repType = 1 AND `repType` IS NULL) OR (`repType` = @Original_repType)) AND ((@IsNull_repXdimensionName = 1 AND `repXdimensionName` IS NULL) OR (`repXdimensionName` = @Original_repXdimensionName)) AND ((@IsNull_repYdimensionName = 1 AND `repYdimensionName` IS NULL) OR (`repYdimensionName` = @Original_repYdimensionName)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repXdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repXdimensionName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@repYdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repYdimensionName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_repName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_repType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_repXdimensionName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repXdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repXdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repXdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_repYdimensionName";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "repYdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_repYdimensionName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "repYdimensionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `repId`, `repName`, `repType`, `repXdimensionName`, `repYdimensionName` FR" +
                "OM `reportparam`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.reportparamDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.reportparamDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.reportparamDataTable dataTable = new amodDataSet.reportparamDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.reportparamDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "reportparam");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_repId, string Original_repName, string Original_repType, string Original_repXdimensionName, string Original_repYdimensionName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_repId));
            if ((Original_repName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_repName));
            }
            if ((Original_repType == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_repType));
            }
            if ((Original_repXdimensionName == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_repXdimensionName));
            }
            if ((Original_repYdimensionName == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_repYdimensionName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string repName, string repType, string repXdimensionName, string repYdimensionName) {
            if ((repName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(repName));
            }
            if ((repType == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(repType));
            }
            if ((repXdimensionName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(repXdimensionName));
            }
            if ((repYdimensionName == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(repYdimensionName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string repName, string repType, string repXdimensionName, string repYdimensionName, int Original_repId, string Original_repName, string Original_repType, string Original_repXdimensionName, string Original_repYdimensionName) {
            if ((repName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(repName));
            }
            if ((repType == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(repType));
            }
            if ((repXdimensionName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(repXdimensionName));
            }
            if ((repYdimensionName == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(repYdimensionName));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_repId));
            if ((Original_repName == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_repName));
            }
            if ((Original_repType == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_repType));
            }
            if ((Original_repXdimensionName == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_repXdimensionName));
            }
            if ((Original_repYdimensionName == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_repYdimensionName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class systemlogTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public systemlogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "systemlog";
            tableMapping.ColumnMappings.Add("logId", "logId");
            tableMapping.ColumnMappings.Add("logStatus", "logStatus");
            tableMapping.ColumnMappings.Add("logDate", "logDate");
            tableMapping.ColumnMappings.Add("logMessage", "logMessage");
            tableMapping.ColumnMappings.Add("logUrl", "logUrl");
            tableMapping.ColumnMappings.Add("logCallStack", "logCallStack");
            tableMapping.ColumnMappings.Add("logModule", "logModule");
            tableMapping.ColumnMappings.Add("logUser", "logUser");
            tableMapping.ColumnMappings.Add("logServer", "logServer");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `systemlog` WHERE ((`logId` = @Original_logId) AND (`logStatus` = @Original_logStatus) AND (`logDate` = @Original_logDate) AND (`logMessage` = @Original_logMessage) AND ((@IsNull_logUrl = 1 AND `logUrl` IS NULL) OR (`logUrl` = @Original_logUrl)) AND ((@IsNull_logModule = 1 AND `logModule` IS NULL) OR (`logModule` = @Original_logModule)) AND ((@IsNull_logUser = 1 AND `logUser` IS NULL) OR (`logUser` = @Original_logUser)) AND ((@IsNull_logServer = 1 AND `logServer` IS NULL) OR (`logServer` = @Original_logServer)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "logDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logMessage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logMessage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_logUrl";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logUrl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logUrl";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logUrl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_logModule";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logModule";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logModule";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logModule";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_logUser";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logUser";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logUser";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logUser";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_logServer";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logServer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logServer";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logServer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `systemlog` (`logStatus`, `logDate`, `logMessage`, `logUrl`, `logCall" +
                "Stack`, `logModule`, `logUser`, `logServer`) VALUES (@logStatus, @logDate, @logM" +
                "essage, @logUrl, @logCallStack, @logModule, @logUser, @logServer)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logStatus";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "logDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logMessage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logMessage";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logUrl";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logUrl";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logCallStack";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "logCallStack";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logModule";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logModule";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logUser";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logUser";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logServer";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logServer";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `systemlog` SET `logStatus` = @logStatus, `logDate` = @logDate, `logMessage` = @logMessage, `logUrl` = @logUrl, `logCallStack` = @logCallStack, `logModule` = @logModule, `logUser` = @logUser, `logServer` = @logServer WHERE ((`logId` = @Original_logId) AND (`logStatus` = @Original_logStatus) AND (`logDate` = @Original_logDate) AND (`logMessage` = @Original_logMessage) AND ((@IsNull_logUrl = 1 AND `logUrl` IS NULL) OR (`logUrl` = @Original_logUrl)) AND ((@IsNull_logModule = 1 AND `logModule` IS NULL) OR (`logModule` = @Original_logModule)) AND ((@IsNull_logUser = 1 AND `logUser` IS NULL) OR (`logUser` = @Original_logUser)) AND ((@IsNull_logServer = 1 AND `logServer` IS NULL) OR (`logServer` = @Original_logServer)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logStatus";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "logDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logMessage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logMessage";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logUrl";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logUrl";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logCallStack";
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "logCallStack";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logModule";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logModule";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logUser";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logUser";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@logServer";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logServer";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logStatus";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logStatus";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "logDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logMessage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logMessage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_logUrl";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logUrl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logUrl";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logUrl";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_logModule";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logModule";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logModule";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logModule";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_logUser";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logUser";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logUser";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logUser";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_logServer";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logServer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_logServer";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "logServer";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `logId`, `logStatus`, `logDate`, `logMessage`, `logUrl`, `logCallStack`, `" +
                "logModule`, `logUser`, `logServer` FROM `systemlog`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.systemlogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.systemlogDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.systemlogDataTable dataTable = new amodDataSet.systemlogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.systemlogDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "systemlog");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_logId, int Original_logStatus, System.DateTime Original_logDate, string Original_logMessage, string Original_logUrl, string Original_logModule, string Original_logUser, string Original_logServer) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_logId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_logStatus));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_logDate));
            if ((Original_logMessage == null)) {
                throw new global::System.ArgumentNullException("Original_logMessage");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_logMessage));
            }
            if ((Original_logUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_logUrl));
            }
            if ((Original_logModule == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_logModule));
            }
            if ((Original_logUser == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_logUser));
            }
            if ((Original_logServer == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_logServer));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int logStatus, System.DateTime logDate, string logMessage, string logUrl, string logCallStack, string logModule, string logUser, string logServer) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(logStatus));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(logDate));
            if ((logMessage == null)) {
                throw new global::System.ArgumentNullException("logMessage");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(logMessage));
            }
            if ((logUrl == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(logUrl));
            }
            if ((logCallStack == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(logCallStack));
            }
            if ((logModule == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(logModule));
            }
            if ((logUser == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(logUser));
            }
            if ((logServer == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(logServer));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int logStatus, 
                    System.DateTime logDate, 
                    string logMessage, 
                    string logUrl, 
                    string logCallStack, 
                    string logModule, 
                    string logUser, 
                    string logServer, 
                    int Original_logId, 
                    int Original_logStatus, 
                    System.DateTime Original_logDate, 
                    string Original_logMessage, 
                    string Original_logUrl, 
                    string Original_logModule, 
                    string Original_logUser, 
                    string Original_logServer) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(logStatus));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(logDate));
            if ((logMessage == null)) {
                throw new global::System.ArgumentNullException("logMessage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(logMessage));
            }
            if ((logUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(logUrl));
            }
            if ((logCallStack == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(logCallStack));
            }
            if ((logModule == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(logModule));
            }
            if ((logUser == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(logUser));
            }
            if ((logServer == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(logServer));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_logId));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_logStatus));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_logDate));
            if ((Original_logMessage == null)) {
                throw new global::System.ArgumentNullException("Original_logMessage");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_logMessage));
            }
            if ((Original_logUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_logUrl));
            }
            if ((Original_logModule == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_logModule));
            }
            if ((Original_logUser == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_logUser));
            }
            if ((Original_logServer == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_logServer));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class useractionTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public useractionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "useraction";
            tableMapping.ColumnMappings.Add("actId", "actId");
            tableMapping.ColumnMappings.Add("actUserId", "actUserId");
            tableMapping.ColumnMappings.Add("actObjectType", "actObjectType");
            tableMapping.ColumnMappings.Add("actObjectId", "actObjectId");
            tableMapping.ColumnMappings.Add("actActionType", "actActionType");
            tableMapping.ColumnMappings.Add("actDate", "actDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `useraction` WHERE ((`actId` = @Original_actId) AND ((@IsNull_actUserId = 1 AND `actUserId` IS NULL) OR (`actUserId` = @Original_actUserId)) AND ((@IsNull_actObjectType = 1 AND `actObjectType` IS NULL) OR (`actObjectType` = @Original_actObjectType)) AND ((@IsNull_actObjectId = 1 AND `actObjectId` IS NULL) OR (`actObjectId` = @Original_actObjectId)) AND ((@IsNull_actActionType = 1 AND `actActionType` IS NULL) OR (`actActionType` = @Original_actActionType)) AND ((@IsNull_actDate = 1 AND `actDate` IS NULL) OR (`actDate` = @Original_actDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_actUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_actObjectType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actObjectType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actObjectType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "actObjectType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_actObjectId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actObjectId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actObjectId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actObjectId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_actActionType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actActionType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actActionType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "actActionType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_actDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "actDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `useraction` (`actUserId`, `actObjectType`, `actObjectId`, `actAction" +
                "Type`, `actDate`) VALUES (@actUserId, @actObjectType, @actObjectId, @actActionTy" +
                "pe, @actDate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@actUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actUserId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@actObjectType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "actObjectType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@actObjectId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actObjectId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@actActionType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "actActionType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@actDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "actDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `useraction` SET `actUserId` = @actUserId, `actObjectType` = @actObjectType, `actObjectId` = @actObjectId, `actActionType` = @actActionType, `actDate` = @actDate WHERE ((`actId` = @Original_actId) AND ((@IsNull_actUserId = 1 AND `actUserId` IS NULL) OR (`actUserId` = @Original_actUserId)) AND ((@IsNull_actObjectType = 1 AND `actObjectType` IS NULL) OR (`actObjectType` = @Original_actObjectType)) AND ((@IsNull_actObjectId = 1 AND `actObjectId` IS NULL) OR (`actObjectId` = @Original_actObjectId)) AND ((@IsNull_actActionType = 1 AND `actActionType` IS NULL) OR (`actActionType` = @Original_actActionType)) AND ((@IsNull_actDate = 1 AND `actDate` IS NULL) OR (`actDate` = @Original_actDate)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@actUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actUserId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@actObjectType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "actObjectType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@actObjectId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actObjectId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@actActionType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "actActionType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@actDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "actDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_actUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_actObjectType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actObjectType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actObjectType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "actObjectType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_actObjectId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actObjectId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actObjectId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actObjectId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_actActionType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actActionType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actActionType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "actActionType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_actDate";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "actDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_actDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "actDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `actId`, `actUserId`, `actObjectType`, `actObjectId`, `actActionType`, `ac" +
                "tDate` FROM `useraction`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.useractionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.useractionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.useractionDataTable dataTable = new amodDataSet.useractionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.useractionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "useraction");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_actId, global::System.Nullable<int> Original_actUserId, string Original_actObjectType, global::System.Nullable<int> Original_actObjectId, string Original_actActionType, global::System.Nullable<global::System.DateTime> Original_actDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_actId));
            if ((Original_actUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_actUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_actObjectType == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_actObjectType));
            }
            if ((Original_actObjectId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_actObjectId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_actActionType == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_actActionType));
            }
            if ((Original_actDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_actDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> actUserId, string actObjectType, global::System.Nullable<int> actObjectId, string actActionType, global::System.Nullable<global::System.DateTime> actDate) {
            if ((actUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(actUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((actObjectType == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(actObjectType));
            }
            if ((actObjectId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(actObjectId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((actActionType == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(actActionType));
            }
            if ((actDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(actDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> actUserId, string actObjectType, global::System.Nullable<int> actObjectId, string actActionType, global::System.Nullable<global::System.DateTime> actDate, int Original_actId, global::System.Nullable<int> Original_actUserId, string Original_actObjectType, global::System.Nullable<int> Original_actObjectId, string Original_actActionType, global::System.Nullable<global::System.DateTime> Original_actDate) {
            if ((actUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(actUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((actObjectType == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(actObjectType));
            }
            if ((actObjectId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(actObjectId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((actActionType == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(actActionType));
            }
            if ((actDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(actDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_actId));
            if ((Original_actUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_actUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_actObjectType == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_actObjectType));
            }
            if ((Original_actObjectId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_actObjectId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_actActionType == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_actActionType));
            }
            if ((Original_actDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_actDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usergroupTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public usergroupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usergroup";
            tableMapping.ColumnMappings.Add("ugrId", "ugrId");
            tableMapping.ColumnMappings.Add("ugrName", "ugrName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `usergroup` WHERE ((`ugrId` = @Original_ugrId) AND (`ugrName` = @Orig" +
                "inal_ugrName))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ugrId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ugrId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ugrName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ugrName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `usergroup` (`ugrName`) VALUES (@ugrName)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ugrName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ugrName";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `usergroup` SET `ugrName` = @ugrName WHERE ((`ugrId` = @Original_ugrId) AN" +
                "D (`ugrName` = @Original_ugrName))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ugrName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ugrName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ugrId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ugrId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ugrName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ugrName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `ugrId`, `ugrName` FROM `usergroup`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.usergroupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.usergroupDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.usergroupDataTable dataTable = new amodDataSet.usergroupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.usergroupDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "usergroup");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ugrId, string Original_ugrName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ugrId));
            if ((Original_ugrName == null)) {
                throw new global::System.ArgumentNullException("Original_ugrName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ugrName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ugrName) {
            if ((ugrName == null)) {
                throw new global::System.ArgumentNullException("ugrName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ugrName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ugrName, int Original_ugrId, string Original_ugrName) {
            if ((ugrName == null)) {
                throw new global::System.ArgumentNullException("ugrName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ugrName));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ugrId));
            if ((Original_ugrName == null)) {
                throw new global::System.ArgumentNullException("Original_ugrName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_ugrName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class usergroupconnectionTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public usergroupconnectionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "usergroupconnection";
            tableMapping.ColumnMappings.Add("ugcUserId", "ugcUserId");
            tableMapping.ColumnMappings.Add("ugcGroupId", "ugcGroupId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `usergroupconnection` WHERE ((`ugcUserId` = @Original_ugcUserId) AND " +
                "(`ugcGroupId` = @Original_ugcGroupId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ugcUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ugcUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ugcGroupId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ugcGroupId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `usergroupconnection` (`ugcUserId`, `ugcGroupId`) VALUES (@ugcUserId," +
                " @ugcGroupId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ugcUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ugcUserId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ugcGroupId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ugcGroupId";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `usergroupconnection` SET `ugcUserId` = @ugcUserId, `ugcGroupId` = @ugcGro" +
                "upId WHERE ((`ugcUserId` = @Original_ugcUserId) AND (`ugcGroupId` = @Original_ug" +
                "cGroupId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ugcUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ugcUserId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ugcGroupId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ugcGroupId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ugcUserId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ugcUserId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_ugcGroupId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ugcGroupId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `ugcUserId`, `ugcGroupId` FROM `usergroupconnection`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.usergroupconnectionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.usergroupconnectionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.usergroupconnectionDataTable dataTable = new amodDataSet.usergroupconnectionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.usergroupconnectionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "usergroupconnection");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ugcUserId, int Original_ugcGroupId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ugcUserId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ugcGroupId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ugcUserId, int ugcGroupId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ugcUserId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ugcGroupId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ugcUserId, int ugcGroupId, int Original_ugcUserId, int Original_ugcGroupId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ugcUserId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ugcGroupId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ugcUserId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ugcGroupId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Original_ugcUserId, int Original_ugcGroupId) {
            return this.Update(Original_ugcUserId, Original_ugcGroupId, Original_ugcUserId, Original_ugcGroupId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class workflowuserTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public workflowuserTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "workflowuser";
            tableMapping.ColumnMappings.Add("userId", "userId");
            tableMapping.ColumnMappings.Add("userLogin", "userLogin");
            tableMapping.ColumnMappings.Add("userIsFromAD", "userIsFromAD");
            tableMapping.ColumnMappings.Add("userPassword", "userPassword");
            tableMapping.ColumnMappings.Add("userFirstName", "userFirstName");
            tableMapping.ColumnMappings.Add("userLastName", "userLastName");
            tableMapping.ColumnMappings.Add("userManagerId", "userManagerId");
            tableMapping.ColumnMappings.Add("userIsAdmin", "userIsAdmin");
            tableMapping.ColumnMappings.Add("userEmail", "userEmail");
            tableMapping.ColumnMappings.Add("userLanguage", "userLanguage");
            tableMapping.ColumnMappings.Add("userCode", "userCode");
            tableMapping.ColumnMappings.Add("userDepartmentId", "userDepartmentId");
            tableMapping.ColumnMappings.Add("userLocation", "userLocation");
            tableMapping.ColumnMappings.Add("userPhoneNumbers", "userPhoneNumbers");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `workflowuser` WHERE ((`userId` = @Original_userId) AND (`userLogin` = @Original_userLogin) AND (`userIsFromAD` = @Original_userIsFromAD) AND ((@IsNull_userPassword = 1 AND `userPassword` IS NULL) OR (`userPassword` = @Original_userPassword)) AND (`userFirstName` = @Original_userFirstName) AND (`userLastName` = @Original_userLastName) AND ((@IsNull_userManagerId = 1 AND `userManagerId` IS NULL) OR (`userManagerId` = @Original_userManagerId)) AND ((@IsNull_userIsAdmin = 1 AND `userIsAdmin` IS NULL) OR (`userIsAdmin` = @Original_userIsAdmin)) AND ((@IsNull_userEmail = 1 AND `userEmail` IS NULL) OR (`userEmail` = @Original_userEmail)) AND ((@IsNull_userLanguage = 1 AND `userLanguage` IS NULL) OR (`userLanguage` = @Original_userLanguage)) AND ((@IsNull_userCode = 1 AND `userCode` IS NULL) OR (`userCode` = @Original_userCode)) AND ((@IsNull_userDepartmentId = 1 AND `userDepartmentId` IS NULL) OR (`userDepartmentId` = @Original_userDepartmentId)) AND ((@IsNull_userLocation = 1 AND `userLocation` IS NULL) OR (`userLocation` = @Original_userLocation)) AND ((@IsNull_userPhoneNumbers = 1 AND `userPhoneNumbers` IS NULL) OR (`userPhoneNumbers` = @Original_userPhoneNumbers)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userLogin";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLogin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userIsFromAD";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "userIsFromAD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userPassword";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userPassword";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userPassword";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userPassword";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userFirstName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userFirstName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userLastName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLastName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userManagerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userManagerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userIsAdmin";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userIsAdmin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userIsAdmin";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "userIsAdmin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userEmail";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userEmail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userEmail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userEmail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userLanguage";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userLanguage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userLanguage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLanguage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userDepartmentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userDepartmentId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userDepartmentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userDepartmentId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userLocation";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userLocation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userLocation";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLocation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userPhoneNumbers";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userPhoneNumbers";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userPhoneNumbers";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userPhoneNumbers";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `workflowuser` (`userLogin`, `userIsFromAD`, `userPassword`, `userFirstName`, `userLastName`, `userManagerId`, `userIsAdmin`, `userEmail`, `userLanguage`, `userCode`, `userDepartmentId`, `userLocation`, `userPhoneNumbers`) VALUES (@userLogin, @userIsFromAD, @userPassword, @userFirstName, @userLastName, @userManagerId, @userIsAdmin, @userEmail, @userLanguage, @userCode, @userDepartmentId, @userLocation, @userPhoneNumbers)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userLogin";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLogin";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userIsFromAD";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "userIsFromAD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userPassword";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userPassword";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userFirstName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userFirstName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userLastName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLastName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userManagerId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userIsAdmin";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "userIsAdmin";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userEmail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userEmail";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userLanguage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLanguage";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userDepartmentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userDepartmentId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userLocation";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLocation";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userPhoneNumbers";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userPhoneNumbers";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `workflowuser` SET `userLogin` = @userLogin, `userIsFromAD` = @userIsFromA" +
                "D, `userPassword` = @userPassword, `userFirstName` = @userFirstName, `userLastNa" +
                "me` = @userLastName, `userManagerId` = @userManagerId, `userIsAdmin` = @userIsAd" +
                "min, `userEmail` = @userEmail, `userLanguage` = @userLanguage, `userCode` = @use" +
                "rCode, `userDepartmentId` = @userDepartmentId, `userLocation` = @userLocation, `" +
                "userPhoneNumbers` = @userPhoneNumbers WHERE ((`userId` = @Original_userId) AND (" +
                "`userLogin` = @Original_userLogin) AND (`userIsFromAD` = @Original_userIsFromAD)" +
                " AND ((@IsNull_userPassword = 1 AND `userPassword` IS NULL) OR (`userPassword` =" +
                " @Original_userPassword)) AND (`userFirstName` = @Original_userFirstName) AND (`" +
                "userLastName` = @Original_userLastName) AND ((@IsNull_userManagerId = 1 AND `use" +
                "rManagerId` IS NULL) OR (`userManagerId` = @Original_userManagerId)) AND ((@IsNu" +
                "ll_userIsAdmin = 1 AND `userIsAdmin` IS NULL) OR (`userIsAdmin` = @Original_user" +
                "IsAdmin)) AND ((@IsNull_userEmail = 1 AND `userEmail` IS NULL) OR (`userEmail` =" +
                " @Original_userEmail)) AND ((@IsNull_userLanguage = 1 AND `userLanguage` IS NULL" +
                ") OR (`userLanguage` = @Original_userLanguage)) AND ((@IsNull_userCode = 1 AND `" +
                "userCode` IS NULL) OR (`userCode` = @Original_userCode)) AND ((@IsNull_userDepar" +
                "tmentId = 1 AND `userDepartmentId` IS NULL) OR (`userDepartmentId` = @Original_u" +
                "serDepartmentId)) AND ((@IsNull_userLocation = 1 AND `userLocation` IS NULL) OR " +
                "(`userLocation` = @Original_userLocation)) AND ((@IsNull_userPhoneNumbers = 1 AN" +
                "D `userPhoneNumbers` IS NULL) OR (`userPhoneNumbers` = @Original_userPhoneNumber" +
                "s)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userLogin";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLogin";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userIsFromAD";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "userIsFromAD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userPassword";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userPassword";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userFirstName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userFirstName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userLastName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLastName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userManagerId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userIsAdmin";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "userIsAdmin";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userEmail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userEmail";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userLanguage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLanguage";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userDepartmentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userDepartmentId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userLocation";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLocation";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@userPhoneNumbers";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userPhoneNumbers";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userLogin";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLogin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userIsFromAD";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "userIsFromAD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userPassword";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userPassword";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userPassword";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userPassword";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userFirstName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userFirstName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userLastName";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLastName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userManagerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userManagerId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userManagerId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userIsAdmin";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userIsAdmin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userIsAdmin";
            param.DbType = global::System.Data.DbType.UInt64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Bit;
            param.IsNullable = true;
            param.SourceColumn = "userIsAdmin";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userEmail";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userEmail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userEmail";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userEmail";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userLanguage";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userLanguage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userLanguage";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLanguage";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userCode";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userDepartmentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userDepartmentId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userDepartmentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userDepartmentId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userLocation";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userLocation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userLocation";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userLocation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_userPhoneNumbers";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "userPhoneNumbers";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_userPhoneNumbers";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "userPhoneNumbers";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::DCUpdate.Properties.Settings.Default.amodConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `userId`, `userLogin`, `userIsFromAD`, `userPassword`, `userFirstName`, `u" +
                "serLastName`, `userManagerId`, `userIsAdmin`, `userEmail`, `userLanguage`, `user" +
                "Code`, `userDepartmentId`, `userLocation`, `userPhoneNumbers` FROM `workflowuser" +
                "`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(amodDataSet.workflowuserDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual amodDataSet.workflowuserDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            amodDataSet.workflowuserDataTable dataTable = new amodDataSet.workflowuserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet.workflowuserDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(amodDataSet dataSet) {
            return this.Adapter.Update(dataSet, "workflowuser");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_userId, string Original_userLogin, ulong Original_userIsFromAD, string Original_userPassword, string Original_userFirstName, string Original_userLastName, global::System.Nullable<int> Original_userManagerId, global::System.Nullable<ulong> Original_userIsAdmin, string Original_userEmail, string Original_userLanguage, string Original_userCode, global::System.Nullable<int> Original_userDepartmentId, string Original_userLocation, string Original_userPhoneNumbers) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_userId));
            if ((Original_userLogin == null)) {
                throw new global::System.ArgumentNullException("Original_userLogin");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_userLogin));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((ulong)(Original_userIsFromAD));
            if ((Original_userPassword == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_userPassword));
            }
            if ((Original_userFirstName == null)) {
                throw new global::System.ArgumentNullException("Original_userFirstName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_userFirstName));
            }
            if ((Original_userLastName == null)) {
                throw new global::System.ArgumentNullException("Original_userLastName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_userLastName));
            }
            if ((Original_userManagerId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_userManagerId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_userIsAdmin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((ulong)(Original_userIsAdmin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_userEmail == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_userEmail));
            }
            if ((Original_userLanguage == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_userLanguage));
            }
            if ((Original_userCode == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_userCode));
            }
            if ((Original_userDepartmentId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_userDepartmentId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_userLocation == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_userLocation));
            }
            if ((Original_userPhoneNumbers == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_userPhoneNumbers));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string userLogin, ulong userIsFromAD, string userPassword, string userFirstName, string userLastName, global::System.Nullable<int> userManagerId, global::System.Nullable<ulong> userIsAdmin, string userEmail, string userLanguage, string userCode, global::System.Nullable<int> userDepartmentId, string userLocation, string userPhoneNumbers) {
            if ((userLogin == null)) {
                throw new global::System.ArgumentNullException("userLogin");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(userLogin));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((ulong)(userIsFromAD));
            if ((userPassword == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(userPassword));
            }
            if ((userFirstName == null)) {
                throw new global::System.ArgumentNullException("userFirstName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(userFirstName));
            }
            if ((userLastName == null)) {
                throw new global::System.ArgumentNullException("userLastName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(userLastName));
            }
            if ((userManagerId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(userManagerId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((userIsAdmin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((ulong)(userIsAdmin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((userEmail == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(userEmail));
            }
            if ((userLanguage == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(userLanguage));
            }
            if ((userCode == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(userCode));
            }
            if ((userDepartmentId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(userDepartmentId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((userLocation == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(userLocation));
            }
            if ((userPhoneNumbers == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(userPhoneNumbers));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string userLogin, 
                    ulong userIsFromAD, 
                    string userPassword, 
                    string userFirstName, 
                    string userLastName, 
                    global::System.Nullable<int> userManagerId, 
                    global::System.Nullable<ulong> userIsAdmin, 
                    string userEmail, 
                    string userLanguage, 
                    string userCode, 
                    global::System.Nullable<int> userDepartmentId, 
                    string userLocation, 
                    string userPhoneNumbers, 
                    int Original_userId, 
                    string Original_userLogin, 
                    ulong Original_userIsFromAD, 
                    string Original_userPassword, 
                    string Original_userFirstName, 
                    string Original_userLastName, 
                    global::System.Nullable<int> Original_userManagerId, 
                    global::System.Nullable<ulong> Original_userIsAdmin, 
                    string Original_userEmail, 
                    string Original_userLanguage, 
                    string Original_userCode, 
                    global::System.Nullable<int> Original_userDepartmentId, 
                    string Original_userLocation, 
                    string Original_userPhoneNumbers) {
            if ((userLogin == null)) {
                throw new global::System.ArgumentNullException("userLogin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(userLogin));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((ulong)(userIsFromAD));
            if ((userPassword == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(userPassword));
            }
            if ((userFirstName == null)) {
                throw new global::System.ArgumentNullException("userFirstName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(userFirstName));
            }
            if ((userLastName == null)) {
                throw new global::System.ArgumentNullException("userLastName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(userLastName));
            }
            if ((userManagerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(userManagerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((userIsAdmin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((ulong)(userIsAdmin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((userEmail == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(userEmail));
            }
            if ((userLanguage == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(userLanguage));
            }
            if ((userCode == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(userCode));
            }
            if ((userDepartmentId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(userDepartmentId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((userLocation == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(userLocation));
            }
            if ((userPhoneNumbers == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(userPhoneNumbers));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_userId));
            if ((Original_userLogin == null)) {
                throw new global::System.ArgumentNullException("Original_userLogin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_userLogin));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((ulong)(Original_userIsFromAD));
            if ((Original_userPassword == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_userPassword));
            }
            if ((Original_userFirstName == null)) {
                throw new global::System.ArgumentNullException("Original_userFirstName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_userFirstName));
            }
            if ((Original_userLastName == null)) {
                throw new global::System.ArgumentNullException("Original_userLastName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_userLastName));
            }
            if ((Original_userManagerId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_userManagerId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_userIsAdmin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((ulong)(Original_userIsAdmin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_userEmail == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_userEmail));
            }
            if ((Original_userLanguage == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_userLanguage));
            }
            if ((Original_userCode == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_userCode));
            }
            if ((Original_userDepartmentId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_userDepartmentId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_userLocation == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_userLocation));
            }
            if ((Original_userPhoneNumbers == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_userPhoneNumbers));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591